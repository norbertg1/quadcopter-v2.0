   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	I2C_Variable,4,4
  19              		.comm	uart_data,1,1
  20              		.comm	adc_data,60,4
  21              		.comm	Kp,4,4
  22              		.comm	Kd,4,4
  23              		.comm	Ki,4,4
  24              		.comm	zKp,4,4
  25              		.comm	zKd,4,4
  26              		.comm	basepower,4,4
  27              		.comm	setpoint_x,4,4
  28              		.comm	setpoint_y,4,4
  29              		.comm	setpoint_z,4,4
  30              		.comm	setpoint_alt,4,4
  31              		.comm	batt1_vol,4,4
  32              		.comm	batt2_vol,4,4
  33              		.comm	batt3_vol,4,4
  34              		.comm	BATT_VOLT,4,4
  35              		.comm	FatFs,560,4
  36              		.comm	fil,548,4
  37              		.comm	GYRO_XOUT_OFFSET,2,2
  38              		.comm	GYRO_YOUT_OFFSET,2,2
  39              		.comm	GYRO_ZOUT_OFFSET,2,2
  40              		.comm	ACCEL_XOUT_OFFSET,2,2
  41              		.comm	ACCEL_YOUT_OFFSET,2,2
  42              		.comm	ACCEL_ZOUT_OFFSET,2,2
  43              		.comm	GYRO_XANGLE,4,4
  44              		.comm	GYRO_YANGLE,4,4
  45              		.comm	GYRO_ZANGLE,4,4
  46              		.comm	GYRO_XOUT,2,2
  47              		.comm	GYRO_YOUT,2,2
  48              		.comm	GYRO_ZOUT,2,2
  49              		.comm	ACCEL_XOUT,2,2
  50              		.comm	ACCEL_YOUT,2,2
  51              		.comm	ACCEL_ZOUT,2,2
  52              		.comm	ACCEL_Gx,4,4
  53              		.comm	ACCEL_Gy,4,4
  54              		.comm	ACCEL_Gz,4,4
  55              		.comm	ACCEL,8,8
  56              		.comm	GYRO_XRATE,4,4
  57              		.comm	GYRO_YRATE,4,4
  58              		.comm	GYRO_ZRATE,4,4
  59              		.comm	ACCEL_XANGLE,4,4
  60              		.comm	ACCEL_YANGLE,4,4
  61              		.comm	gyro_xsensitivity,4,4
  62              		.comm	gyro_ysensitivity,4,4
  63              		.comm	gyro_zsensitivity,4,4
  64              		.comm	a,4,4
  65              		.comm	dt,4,4
  66              		.comm	COMPLEMENTARY_XANGLE,4,4
  67              		.comm	COMPLEMENTARY_YANGLE,4,4
  68              		.comm	filter_xterm,12,4
  69              		.comm	filter_yterm,12,4
  70              		.comm	XANGLE_OFFSET,4,4
  71              		.comm	YANGLE_OFFSET,4,4
  72              		.comm	TEMP,4,4
  73              		.comm	timeConstant,4,4
  74              		.comm	MPU_6050_buffer,14,4
  75              		.comm	AC1,2,2
  76              		.comm	AC2,2,2
  77              		.comm	AC3,2,2
  78              		.comm	B1,2,2
  79              		.comm	B2,2,2
  80              		.comm	MB,2,2
  81              		.comm	MC,2,2
  82              		.comm	MD,2,2
  83              		.comm	AC4,2,2
  84              		.comm	AC5,2,2
  85              		.comm	AC6,2,2
  86              		.comm	T,4,4
  87              		.comm	absolute_altittude,4,4
  88              		.comm	start_altittude,4,4
  89              		.comm	relative_altittude,4,4
  90              		.comm	P,4,4
  91              		.align	2
  92              		.global	ADC_Cal
  93              		.thumb
  94              		.thumb_func
  96              	ADC_Cal:
  97              	.LFB0:
  98              		.file 1 "../Sources/processor_specific_functions/K40/ADC.c"
   1:../Sources/processor_specific_functions/K40/ADC.c **** /*
   2:../Sources/processor_specific_functions/K40/ADC.c ****  * ADC.c
   3:../Sources/processor_specific_functions/K40/ADC.c ****  *
   4:../Sources/processor_specific_functions/K40/ADC.c ****  *  Created on: Dec 21, 2014
   5:../Sources/processor_specific_functions/K40/ADC.c ****  *      Author: Norbi
   6:../Sources/processor_specific_functions/K40/ADC.c ****  */
   7:../Sources/processor_specific_functions/K40/ADC.c **** 
   8:../Sources/processor_specific_functions/K40/ADC.c **** 
   9:../Sources/processor_specific_functions/K40/ADC.c **** /*
  10:../Sources/processor_specific_functions/K40/ADC.c ****  * File:		a16dc.c
  11:../Sources/processor_specific_functions/K40/ADC.c ****  * Purpose:		Simple Driver or API for AdC16/PGA
  12:../Sources/processor_specific_functions/K40/ADC.c ****  * This file contains the following two functions:
  13:../Sources/processor_specific_functions/K40/ADC.c ****  *  1. ADC_Cal: calibrates the ADC
  14:../Sources/processor_specific_functions/K40/ADC.c ****  *  2. ADC_Config_Alt: Simply configures an ADC per a structure
  15:../Sources/processor_specific_functions/K40/ADC.c ****  *
  16:../Sources/processor_specific_functions/K40/ADC.c ****  * Typical usage: Fill the structure with the ADC and PGA register contents 
  17:../Sources/processor_specific_functions/K40/ADC.c ****  * needed for the ADC usage.
  18:../Sources/processor_specific_functions/K40/ADC.c **** 
  19:../Sources/processor_specific_functions/K40/ADC.c ****  * a) Call the ADC_Config_Alt function to configure an ADC, (ADC0 or ADC1)
  20:../Sources/processor_specific_functions/K40/ADC.c ****  * b) Call the ADC_Cal function to calibrate that ADC
  21:../Sources/processor_specific_functions/K40/ADC.c ****  * c) Call the ADC_Config_Alt function again to restore desired configuation
  22:../Sources/processor_specific_functions/K40/ADC.c ****  *    after a calibration
  23:../Sources/processor_specific_functions/K40/ADC.c ****  *
  24:../Sources/processor_specific_functions/K40/ADC.c ****  *
  25:../Sources/processor_specific_functions/K40/ADC.c ****  */
  26:../Sources/processor_specific_functions/K40/ADC.c **** 
  27:../Sources/processor_specific_functions/K40/ADC.c **** #include "init.h"
  28:../Sources/processor_specific_functions/K40/ADC.c **** 
  29:../Sources/processor_specific_functions/K40/ADC.c **** 
  30:../Sources/processor_specific_functions/K40/ADC.c **** /******************************************************************************
  31:../Sources/processor_specific_functions/K40/ADC.c **** Function 1. Name	AUTO CAL ROUTINE   
  32:../Sources/processor_specific_functions/K40/ADC.c **** 
  33:../Sources/processor_specific_functions/K40/ADC.c **** Parameters		ADC module pointer points to adc0 or adc1 register map 
  34:../Sources/processor_specific_functions/K40/ADC.c ****                          base address.
  35:../Sources/processor_specific_functions/K40/ADC.c **** Returns			Zero indicates success.
  36:../Sources/processor_specific_functions/K40/ADC.c **** Notes         		Calibrates the ADC16. Required to meet specifications 
  37:../Sources/processor_specific_functions/K40/ADC.c ****                         after reset and before a conversion is initiated.
  38:../Sources/processor_specific_functions/K40/ADC.c **** ******************************************************************************/
  39:../Sources/processor_specific_functions/K40/ADC.c **** uint8_t ADC_Cal(ADC_MemMapPtr adcmap)
  40:../Sources/processor_specific_functions/K40/ADC.c **** {
  99              		.loc 1 40 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 80B4     		push	{r7}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 85B0     		sub	sp, sp, #20
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 24
 111 0004 00AF     		add	r7, sp, #0
 112              	.LCFI2:
 113              		.cfi_def_cfa_register 7
 114 0006 7860     		str	r0, [r7, #4]
  41:../Sources/processor_specific_functions/K40/ADC.c **** 
  42:../Sources/processor_specific_functions/K40/ADC.c ****   unsigned short cal_var;
  43:../Sources/processor_specific_functions/K40/ADC.c ****   
  44:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
 115              		.loc 1 44 0
 116 0008 7B68     		ldr	r3, [r7, #4]
 117 000a 1B6A     		ldr	r3, [r3, #32]
 118 000c 23F04002 		bic	r2, r3, #64
 119 0010 7B68     		ldr	r3, [r7, #4]
 120 0012 1A62     		str	r2, [r3, #32]
  45:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
 121              		.loc 1 45 0
 122 0014 7B68     		ldr	r3, [r7, #4]
 123 0016 5B6A     		ldr	r3, [r3, #36]
 124 0018 23F00B02 		bic	r2, r3, #11
 125 001c 7B68     		ldr	r3, [r7, #4]
 126 001e 5A62     		str	r2, [r3, #36]
  46:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
 127              		.loc 1 46 0
 128 0020 7B68     		ldr	r3, [r7, #4]
 129 0022 5B6A     		ldr	r3, [r3, #36]
 130 0024 43F00702 		orr	r2, r3, #7
 131 0028 7B68     		ldr	r3, [r7, #4]
 132 002a 5A62     		str	r2, [r3, #36]
  47:../Sources/processor_specific_functions/K40/ADC.c ****   
  48:../Sources/processor_specific_functions/K40/ADC.c ****   
  49:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
 133              		.loc 1 49 0
 134 002c 7B68     		ldr	r3, [r7, #4]
 135 002e 5B6A     		ldr	r3, [r3, #36]
 136 0030 43F08002 		orr	r2, r3, #128
 137 0034 7B68     		ldr	r3, [r7, #4]
 138 0036 5A62     		str	r2, [r3, #36]
  50:../Sources/processor_specific_functions/K40/ADC.c ****   while ( (ADC_SC1_REG(adcmap,Ach) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
 139              		.loc 1 50 0
 140 0038 00BF     		nop
 141              	.L2:
 142              		.loc 1 50 0 is_stmt 0 discriminator 1
 143 003a 7B68     		ldr	r3, [r7, #4]
 144 003c 1B68     		ldr	r3, [r3, #0]
 145 003e 03F08003 		and	r3, r3, #128
 146 0042 002B     		cmp	r3, #0
 147 0044 F9D0     		beq	.L2
  51:../Sources/processor_specific_functions/K40/ADC.c ****   	
  52:../Sources/processor_specific_functions/K40/ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
 148              		.loc 1 52 0 is_stmt 1
 149 0046 7B68     		ldr	r3, [r7, #4]
 150 0048 5B6A     		ldr	r3, [r3, #36]
 151 004a 03F04003 		and	r3, r3, #64
 152 004e 002B     		cmp	r3, #0
 153 0050 02D0     		beq	.L3
  53:../Sources/processor_specific_functions/K40/ADC.c ****   {  
  54:../Sources/processor_specific_functions/K40/ADC.c ****    return(1);    // Check for Calibration fail error and return 
 154              		.loc 1 54 0
 155 0052 4FF00103 		mov	r3, #1
 156 0056 69E0     		b	.L4
 157              	.L3:
  55:../Sources/processor_specific_functions/K40/ADC.c ****   }
  56:../Sources/processor_specific_functions/K40/ADC.c ****   // Calculate plus-side calibration
  57:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var = 0x00;
 158              		.loc 1 57 0
 159 0058 4FF00003 		mov	r3, #0
 160 005c FB81     		strh	r3, [r7, #14]	@ movhi
  58:../Sources/processor_specific_functions/K40/ADC.c ****   
  59:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
 161              		.loc 1 59 0
 162 005e 7B68     		ldr	r3, [r7, #4]
 163 0060 DB6C     		ldr	r3, [r3, #76]
 164 0062 FB81     		strh	r3, [r7, #14]	@ movhi
  60:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 165              		.loc 1 60 0
 166 0064 7B68     		ldr	r3, [r7, #4]
 167 0066 9B6C     		ldr	r3, [r3, #72]
 168 0068 9AB2     		uxth	r2, r3
 169 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 170 006c D318     		adds	r3, r2, r3
 171 006e FB81     		strh	r3, [r7, #14]	@ movhi
  61:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 172              		.loc 1 61 0
 173 0070 7B68     		ldr	r3, [r7, #4]
 174 0072 5B6C     		ldr	r3, [r3, #68]
 175 0074 9AB2     		uxth	r2, r3
 176 0076 FB89     		ldrh	r3, [r7, #14]	@ movhi
 177 0078 D318     		adds	r3, r2, r3
 178 007a FB81     		strh	r3, [r7, #14]	@ movhi
  62:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 179              		.loc 1 62 0
 180 007c 7B68     		ldr	r3, [r7, #4]
 181 007e 1B6C     		ldr	r3, [r3, #64]
 182 0080 9AB2     		uxth	r2, r3
 183 0082 FB89     		ldrh	r3, [r7, #14]	@ movhi
 184 0084 D318     		adds	r3, r2, r3
 185 0086 FB81     		strh	r3, [r7, #14]	@ movhi
  63:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 186              		.loc 1 63 0
 187 0088 7B68     		ldr	r3, [r7, #4]
 188 008a DB6B     		ldr	r3, [r3, #60]
 189 008c 9AB2     		uxth	r2, r3
 190 008e FB89     		ldrh	r3, [r7, #14]	@ movhi
 191 0090 D318     		adds	r3, r2, r3
 192 0092 FB81     		strh	r3, [r7, #14]	@ movhi
  64:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 193              		.loc 1 64 0
 194 0094 7B68     		ldr	r3, [r7, #4]
 195 0096 9B6B     		ldr	r3, [r3, #56]
 196 0098 9AB2     		uxth	r2, r3
 197 009a FB89     		ldrh	r3, [r7, #14]	@ movhi
 198 009c D318     		adds	r3, r2, r3
 199 009e FB81     		strh	r3, [r7, #14]	@ movhi
  65:../Sources/processor_specific_functions/K40/ADC.c **** 
  66:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var = cal_var/2;
 200              		.loc 1 66 0
 201 00a0 FB89     		ldrh	r3, [r7, #14]
 202 00a2 4FEA5303 		lsr	r3, r3, #1
 203 00a6 FB81     		strh	r3, [r7, #14]	@ movhi
  67:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var |= 0x8000; // Set MSB
 204              		.loc 1 67 0
 205 00a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 206 00aa 6FEA4343 		mvn	r3, r3, lsl #17
 207 00ae 6FEA5343 		mvn	r3, r3, lsr #17
 208 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
  68:../Sources/processor_specific_functions/K40/ADC.c **** 
  69:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 209              		.loc 1 69 0
 210 00b4 FA89     		ldrh	r2, [r7, #14]
 211 00b6 7B68     		ldr	r3, [r7, #4]
 212 00b8 DA62     		str	r2, [r3, #44]
  70:../Sources/processor_specific_functions/K40/ADC.c ****  
  71:../Sources/processor_specific_functions/K40/ADC.c **** 
  72:../Sources/processor_specific_functions/K40/ADC.c ****   // Calculate minus-side calibration
  73:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var = 0x00;
 213              		.loc 1 73 0
 214 00ba 4FF00003 		mov	r3, #0
 215 00be FB81     		strh	r3, [r7, #14]	@ movhi
  74:../Sources/processor_specific_functions/K40/ADC.c **** 
  75:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 216              		.loc 1 75 0
 217 00c0 7B68     		ldr	r3, [r7, #4]
 218 00c2 DB6E     		ldr	r3, [r3, #108]
 219 00c4 FB81     		strh	r3, [r7, #14]	@ movhi
  76:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 220              		.loc 1 76 0
 221 00c6 7B68     		ldr	r3, [r7, #4]
 222 00c8 9B6E     		ldr	r3, [r3, #104]
 223 00ca 9AB2     		uxth	r2, r3
 224 00cc FB89     		ldrh	r3, [r7, #14]	@ movhi
 225 00ce D318     		adds	r3, r2, r3
 226 00d0 FB81     		strh	r3, [r7, #14]	@ movhi
  77:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 227              		.loc 1 77 0
 228 00d2 7B68     		ldr	r3, [r7, #4]
 229 00d4 5B6E     		ldr	r3, [r3, #100]
 230 00d6 9AB2     		uxth	r2, r3
 231 00d8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 232 00da D318     		adds	r3, r2, r3
 233 00dc FB81     		strh	r3, [r7, #14]	@ movhi
  78:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 234              		.loc 1 78 0
 235 00de 7B68     		ldr	r3, [r7, #4]
 236 00e0 1B6E     		ldr	r3, [r3, #96]
 237 00e2 9AB2     		uxth	r2, r3
 238 00e4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 239 00e6 D318     		adds	r3, r2, r3
 240 00e8 FB81     		strh	r3, [r7, #14]	@ movhi
  79:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 241              		.loc 1 79 0
 242 00ea 7B68     		ldr	r3, [r7, #4]
 243 00ec DB6D     		ldr	r3, [r3, #92]
 244 00ee 9AB2     		uxth	r2, r3
 245 00f0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 246 00f2 D318     		adds	r3, r2, r3
 247 00f4 FB81     		strh	r3, [r7, #14]	@ movhi
  80:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 248              		.loc 1 80 0
 249 00f6 7B68     		ldr	r3, [r7, #4]
 250 00f8 9B6D     		ldr	r3, [r3, #88]
 251 00fa 9AB2     		uxth	r2, r3
 252 00fc FB89     		ldrh	r3, [r7, #14]	@ movhi
 253 00fe D318     		adds	r3, r2, r3
 254 0100 FB81     		strh	r3, [r7, #14]	@ movhi
  81:../Sources/processor_specific_functions/K40/ADC.c **** 
  82:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var = cal_var/2;
 255              		.loc 1 82 0
 256 0102 FB89     		ldrh	r3, [r7, #14]
 257 0104 4FEA5303 		lsr	r3, r3, #1
 258 0108 FB81     		strh	r3, [r7, #14]	@ movhi
  83:../Sources/processor_specific_functions/K40/ADC.c **** 
  84:../Sources/processor_specific_functions/K40/ADC.c ****   cal_var |= 0x8000; // Set MSB
 259              		.loc 1 84 0
 260 010a FB89     		ldrh	r3, [r7, #14]	@ movhi
 261 010c 6FEA4343 		mvn	r3, r3, lsl #17
 262 0110 6FEA5343 		mvn	r3, r3, lsr #17
 263 0114 FB81     		strh	r3, [r7, #14]	@ movhi
  85:../Sources/processor_specific_functions/K40/ADC.c **** 
  86:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 264              		.loc 1 86 0
 265 0116 FA89     		ldrh	r2, [r7, #14]
 266 0118 7B68     		ldr	r3, [r7, #4]
 267 011a 1A63     		str	r2, [r3, #48]
  87:../Sources/processor_specific_functions/K40/ADC.c ****   
  88:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 268              		.loc 1 88 0
 269 011c 7B68     		ldr	r3, [r7, #4]
 270 011e 5B6A     		ldr	r3, [r3, #36]
 271 0120 23F08002 		bic	r2, r3, #128
 272 0124 7B68     		ldr	r3, [r7, #4]
 273 0126 5A62     		str	r2, [r3, #36]
  89:../Sources/processor_specific_functions/K40/ADC.c **** 
  90:../Sources/processor_specific_functions/K40/ADC.c ****   return(0);
 274              		.loc 1 90 0
 275 0128 4FF00003 		mov	r3, #0
 276              	.L4:
  91:../Sources/processor_specific_functions/K40/ADC.c **** }
 277              		.loc 1 91 0
 278 012c 1846     		mov	r0, r3
 279 012e 07F11407 		add	r7, r7, #20
 280 0132 BD46     		mov	sp, r7
 281 0134 80BC     		pop	{r7}
 282 0136 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE0:
 286              		.align	2
 287              		.global	ADC_Config
 288              		.thumb
 289              		.thumb_func
 291              	ADC_Config:
 292              	.LFB1:
  92:../Sources/processor_specific_functions/K40/ADC.c **** 
  93:../Sources/processor_specific_functions/K40/ADC.c **** 
  94:../Sources/processor_specific_functions/K40/ADC.c **** 
  95:../Sources/processor_specific_functions/K40/ADC.c **** 
  96:../Sources/processor_specific_functions/K40/ADC.c **** /******************************************************************************
  97:../Sources/processor_specific_functions/K40/ADC.c **** Function   : Name 	ADC_Config_Alt 
  98:../Sources/processor_specific_functions/K40/ADC.c **** Parameters :		the register values to be set in the adc in a structure
  99:../Sources/processor_specific_functions/K40/ADC.c **** Returns		 :	NONE
 100:../Sources/processor_specific_functions/K40/ADC.c **** Notes       	Configures ADC0 or ADC1 depending on adcmap
 101:../Sources/processor_specific_functions/K40/ADC.c ****               Prior to calling this function populate the structure
 102:../Sources/processor_specific_functions/K40/ADC.c ****               elements with the desired ADC configuration.
 103:../Sources/processor_specific_functions/K40/ADC.c **** ******************************************************************************/
 104:../Sources/processor_specific_functions/K40/ADC.c **** void ADC_Config(ADC_MemMapPtr adcmap, uint8_t CONFIG1, uint8_t CONFIG2, uint16_t COMPARE1, uint16_t
 105:../Sources/processor_specific_functions/K40/ADC.c **** {
 293              		.loc 1 105 0
 294              		.cfi_startproc
 295              		@ args = 24, pretend = 0, frame = 8
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0138 80B4     		push	{r7}
 299              	.LCFI3:
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 013a 83B0     		sub	sp, sp, #12
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 16
 305 013c 00AF     		add	r7, sp, #0
 306              	.LCFI5:
 307              		.cfi_def_cfa_register 7
 308 013e 7860     		str	r0, [r7, #4]
 309 0140 F970     		strb	r1, [r7, #3]
 310 0142 BA70     		strb	r2, [r7, #2]
 311 0144 3B80     		strh	r3, [r7, #0]	@ movhi
 106:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_CFG1_REG(adcmap) = CONFIG1;
 312              		.loc 1 106 0
 313 0146 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 314 0148 7B68     		ldr	r3, [r7, #4]
 315 014a 9A60     		str	r2, [r3, #8]
 107:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_CFG2_REG(adcmap) = CONFIG2;
 316              		.loc 1 107 0
 317 014c BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 318 014e 7B68     		ldr	r3, [r7, #4]
 319 0150 DA60     		str	r2, [r3, #12]
 108:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_CV1_REG(adcmap) = COMPARE1; 
 320              		.loc 1 108 0
 321 0152 3A88     		ldrh	r2, [r7, #0]
 322 0154 7B68     		ldr	r3, [r7, #4]
 323 0156 9A61     		str	r2, [r3, #24]
 109:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_CV2_REG(adcmap) = COMPARE2;
 324              		.loc 1 109 0
 325 0158 3A8A     		ldrh	r2, [r7, #16]
 326 015a 7B68     		ldr	r3, [r7, #4]
 327 015c DA61     		str	r2, [r3, #28]
 110:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC2_REG(adcmap) = STATUS2;
 328              		.loc 1 110 0
 329 015e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 330 0160 7B68     		ldr	r3, [r7, #4]
 331 0162 1A62     		str	r2, [r3, #32]
 111:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC3_REG(adcmap) = STATUS3;
 332              		.loc 1 111 0
 333 0164 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 334 0166 7B68     		ldr	r3, [r7, #4]
 335 0168 5A62     		str	r2, [r3, #36]
 112:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC1_REG(adcmap,Ach) = STATUS1A;       
 336              		.loc 1 112 0
 337 016a 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 338 016c 7B68     		ldr	r3, [r7, #4]
 339 016e 1A60     		str	r2, [r3, #0]
 113:../Sources/processor_specific_functions/K40/ADC.c ****   ADC_SC1_REG(adcmap,Bch) = STATUS1B;      
 340              		.loc 1 113 0
 341 0170 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 342 0174 7B68     		ldr	r3, [r7, #4]
 343 0176 5A60     		str	r2, [r3, #4]
 114:../Sources/processor_specific_functions/K40/ADC.c **** }
 344              		.loc 1 114 0
 345 0178 07F10C07 		add	r7, r7, #12
 346 017c BD46     		mov	sp, r7
 347 017e 80BC     		pop	{r7}
 348 0180 7047     		bx	lr
 349              		.cfi_endproc
 350              	.LFE1:
 352 0182 00BF     		.align	2
 353              		.global	ADC_Config_Alt
 354              		.thumb
 355              		.thumb_func
 357              	ADC_Config_Alt:
 358              	.LFB2:
 115:../Sources/processor_specific_functions/K40/ADC.c **** 
 116:../Sources/processor_specific_functions/K40/ADC.c **** 
 117:../Sources/processor_specific_functions/K40/ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr adcmap, tADC_ConfigPtr ADC_CfgPtr)
 118:../Sources/processor_specific_functions/K40/ADC.c **** {
 359              		.loc 1 118 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364 0184 80B4     		push	{r7}
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 0186 83B0     		sub	sp, sp, #12
 369              	.LCFI7:
 370              		.cfi_def_cfa_offset 16
 371 0188 00AF     		add	r7, sp, #0
 372              	.LCFI8:
 373              		.cfi_def_cfa_register 7
 374 018a 7860     		str	r0, [r7, #4]
 375 018c 3960     		str	r1, [r7, #0]
 119:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 376              		.loc 1 119 0
 377 018e 3B68     		ldr	r3, [r7, #0]
 378 0190 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 379 0192 1A46     		mov	r2, r3
 380 0194 7B68     		ldr	r3, [r7, #4]
 381 0196 9A60     		str	r2, [r3, #8]
 120:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 382              		.loc 1 120 0
 383 0198 3B68     		ldr	r3, [r7, #0]
 384 019a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 385 019c 1A46     		mov	r2, r3
 386 019e 7B68     		ldr	r3, [r7, #4]
 387 01a0 DA60     		str	r2, [r3, #12]
 121:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 388              		.loc 1 121 0
 389 01a2 3B68     		ldr	r3, [r7, #0]
 390 01a4 5B88     		ldrh	r3, [r3, #2]
 391 01a6 1A46     		mov	r2, r3
 392 01a8 7B68     		ldr	r3, [r7, #4]
 393 01aa 9A61     		str	r2, [r3, #24]
 122:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 394              		.loc 1 122 0
 395 01ac 3B68     		ldr	r3, [r7, #0]
 396 01ae 9B88     		ldrh	r3, [r3, #4]
 397 01b0 1A46     		mov	r2, r3
 398 01b2 7B68     		ldr	r3, [r7, #4]
 399 01b4 DA61     		str	r2, [r3, #28]
 123:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 400              		.loc 1 123 0
 401 01b6 3B68     		ldr	r3, [r7, #0]
 402 01b8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 403 01ba 1A46     		mov	r2, r3
 404 01bc 7B68     		ldr	r3, [r7, #4]
 405 01be 1A62     		str	r2, [r3, #32]
 124:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 406              		.loc 1 124 0
 407 01c0 3B68     		ldr	r3, [r7, #0]
 408 01c2 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 409 01c4 1A46     		mov	r2, r3
 410 01c6 7B68     		ldr	r3, [r7, #4]
 411 01c8 5A62     		str	r2, [r3, #36]
 125:../Sources/processor_specific_functions/K40/ADC.c **** // ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;  //not one on P0
 126:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_SC1_REG(adcmap,Ach)= ADC_CfgPtr->STATUS1A;       
 412              		.loc 1 126 0
 413 01ca 3B68     		ldr	r3, [r7, #0]
 414 01cc 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 415 01ce 1A46     		mov	r2, r3
 416 01d0 7B68     		ldr	r3, [r7, #4]
 417 01d2 1A60     		str	r2, [r3, #0]
 127:../Sources/processor_specific_functions/K40/ADC.c ****  ADC_SC1_REG(adcmap,Bch)= ADC_CfgPtr->STATUS1B;
 418              		.loc 1 127 0
 419 01d4 3B68     		ldr	r3, [r7, #0]
 420 01d6 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 421 01d8 1A46     		mov	r2, r3
 422 01da 7B68     		ldr	r3, [r7, #4]
 423 01dc 5A60     		str	r2, [r3, #4]
 128:../Sources/processor_specific_functions/K40/ADC.c **** }
 424              		.loc 1 128 0
 425 01de 07F10C07 		add	r7, r7, #12
 426 01e2 BD46     		mov	sp, r7
 427 01e4 80BC     		pop	{r7}
 428 01e6 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE2:
 432              		.align	2
 433              		.global	ADC_Read_Cal
 434              		.thumb
 435              		.thumb_func
 437              	ADC_Read_Cal:
 438              	.LFB3:
 129:../Sources/processor_specific_functions/K40/ADC.c **** 
 130:../Sources/processor_specific_functions/K40/ADC.c **** 
 131:../Sources/processor_specific_functions/K40/ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr adcmap, tADC_Cal_Blk *blk)
 132:../Sources/processor_specific_functions/K40/ADC.c **** {
 439              		.loc 1 132 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 8
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444 01e8 80B4     		push	{r7}
 445              	.LCFI9:
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 01ea 83B0     		sub	sp, sp, #12
 449              	.LCFI10:
 450              		.cfi_def_cfa_offset 16
 451 01ec 00AF     		add	r7, sp, #0
 452              	.LCFI11:
 453              		.cfi_def_cfa_register 7
 454 01ee 7860     		str	r0, [r7, #4]
 455 01f0 3960     		str	r1, [r7, #0]
 133:../Sources/processor_specific_functions/K40/ADC.c ****   blk->OFS  = ADC_OFS_REG(adcmap);
 456              		.loc 1 133 0
 457 01f2 7B68     		ldr	r3, [r7, #4]
 458 01f4 9B6A     		ldr	r3, [r3, #40]
 459 01f6 9AB2     		uxth	r2, r3
 460 01f8 3B68     		ldr	r3, [r7, #0]
 461 01fa 1A80     		strh	r2, [r3, #0]	@ movhi
 134:../Sources/processor_specific_functions/K40/ADC.c ****   blk->PG   = ADC_PG_REG(adcmap); 
 462              		.loc 1 134 0
 463 01fc 7B68     		ldr	r3, [r7, #4]
 464 01fe DB6A     		ldr	r3, [r3, #44]
 465 0200 9AB2     		uxth	r2, r3
 466 0202 3B68     		ldr	r3, [r7, #0]
 467 0204 5A80     		strh	r2, [r3, #2]	@ movhi
 135:../Sources/processor_specific_functions/K40/ADC.c ****   blk->MG   = ADC_MG_REG(adcmap); 
 468              		.loc 1 135 0
 469 0206 7B68     		ldr	r3, [r7, #4]
 470 0208 1B6B     		ldr	r3, [r3, #48]
 471 020a 9AB2     		uxth	r2, r3
 472 020c 3B68     		ldr	r3, [r7, #0]
 473 020e 9A80     		strh	r2, [r3, #4]	@ movhi
 136:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLPD = ADC_CLPD_REG(adcmap); 
 474              		.loc 1 136 0
 475 0210 7B68     		ldr	r3, [r7, #4]
 476 0212 5B6B     		ldr	r3, [r3, #52]
 477 0214 DAB2     		uxtb	r2, r3
 478 0216 3B68     		ldr	r3, [r7, #0]
 479 0218 9A71     		strb	r2, [r3, #6]
 137:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLPS = ADC_CLPS_REG(adcmap); 
 480              		.loc 1 137 0
 481 021a 7B68     		ldr	r3, [r7, #4]
 482 021c 9B6B     		ldr	r3, [r3, #56]
 483 021e DAB2     		uxtb	r2, r3
 484 0220 3B68     		ldr	r3, [r7, #0]
 485 0222 DA71     		strb	r2, [r3, #7]
 138:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 486              		.loc 1 138 0
 487 0224 7B68     		ldr	r3, [r7, #4]
 488 0226 DB6B     		ldr	r3, [r3, #60]
 489 0228 9AB2     		uxth	r2, r3
 490 022a 3B68     		ldr	r3, [r7, #0]
 491 022c 1A81     		strh	r2, [r3, #8]	@ movhi
 139:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 492              		.loc 1 139 0
 493 022e 7B68     		ldr	r3, [r7, #4]
 494 0230 1B6C     		ldr	r3, [r3, #64]
 495 0232 9AB2     		uxth	r2, r3
 496 0234 3B68     		ldr	r3, [r7, #0]
 497 0236 5A81     		strh	r2, [r3, #10]	@ movhi
 140:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 498              		.loc 1 140 0
 499 0238 7B68     		ldr	r3, [r7, #4]
 500 023a 5B6C     		ldr	r3, [r3, #68]
 501 023c DAB2     		uxtb	r2, r3
 502 023e 3B68     		ldr	r3, [r7, #0]
 503 0240 1A73     		strb	r2, [r3, #12]
 141:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLP1 = ADC_CLP1_REG(adcmap);
 504              		.loc 1 141 0
 505 0242 7B68     		ldr	r3, [r7, #4]
 506 0244 9B6C     		ldr	r3, [r3, #72]
 507 0246 DAB2     		uxtb	r2, r3
 508 0248 3B68     		ldr	r3, [r7, #0]
 509 024a 5A73     		strb	r2, [r3, #13]
 142:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLP0 = ADC_CLP0_REG(adcmap);
 510              		.loc 1 142 0
 511 024c 7B68     		ldr	r3, [r7, #4]
 512 024e DB6C     		ldr	r3, [r3, #76]
 513 0250 DAB2     		uxtb	r2, r3
 514 0252 3B68     		ldr	r3, [r7, #0]
 515 0254 9A73     		strb	r2, [r3, #14]
 143:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLMD = ADC_CLMD_REG(adcmap); 
 516              		.loc 1 143 0
 517 0256 7B68     		ldr	r3, [r7, #4]
 518 0258 5B6D     		ldr	r3, [r3, #84]
 519 025a DAB2     		uxtb	r2, r3
 520 025c 3B68     		ldr	r3, [r7, #0]
 521 025e 1A74     		strb	r2, [r3, #16]
 144:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLMS = ADC_CLMS_REG(adcmap); 
 522              		.loc 1 144 0
 523 0260 7B68     		ldr	r3, [r7, #4]
 524 0262 9B6D     		ldr	r3, [r3, #88]
 525 0264 DAB2     		uxtb	r2, r3
 526 0266 3B68     		ldr	r3, [r7, #0]
 527 0268 5A74     		strb	r2, [r3, #17]
 145:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 528              		.loc 1 145 0
 529 026a 7B68     		ldr	r3, [r7, #4]
 530 026c DB6D     		ldr	r3, [r3, #92]
 531 026e 9AB2     		uxth	r2, r3
 532 0270 3B68     		ldr	r3, [r7, #0]
 533 0272 5A82     		strh	r2, [r3, #18]	@ movhi
 146:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 534              		.loc 1 146 0
 535 0274 7B68     		ldr	r3, [r7, #4]
 536 0276 1B6E     		ldr	r3, [r3, #96]
 537 0278 9AB2     		uxth	r2, r3
 538 027a 3B68     		ldr	r3, [r7, #0]
 539 027c 9A82     		strh	r2, [r3, #20]	@ movhi
 147:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 540              		.loc 1 147 0
 541 027e 7B68     		ldr	r3, [r7, #4]
 542 0280 5B6E     		ldr	r3, [r3, #100]
 543 0282 DAB2     		uxtb	r2, r3
 544 0284 3B68     		ldr	r3, [r7, #0]
 545 0286 9A75     		strb	r2, [r3, #22]
 148:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLM1 = ADC_CLM1_REG(adcmap);
 546              		.loc 1 148 0
 547 0288 7B68     		ldr	r3, [r7, #4]
 548 028a 9B6E     		ldr	r3, [r3, #104]
 549 028c DAB2     		uxtb	r2, r3
 550 028e 3B68     		ldr	r3, [r7, #0]
 551 0290 DA75     		strb	r2, [r3, #23]
 149:../Sources/processor_specific_functions/K40/ADC.c ****   blk->CLM0 = ADC_CLM0_REG(adcmap);
 552              		.loc 1 149 0
 553 0292 7B68     		ldr	r3, [r7, #4]
 554 0294 DB6E     		ldr	r3, [r3, #108]
 555 0296 DAB2     		uxtb	r2, r3
 556 0298 3B68     		ldr	r3, [r7, #0]
 557 029a 1A76     		strb	r2, [r3, #24]
 150:../Sources/processor_specific_functions/K40/ADC.c ****   
 151:../Sources/processor_specific_functions/K40/ADC.c **** }
 558              		.loc 1 151 0
 559 029c 07F10C07 		add	r7, r7, #12
 560 02a0 BD46     		mov	sp, r7
 561 02a2 80BC     		pop	{r7}
 562 02a4 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE3:
 566              		.comm	Master_Adc_Config,16,4
 567 02a6 00BF     		.align	2
 568              		.global	InitADC
 569              		.thumb
 570              		.thumb_func
 572              	InitADC:
 573              	.LFB4:
 152:../Sources/processor_specific_functions/K40/ADC.c **** 
 153:../Sources/processor_specific_functions/K40/ADC.c **** tADC_Config Master_Adc_Config;
 154:../Sources/processor_specific_functions/K40/ADC.c **** 
 155:../Sources/processor_specific_functions/K40/ADC.c **** void InitADC()
 156:../Sources/processor_specific_functions/K40/ADC.c **** {
 574              		.loc 1 156 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 02a8 80B5     		push	{r7, lr}
 579              	.LCFI12:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 02aa 00AF     		add	r7, sp, #0
 584              	.LCFI13:
 585              		.cfi_def_cfa_register 7
 157:../Sources/processor_specific_functions/K40/ADC.c **** 	//Enable the clocks to ADCs 
 158:../Sources/processor_specific_functions/K40/ADC.c **** 	SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 586              		.loc 1 158 0
 587 02ac 4FF4E043 		mov	r3, #28672
 588 02b0 C4F20403 		movt	r3, 16388
 589 02b4 4FF4E042 		mov	r2, #28672
 590 02b8 C4F20402 		movt	r2, 16388
 591 02bc 02F58152 		add	r2, r2, #4128
 592 02c0 02F11C02 		add	r2, r2, #28
 593 02c4 1268     		ldr	r2, [r2, #0]
 594 02c6 42F00062 		orr	r2, r2, #134217728
 595 02ca 03F58153 		add	r3, r3, #4128
 596 02ce 03F11C03 		add	r3, r3, #28
 597 02d2 1A60     		str	r2, [r3, #0]
 159:../Sources/processor_specific_functions/K40/ADC.c ****     //SIM_SCGC3 |= (SIM_SCGC3_ADC1_MASK);
 160:../Sources/processor_specific_functions/K40/ADC.c ****     
 161:../Sources/processor_specific_functions/K40/ADC.c ****     //Lets calibrate the ADC. 1st setup how the channel will be used.
 162:../Sources/processor_specific_functions/K40/ADC.c ****     
 163:../Sources/processor_specific_functions/K40/ADC.c ****     disable_irq(ADC0_irq_no);   
 598              		.loc 1 163 0
 599 02d4 4FF02600 		mov	r0, #38
 600 02d8 FFF7FEFF 		bl	disable_irq
 164:../Sources/processor_specific_functions/K40/ADC.c ****     //disable_irq(ADC1_irq_no);   
 165:../Sources/processor_specific_functions/K40/ADC.c ****      
 166:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.CONFIG1 = ADLPC_NORMAL 			//No low power mode
 601              		.loc 1 166 0
 602 02dc 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 603 02e0 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 604 02e4 4FF01C02 		mov	r2, #28
 605 02e8 1A70     		strb	r2, [r3, #0]
 167:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADC_CFG1_ADIV(ADIV_1) //divide input by 1
 168:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADLSMP_LONG 			//long sample time
 169:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADC_CFG1_MODE(MODE_16)//single ended 16-bit conversion
 170:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADC_CFG1_ADICLK(ADICLK_BUS);
 171:../Sources/processor_specific_functions/K40/ADC.c ****     
 172:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.CONFIG2 = MUXSEL_ADCA // select the A side of the ADC channel.
 606              		.loc 1 172 0
 607 02ea 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 608 02ee C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 609 02f2 4FF00002 		mov	r2, #0
 610 02f6 5A70     		strb	r2, [r3, #1]
 173:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADACKEN_DISABLED
 174:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADHSC_NORMAL
 175:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADC_CFG2_ADLSTS(ADLSTS_20);//Extra long sample Time (20 extra clocks)
 176:../Sources/processor_specific_functions/K40/ADC.c ****     
 177:../Sources/processor_specific_functions/K40/ADC.c ****     
 178:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.COMPARE1 = 00000; // Comparators don't matter for calibration
 611              		.loc 1 178 0
 612 02f8 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 613 02fc C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 614 0300 4FF00002 		mov	r2, #0
 615 0304 5A80     		strh	r2, [r3, #2]	@ movhi
 179:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.COMPARE1 = 0xFFFF;
 616              		.loc 1 179 0
 617 0306 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 618 030a C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 619 030e 4FF6FF72 		movw	r2, #65535
 620 0312 5A80     		strh	r2, [r3, #2]	@ movhi
 180:../Sources/processor_specific_functions/K40/ADC.c ****     
 181:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.STATUS2  = ADTRG_HW //hardware triggers for calibration
 621              		.loc 1 181 0
 622 0314 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 623 0318 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 624 031c 4FF05802 		mov	r2, #88
 625 0320 9A71     		strb	r2, [r3, #6]
 182:../Sources/processor_specific_functions/K40/ADC.c ****                                | ACFE_DISABLED //disable comparator
 183:../Sources/processor_specific_functions/K40/ADC.c ****                                | ACFGT_GREATER
 184:../Sources/processor_specific_functions/K40/ADC.c ****                                | ACREN_ENABLED
 185:../Sources/processor_specific_functions/K40/ADC.c ****                                | DMAEN_DISABLED //Disable DMA
 186:../Sources/processor_specific_functions/K40/ADC.c ****                                | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 187:../Sources/processor_specific_functions/K40/ADC.c ****         
 188:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.STATUS3 = CAL_OFF  
 626              		.loc 1 188 0
 627 0322 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 628 0326 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 629 032a 4FF00702 		mov	r2, #7
 630 032e DA71     		strb	r2, [r3, #7]
 189:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADCO_SINGLE 
 190:../Sources/processor_specific_functions/K40/ADC.c **** 								| AVGE_ENABLED
 191:../Sources/processor_specific_functions/K40/ADC.c **** 								| ADC_SC3_AVGS(AVGS_32);
 192:../Sources/processor_specific_functions/K40/ADC.c **** 								
 193:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.PGA =     0; // Disable the PGA
 631              		.loc 1 193 0
 632 0330 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 633 0334 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 634 0338 4FF00002 		mov	r2, #0
 635 033c DA60     		str	r2, [r3, #12]
 194:../Sources/processor_specific_functions/K40/ADC.c ****        
 195:../Sources/processor_specific_functions/K40/ADC.c ****     // Configure ADC as it will be used, but because ADC_SC1_ADCH is 31,
 196:../Sources/processor_specific_functions/K40/ADC.c ****     // the ADC will be inactive.  Channel 31 is just disable function.
 197:../Sources/processor_specific_functions/K40/ADC.c ****     // There really is no channel 31.
 198:../Sources/processor_specific_functions/K40/ADC.c ****     
 199:../Sources/processor_specific_functions/K40/ADC.c ****     Master_Adc_Config.STATUS1A = AIEN_ON | DIFF_SINGLE | ADC_SC1_ADCH(31);
 636              		.loc 1 199 0
 637 033e 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 638 0342 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 639 0346 4FF05F02 		mov	r2, #95
 640 034a 1A72     		strb	r2, [r3, #8]
 200:../Sources/processor_specific_functions/K40/ADC.c ****   //  Master_Adc_Config.STATUS1B = 0;//AIEN_ON | DIFF_SINGLE | ADC_SC1_ADCH(31);
 201:../Sources/processor_specific_functions/K40/ADC.c ****     
 202:../Sources/processor_specific_functions/K40/ADC.c ****     ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);  // config ADC
 641              		.loc 1 202 0
 642 034c 4FF43040 		mov	r0, #45056
 643 0350 C4F20300 		movt	r0, 16387
 644 0354 40F20001 		movw	r1, #:lower16:Master_Adc_Config
 645 0358 C0F20001 		movt	r1, #:upper16:Master_Adc_Config
 646 035c FFF7FEFF 		bl	ADC_Config_Alt
 203:../Sources/processor_specific_functions/K40/ADC.c ****  
 204:../Sources/processor_specific_functions/K40/ADC.c ****     // Calibrate the ADC in the configuration in which it will be used:
 205:../Sources/processor_specific_functions/K40/ADC.c ****      ADC_Cal(ADC0_BASE_PTR);                    // do the calibration
 647              		.loc 1 205 0
 648 0360 4FF43040 		mov	r0, #45056
 649 0364 C4F20300 		movt	r0, 16387
 650 0368 FFF7FEFF 		bl	ADC_Cal
 206:../Sources/processor_specific_functions/K40/ADC.c ****      
 207:../Sources/processor_specific_functions/K40/ADC.c ****     // config the ADC again to desired conditions
 208:../Sources/processor_specific_functions/K40/ADC.c ****     // ADC_Config_Alt(ADC1_BASE_PTR, &Master_Adc_Config);
 209:../Sources/processor_specific_functions/K40/ADC.c ****      // Calibrate the ADC in the configuration in which it will be used:
 210:../Sources/processor_specific_functions/K40/ADC.c ****     // ADC_Cal(ADC1_BASE_PTR);                    // do the calibration
 211:../Sources/processor_specific_functions/K40/ADC.c ****     
 212:../Sources/processor_specific_functions/K40/ADC.c ****        
 213:../Sources/processor_specific_functions/K40/ADC.c ****      
 214:../Sources/processor_specific_functions/K40/ADC.c ****      
 215:../Sources/processor_specific_functions/K40/ADC.c ****      Master_Adc_Config.STATUS2  = ACFE_DISABLED //disable comparator
 651              		.loc 1 215 0
 652 036c 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 653 0370 C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 654 0374 4FF01802 		mov	r2, #24
 655 0378 9A71     		strb	r2, [r3, #6]
 216:../Sources/processor_specific_functions/K40/ADC.c ****                                 | ACFGT_GREATER
 217:../Sources/processor_specific_functions/K40/ADC.c ****                                 | ACREN_ENABLED
 218:../Sources/processor_specific_functions/K40/ADC.c ****                                 | DMAEN_DISABLED //Disable DMA
 219:../Sources/processor_specific_functions/K40/ADC.c ****                                 | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 220:../Sources/processor_specific_functions/K40/ADC.c ****     
 221:../Sources/processor_specific_functions/K40/ADC.c ****      Master_Adc_Config.STATUS3 = CAL_OFF  
 656              		.loc 1 221 0
 657 037a 40F20003 		movw	r3, #:lower16:Master_Adc_Config
 658 037e C0F20003 		movt	r3, #:upper16:Master_Adc_Config
 659 0382 4FF00702 		mov	r2, #7
 660 0386 DA71     		strb	r2, [r3, #7]
 222:../Sources/processor_specific_functions/K40/ADC.c ****      							| ADCO_SINGLE 
 223:../Sources/processor_specific_functions/K40/ADC.c ****      							| AVGE_ENABLED
 224:../Sources/processor_specific_functions/K40/ADC.c ****      							| ADC_SC3_AVGS(AVGS_32);
 225:../Sources/processor_specific_functions/K40/ADC.c ****      
 226:../Sources/processor_specific_functions/K40/ADC.c ****      ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc_Config);
 661              		.loc 1 226 0
 662 0388 4FF43040 		mov	r0, #45056
 663 038c C4F20300 		movt	r0, 16387
 664 0390 40F20001 		movw	r1, #:lower16:Master_Adc_Config
 665 0394 C0F20001 		movt	r1, #:upper16:Master_Adc_Config
 666 0398 FFF7FEFF 		bl	ADC_Config_Alt
 227:../Sources/processor_specific_functions/K40/ADC.c ****      //ADC_Config_Alt(ADC1_BASE_PTR, &Master_Adc_Config);     
 228:../Sources/processor_specific_functions/K40/ADC.c **** }
 667              		.loc 1 228 0
 668 039c 80BD     		pop	{r7, pc}
 669              		.cfi_endproc
 670              	.LFE4:
 672 039e 00BF     		.align	2
 673              		.global	InitADCpins
 674              		.thumb
 675              		.thumb_func
 677              	InitADCpins:
 678              	.LFB5:
 229:../Sources/processor_specific_functions/K40/ADC.c **** 
 230:../Sources/processor_specific_functions/K40/ADC.c **** InitADCpins()
 231:../Sources/processor_specific_functions/K40/ADC.c **** {
 679              		.loc 1 231 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 03a0 80B4     		push	{r7}
 685              	.LCFI14:
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 03a2 00AF     		add	r7, sp, #0
 689              	.LCFI15:
 690              		.cfi_def_cfa_register 7
 232:../Sources/processor_specific_functions/K40/ADC.c **** 	SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK | SIM_SCGC5_PORTB_MASK | SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_
 691              		.loc 1 232 0
 692 03a4 4FF4E043 		mov	r3, #28672
 693 03a8 C4F20403 		movt	r3, 16388
 694 03ac 4FF4E042 		mov	r2, #28672
 695 03b0 C4F20402 		movt	r2, 16388
 696 03b4 02F58152 		add	r2, r2, #4128
 697 03b8 02F11802 		add	r2, r2, #24
 698 03bc 1268     		ldr	r2, [r2, #0]
 699 03be 42F47052 		orr	r2, r2, #15360
 700 03c2 03F58153 		add	r3, r3, #4128
 701 03c6 03F11803 		add	r3, r3, #24
 702 03ca 1A60     		str	r2, [r3, #0]
 233:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR20 = PORT_PCR_MUX(0);	//ADC0_DP0, ADC0_SE0
 703              		.loc 1 233 0
 704 03cc 4FF45043 		mov	r3, #53248
 705 03d0 C4F20403 		movt	r3, 16388
 706 03d4 4FF00002 		mov	r2, #0
 707 03d8 1A65     		str	r2, [r3, #80]
 234:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR21 = PORT_PCR_MUX(0);	//ADC0_DM0, ADC0_SE4a
 708              		.loc 1 234 0
 709 03da 4FF45043 		mov	r3, #53248
 710 03de C4F20403 		movt	r3, 16388
 711 03e2 4FF00002 		mov	r2, #0
 712 03e6 5A65     		str	r2, [r3, #84]
 235:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR22 = PORT_PCR_MUX(0);	//ADC0_DP3, ADC0_SE3
 713              		.loc 1 235 0
 714 03e8 4FF45043 		mov	r3, #53248
 715 03ec C4F20403 		movt	r3, 16388
 716 03f0 4FF00002 		mov	r2, #0
 717 03f4 9A65     		str	r2, [r3, #88]
 236:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR23 = PORT_PCR_MUX(0);	//ADC0_DM3, ADC0_SE7a
 718              		.loc 1 236 0
 719 03f6 4FF45043 		mov	r3, #53248
 720 03fa C4F20403 		movt	r3, 16388
 721 03fe 4FF00002 		mov	r2, #0
 722 0402 DA65     		str	r2, [r3, #92]
 237:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR29 = PORT_PCR_MUX(0);	//ADC0_SE4b
 723              		.loc 1 237 0
 724 0404 4FF45043 		mov	r3, #53248
 725 0408 C4F20403 		movt	r3, 16388
 726 040c 4FF00002 		mov	r2, #0
 727 0410 5A67     		str	r2, [r3, #116]
 238:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTD_PCR1 = PORT_PCR_MUX(0);	//ADC0_SE5b	KONFLIKT BLUE LED
 728              		.loc 1 238 0
 729 0412 4FF44043 		mov	r3, #49152
 730 0416 C4F20403 		movt	r3, 16388
 731 041a 4FF00002 		mov	r2, #0
 732 041e 5A60     		str	r2, [r3, #4]
 239:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTD_PCR5 = PORT_PCR_MUX(0);	//ADC0_SE6b
 733              		.loc 1 239 0
 734 0420 4FF44043 		mov	r3, #49152
 735 0424 C4F20403 		movt	r3, 16388
 736 0428 4FF00002 		mov	r2, #0
 737 042c 5A61     		str	r2, [r3, #20]
 240:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTD_PCR6 = PORT_PCR_MUX(0);	//ADC0_SE7b
 738              		.loc 1 240 0
 739 042e 4FF44043 		mov	r3, #49152
 740 0432 C4F20403 		movt	r3, 16388
 741 0436 4FF00002 		mov	r2, #0
 742 043a 9A61     		str	r2, [r3, #24]
 241:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTB_PCR0 = PORT_PCR_MUX(0);	//ADC0_SE8
 743              		.loc 1 241 0
 744 043c 4FF42043 		mov	r3, #40960
 745 0440 C4F20403 		movt	r3, 16388
 746 0444 4FF00002 		mov	r2, #0
 747 0448 1A60     		str	r2, [r3, #0]
 242:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTB_PCR1 = PORT_PCR_MUX(0);	//ADC0_SE9
 748              		.loc 1 242 0
 749 044a 4FF42043 		mov	r3, #40960
 750 044e C4F20403 		movt	r3, 16388
 751 0452 4FF00002 		mov	r2, #0
 752 0456 5A60     		str	r2, [r3, #4]
 243:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTC_PCR2 = PORT_PCR_MUX(0);	//ADC0_SE11
 753              		.loc 1 243 0
 754 0458 4FF43043 		mov	r3, #45056
 755 045c C4F20403 		movt	r3, 16388
 756 0460 4FF00002 		mov	r2, #0
 757 0464 9A60     		str	r2, [r3, #8]
 244:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTB_PCR2 = PORT_PCR_MUX(0);	//ADC0_SE12
 758              		.loc 1 244 0
 759 0466 4FF42043 		mov	r3, #40960
 760 046a C4F20403 		movt	r3, 16388
 761 046e 4FF00002 		mov	r2, #0
 762 0472 9A60     		str	r2, [r3, #8]
 245:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTB_PCR3 = PORT_PCR_MUX(0);	//ADC0_SE13
 763              		.loc 1 245 0
 764 0474 4FF42043 		mov	r3, #40960
 765 0478 C4F20403 		movt	r3, 16388
 766 047c 4FF00002 		mov	r2, #0
 767 0480 DA60     		str	r2, [r3, #12]
 246:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTC_PCR0 = PORT_PCR_MUX(0);	//ADC0_SE14
 768              		.loc 1 246 0
 769 0482 4FF43043 		mov	r3, #45056
 770 0486 C4F20403 		movt	r3, 16388
 771 048a 4FF00002 		mov	r2, #0
 772 048e 1A60     		str	r2, [r3, #0]
 247:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTC_PCR1 = PORT_PCR_MUX(0);	//ADC0_SE15
 773              		.loc 1 247 0
 774 0490 4FF43043 		mov	r3, #45056
 775 0494 C4F20403 		movt	r3, 16388
 776 0498 4FF00002 		mov	r2, #0
 777 049c 5A60     		str	r2, [r3, #4]
 248:../Sources/processor_specific_functions/K40/ADC.c **** 	PORTE_PCR30 = PORT_PCR_MUX(0);	//ADC0_SE23
 778              		.loc 1 248 0
 779 049e 4FF45043 		mov	r3, #53248
 780 04a2 C4F20403 		movt	r3, 16388
 781 04a6 4FF00002 		mov	r2, #0
 782 04aa 9A67     		str	r2, [r3, #120]
 249:../Sources/processor_specific_functions/K40/ADC.c **** }
 783              		.loc 1 249 0
 784 04ac BD46     		mov	sp, r7
 785 04ae 80BC     		pop	{r7}
 786 04b0 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE5:
 790 04b2 00BF     		.align	2
 791              		.global	ADC0_IRQ
 792              		.thumb
 793              		.thumb_func
 795              	ADC0_IRQ:
 796              	.LFB6:
 250:../Sources/processor_specific_functions/K40/ADC.c **** 
 251:../Sources/processor_specific_functions/K40/ADC.c **** void ADC0_IRQ()
 252:../Sources/processor_specific_functions/K40/ADC.c **** {
 797              		.loc 1 252 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 8
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802 04b4 80B4     		push	{r7}
 803              	.LCFI16:
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 7, -4
 806 04b6 83B0     		sub	sp, sp, #12
 807              	.LCFI17:
 808              		.cfi_def_cfa_offset 16
 809 04b8 00AF     		add	r7, sp, #0
 810              	.LCFI18:
 811              		.cfi_def_cfa_register 7
 253:../Sources/processor_specific_functions/K40/ADC.c **** 	uint16_t junk = ADC0_RA;
 812              		.loc 1 253 0
 813 04ba 4FF43043 		mov	r3, #45056
 814 04be C4F20303 		movt	r3, 16387
 815 04c2 1B69     		ldr	r3, [r3, #16]
 816 04c4 FB80     		strh	r3, [r7, #6]	@ movhi
 254:../Sources/processor_specific_functions/K40/ADC.c **** }
 817              		.loc 1 254 0
 818 04c6 07F10C07 		add	r7, r7, #12
 819 04ca BD46     		mov	sp, r7
 820 04cc 80BC     		pop	{r7}
 821 04ce 7047     		bx	lr
 822              		.cfi_endproc
 823              	.LFE6:
 825              		.align	2
 826              		.global	Read_ADC0
 827              		.thumb
 828              		.thumb_func
 830              	Read_ADC0:
 831              	.LFB7:
 255:../Sources/processor_specific_functions/K40/ADC.c **** 
 256:../Sources/processor_specific_functions/K40/ADC.c **** /*void ADC1_IRQ()
 257:../Sources/processor_specific_functions/K40/ADC.c **** {
 258:../Sources/processor_specific_functions/K40/ADC.c **** 	uint16_t junk =  ADC1_RA;
 259:../Sources/processor_specific_functions/K40/ADC.c **** }*/
 260:../Sources/processor_specific_functions/K40/ADC.c **** 
 261:../Sources/processor_specific_functions/K40/ADC.c **** 
 262:../Sources/processor_specific_functions/K40/ADC.c **** 
 263:../Sources/processor_specific_functions/K40/ADC.c **** /*	ARGUMENTS:	Channel - selected ADC channel for conversion start
 264:../Sources/processor_specific_functions/K40/ADC.c ****  *  
 265:../Sources/processor_specific_functions/K40/ADC.c ****  *  OUTPUT:		ADC1_RA - Converted digital value of camera analog output
 266:../Sources/processor_specific_functions/K40/ADC.c ****  *  
 267:../Sources/processor_specific_functions/K40/ADC.c ****  *  NOTE:		Function makes conversion from analog camera output to digital
 268:../Sources/processor_specific_functions/K40/ADC.c ****  */
 269:../Sources/processor_specific_functions/K40/ADC.c **** uint16_t Read_ADC0(uint8_t Channel)
 270:../Sources/processor_specific_functions/K40/ADC.c **** {
 832              		.loc 1 270 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 04d0 80B4     		push	{r7}
 838              	.LCFI19:
 839              		.cfi_def_cfa_offset 4
 840              		.cfi_offset 7, -4
 841 04d2 83B0     		sub	sp, sp, #12
 842              	.LCFI20:
 843              		.cfi_def_cfa_offset 16
 844 04d4 00AF     		add	r7, sp, #0
 845              	.LCFI21:
 846              		.cfi_def_cfa_register 7
 847 04d6 0346     		mov	r3, r0
 848 04d8 FB71     		strb	r3, [r7, #7]
 271:../Sources/processor_specific_functions/K40/ADC.c **** 	//Writing to this register for the channel starts a conversion 
 272:../Sources/processor_specific_functions/K40/ADC.c **** 	ADC0_SC1A  =  Channel;
 849              		.loc 1 272 0
 850 04da 4FF43043 		mov	r3, #45056
 851 04de C4F20303 		movt	r3, 16387
 852 04e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 853 04e4 1A60     		str	r2, [r3, #0]
 273:../Sources/processor_specific_functions/K40/ADC.c **** 	
 274:../Sources/processor_specific_functions/K40/ADC.c **** 	// Wait until conversion complete
 275:../Sources/processor_specific_functions/K40/ADC.c **** 	while((ADC0_SC1A & ADC_SC1_COCO_MASK) == 0);
 854              		.loc 1 275 0
 855 04e6 00BF     		nop
 856              	.L12:
 857              		.loc 1 275 0 is_stmt 0 discriminator 1
 858 04e8 4FF43043 		mov	r3, #45056
 859 04ec C4F20303 		movt	r3, 16387
 860 04f0 1B68     		ldr	r3, [r3, #0]
 861 04f2 03F08003 		and	r3, r3, #128
 862 04f6 002B     		cmp	r3, #0
 863 04f8 F6D0     		beq	.L12
 276:../Sources/processor_specific_functions/K40/ADC.c **** 
 277:../Sources/processor_specific_functions/K40/ADC.c **** 	return 	ADC0_RA;	
 864              		.loc 1 277 0 is_stmt 1
 865 04fa 4FF43043 		mov	r3, #45056
 866 04fe C4F20303 		movt	r3, 16387
 867 0502 1B69     		ldr	r3, [r3, #16]
 868 0504 9BB2     		uxth	r3, r3
 278:../Sources/processor_specific_functions/K40/ADC.c **** }
 869              		.loc 1 278 0
 870 0506 1846     		mov	r0, r3
 871 0508 07F10C07 		add	r7, r7, #12
 872 050c BD46     		mov	sp, r7
 873 050e 80BC     		pop	{r7}
 874 0510 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE7:
 878              	.Letext0:
 879              		.file 2 "c:\\freescale\\cw mcu v10.6\\cross_tools\\arm-none-eabi-gcc-4_7_3\\bin\\../lib/gcc/arm-no
 880              		.file 3 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions\\K40\
 881              		.file 4 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions/K40/A
 882              		.file 5 "E:/saj\341t/quadcopter/quadcopter v2.0/Sources/ff10b/src/integer.h"
 883              		.file 6 "E:/saj\341t/quadcopter/quadcopter v2.0/Sources/ff10b/src/ff.h"
 884              		.file 7 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions/K40/i
 885              		.file 8 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions/K40/d
 886              		.file 9 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/interrupts.h"
 887              		.file 10 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/SDcard.h"
 888              		.file 11 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/MPU6050.h"
 889              		.file 12 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/BMP180.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ADC.c
                            *COM*:00000004 I2C_Variable
                            *COM*:00000001 uart_data
                            *COM*:0000003c adc_data
                            *COM*:00000004 Kp
                            *COM*:00000004 Kd
                            *COM*:00000004 Ki
                            *COM*:00000004 zKp
                            *COM*:00000004 zKd
                            *COM*:00000004 basepower
                            *COM*:00000004 setpoint_x
                            *COM*:00000004 setpoint_y
                            *COM*:00000004 setpoint_z
                            *COM*:00000004 setpoint_alt
                            *COM*:00000004 batt1_vol
                            *COM*:00000004 batt2_vol
                            *COM*:00000004 batt3_vol
                            *COM*:00000004 BATT_VOLT
                            *COM*:00000230 FatFs
                            *COM*:00000224 fil
                            *COM*:00000002 GYRO_XOUT_OFFSET
                            *COM*:00000002 GYRO_YOUT_OFFSET
                            *COM*:00000002 GYRO_ZOUT_OFFSET
                            *COM*:00000002 ACCEL_XOUT_OFFSET
                            *COM*:00000002 ACCEL_YOUT_OFFSET
                            *COM*:00000002 ACCEL_ZOUT_OFFSET
                            *COM*:00000004 GYRO_XANGLE
                            *COM*:00000004 GYRO_YANGLE
                            *COM*:00000004 GYRO_ZANGLE
                            *COM*:00000002 GYRO_XOUT
                            *COM*:00000002 GYRO_YOUT
                            *COM*:00000002 GYRO_ZOUT
                            *COM*:00000002 ACCEL_XOUT
                            *COM*:00000002 ACCEL_YOUT
                            *COM*:00000002 ACCEL_ZOUT
                            *COM*:00000004 ACCEL_Gx
                            *COM*:00000004 ACCEL_Gy
                            *COM*:00000004 ACCEL_Gz
                            *COM*:00000008 ACCEL
                            *COM*:00000004 GYRO_XRATE
                            *COM*:00000004 GYRO_YRATE
                            *COM*:00000004 GYRO_ZRATE
                            *COM*:00000004 ACCEL_XANGLE
                            *COM*:00000004 ACCEL_YANGLE
                            *COM*:00000004 gyro_xsensitivity
                            *COM*:00000004 gyro_ysensitivity
                            *COM*:00000004 gyro_zsensitivity
                            *COM*:00000004 a
                            *COM*:00000004 dt
                            *COM*:00000004 COMPLEMENTARY_XANGLE
                            *COM*:00000004 COMPLEMENTARY_YANGLE
                            *COM*:0000000c filter_xterm
                            *COM*:0000000c filter_yterm
                            *COM*:00000004 XANGLE_OFFSET
                            *COM*:00000004 YANGLE_OFFSET
                            *COM*:00000004 TEMP
                            *COM*:00000004 timeConstant
                            *COM*:0000000e MPU_6050_buffer
                            *COM*:00000002 AC1
                            *COM*:00000002 AC2
                            *COM*:00000002 AC3
                            *COM*:00000002 B1
                            *COM*:00000002 B2
                            *COM*:00000002 MB
                            *COM*:00000002 MC
                            *COM*:00000002 MD
                            *COM*:00000002 AC4
                            *COM*:00000002 AC5
                            *COM*:00000002 AC6
                            *COM*:00000004 T
                            *COM*:00000004 absolute_altittude
                            *COM*:00000004 start_altittude
                            *COM*:00000004 relative_altittude
                            *COM*:00000004 P
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:91     .text:00000000 $t
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:96     .text:00000000 ADC_Cal
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:291    .text:00000138 ADC_Config
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:357    .text:00000184 ADC_Config_Alt
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:437    .text:000001e8 ADC_Read_Cal
                            *COM*:00000010 Master_Adc_Config
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:572    .text:000002a8 InitADC
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:677    .text:000003a0 InitADCpins
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:795    .text:000004b4 ADC0_IRQ
C:\Users\Norbert\AppData\Local\Temp\cc0j3gRN.s:830    .text:000004d0 Read_ADC0
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.6111752e1bd0a440bd5209819217ec83
                           .group:00000000 wm4.init.h.9.6215b16d96e0eb787ba872245cf7290f
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.95dee4059009fe3ab635a191bb73dc66
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.math.h.35.07c7797db9e98c6f49a07908290b45ed
                           .group:00000000 wm4.arm_cm4.h.9.78faaf62d86eb97a647af1ebafb07a11
                           .group:00000000 wm4.SysTick.h.3.6f4da7f8fb96288ed4bbb4cee119df1f
                           .group:00000000 wm4.Clock.h.3.a53d5ed3b11823f56a6aca141130352b
                           .group:00000000 wm4.MK40X256VMD100.h.96.72dc045102cc699ba440f8fa0b280550
                           .group:00000000 wm4.i2c.h.1.3f1b2e4dcc6bdba977be59d8a51e893b
                           .group:00000000 wm4.misc.h.9.baaf43d8702a540222c668d182f75475
                           .group:00000000 wm4.PWM.h.9.e42d58c40ee648255e53f4e4738007a9
                           .group:00000000 wm4.SPI.h.9.60f1cb4029034538da62861db028322d
                           .group:00000000 wm4.ADC.h.9.e7a31df2daef26f2c286655e5d3c10dd
                           .group:00000000 wm4.dma.h.9.96660ff1bef0aa806d84c8ba8408982d
                           .group:00000000 wm4.main.h.9.81396d5b502c9a6873858dab1b488864
                           .group:00000000 wm4.ffconf.h.6.276819a3a49a7ae37f54890eecb94e63
                           .group:00000000 wm4.ff.h.45.a981520ef44c98f5ccd354741039de67
                           .group:00000000 wm4.SDcard.h.13.e5067f919396cc348c323ee4b231e5ee
                           .group:00000000 wm4.diskio.h.6.da50361b93ad53e5f0de9110dc9ad28d
                           .group:00000000 wm4.MPU6050.h.9.b96a5ef9f24cf228b62beca78b916cfc
                           .group:00000000 wm4.BMP180.h.9.1e786092deac7b246665fc1406fb0f7b

UNDEFINED SYMBOLS
disable_irq
