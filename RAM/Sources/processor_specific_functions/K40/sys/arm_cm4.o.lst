   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_cm4.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	stop
  20              		.thumb
  21              		.thumb_func
  23              	stop:
  24              	.LFB0:
  25              		.file 1 "../Sources/processor_specific_functions/K40/sys/arm_cm4.c"
   1:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
   2:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * File:		arm_cm4.c
   3:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Purpose:		Generic high-level routines for ARM Cortex M4 processors
   4:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
   5:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Notes:
   6:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
   7:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
   8:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** #include "processor_specific_functions/K40/sys/derivative.h" /* include peripheral declarations */
   9:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  10:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
  11:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
  12:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Configures the ARM system control register for STOP (deep sleep) mode
  13:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * and then executes the WFI instruction to enter the mode.
  14:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  15:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
  16:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * none
  17:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  18:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Note: Might want to change this later to allow for passing in a parameter
  19:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *       to optionally set the sleep on exit bit.
  20:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
  21:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  22:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void stop (void)
  23:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
  26              		.loc 1 23 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
  24:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	/* Set the SLEEPDEEP bit to enable deep sleep mode (STOP) */
  25:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	SCB_SCR |= SCB_SCR_SLEEPDEEP_MASK;	
  38              		.loc 1 25 0
  39 0004 4FF0E023 		mov	r3, #-536813568
  40 0008 4FF0E022 		mov	r2, #-536813568
  41 000c D2F8102D 		ldr	r2, [r2, #3344]
  42 0010 42F00402 		orr	r2, r2, #4
  43 0014 C3F8102D 		str	r2, [r3, #3344]
  26:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  27:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	/* WFI instruction will start entry into STOP mode */
  28:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	asm("WFI");
  44              		.loc 1 28 0
  45              	@ 28 "../Sources/processor_specific_functions/K40/sys/arm_cm4.c" 1
  46 0018 30BF     		WFI
  47              	@ 0 "" 2
  29:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
  48              		.loc 1 29 0
  49              		.thumb
  50 001a BD46     		mov	sp, r7
  51 001c 80BC     		pop	{r7}
  52 001e 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE0:
  56              		.align	2
  57              		.global	wait
  58              		.thumb
  59              		.thumb_func
  61              	wait:
  62              	.LFB1:
  30:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
  31:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
  32:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Configures the ARM system control register for WAIT (sleep) mode
  33:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * and then executes the WFI instruction to enter the mode.
  34:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  35:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
  36:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * none
  37:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  38:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Note: Might want to change this later to allow for passing in a parameter
  39:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *       to optionally set the sleep on exit bit.
  40:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
  41:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  42:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void wait (void)
  43:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
  63              		.loc 1 43 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0020 80B4     		push	{r7}
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0022 00AF     		add	r7, sp, #0
  73              	.LCFI3:
  74              		.cfi_def_cfa_register 7
  44:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	/* Clear the SLEEPDEEP bit to make sure we go into WAIT (sleep) mode instead
  45:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	 * of deep sleep.
  46:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	 */
  47:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	SCB_SCR &= ~SCB_SCR_SLEEPDEEP_MASK;	
  75              		.loc 1 47 0
  76 0024 4FF0E023 		mov	r3, #-536813568
  77 0028 4FF0E022 		mov	r2, #-536813568
  78 002c D2F8102D 		ldr	r2, [r2, #3344]
  79 0030 22F00402 		bic	r2, r2, #4
  80 0034 C3F8102D 		str	r2, [r3, #3344]
  48:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  49:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	/* WFI instruction will start entry into WAIT mode */
  50:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 	asm("WFI");
  81              		.loc 1 50 0
  82              	@ 50 "../Sources/processor_specific_functions/K40/sys/arm_cm4.c" 1
  83 0038 30BF     		WFI
  84              	@ 0 "" 2
  51:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
  85              		.loc 1 51 0
  86              		.thumb
  87 003a BD46     		mov	sp, r7
  88 003c 80BC     		pop	{r7}
  89 003e 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE1:
  93              		.align	2
  94              		.global	write_vtor
  95              		.thumb
  96              		.thumb_func
  98              	write_vtor:
  99              	.LFB2:
  52:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
  53:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
  54:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Change the value of the vector table offset register to the specified value.
  55:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  56:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
  57:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * vtor     new value to write to the VTOR
  58:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
  59:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  60:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void write_vtor (int vtor)
  61:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
 100              		.loc 1 61 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0040 80B4     		push	{r7}
 106              	.LCFI4:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 7, -4
 109 0042 83B0     		sub	sp, sp, #12
 110              	.LCFI5:
 111              		.cfi_def_cfa_offset 16
 112 0044 00AF     		add	r7, sp, #0
 113              	.LCFI6:
 114              		.cfi_def_cfa_register 7
 115 0046 7860     		str	r0, [r7, #4]
  62:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****         /* Write the VTOR with the new value */
  63:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****         SCB_VTOR = vtor;	
 116              		.loc 1 63 0
 117 0048 4FF0E023 		mov	r3, #-536813568
 118 004c 7A68     		ldr	r2, [r7, #4]
 119 004e C3F8082D 		str	r2, [r3, #3336]
  64:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
 120              		.loc 1 64 0
 121 0052 07F10C07 		add	r7, r7, #12
 122 0056 BD46     		mov	sp, r7
 123 0058 80BC     		pop	{r7}
 124 005a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE2:
 128              		.align	2
 129              		.global	enable_irq
 130              		.thumb
 131              		.thumb_func
 133              	enable_irq:
 134              	.LFB3:
  65:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
  66:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
  67:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Initialize the NVIC to enable the specified IRQ.
  68:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * 
  69:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * NOTE: The function only initializes the NVIC to enable a single IRQ. 
  70:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Interrupts will also need to be enabled in the ARM core. This can be 
  71:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * done using the EnableInterrupts macro.
  72:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
  73:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
  74:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * irq    irq number to be enabled (the irq number NOT the vector number)
  75:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
  76:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  77:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void enable_irq (int irq)
  78:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
 135              		.loc 1 78 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140 005c 80B4     		push	{r7}
 141              	.LCFI7:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 005e 85B0     		sub	sp, sp, #20
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 24
 147 0060 00AF     		add	r7, sp, #0
 148              	.LCFI9:
 149              		.cfi_def_cfa_register 7
 150 0062 7860     		str	r0, [r7, #4]
  79:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     int div;
  80:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
  81:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
  82:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /* Determine which of the NVICISERs corresponds to the irq */
  83:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     div = irq/32;
 151              		.loc 1 83 0
 152 0064 7B68     		ldr	r3, [r7, #4]
 153 0066 002B     		cmp	r3, #0
 154 0068 01DA     		bge	.L5
 155 006a 03F11F03 		add	r3, r3, #31
 156              	.L5:
 157 006e 4FEA6313 		asr	r3, r3, #5
 158 0072 FB60     		str	r3, [r7, #12]
  84:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
  85:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     switch (div)
 159              		.loc 1 85 0
 160 0074 FB68     		ldr	r3, [r7, #12]
 161 0076 032B     		cmp	r3, #3
 162 0078 00F20081 		bhi	.L4
 163 007c 01A2     		adr	r2, .L11
 164 007e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 165 0082 00BF     		.align	2
 166              	.L11:
 167 0084 95000000 		.word	.L7+1
 168 0088 0F010000 		.word	.L8+1
 169 008c 89010000 		.word	.L9+1
 170 0090 03020000 		.word	.L10+1
 171              	.L7:
  86:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     {
  87:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x0:
  88:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICICPR0 |= 1 << (irq%32);
 172              		.loc 1 88 0
 173 0094 4FF46142 		mov	r2, #57600
 174 0098 CEF20002 		movt	r2, 57344
 175 009c 4FF46143 		mov	r3, #57600
 176 00a0 CEF20003 		movt	r3, 57344
 177 00a4 D3F88011 		ldr	r1, [r3, #384]
 178 00a8 7868     		ldr	r0, [r7, #4]
 179 00aa 4FF01F03 		mov	r3, #31
 180 00ae C8F20003 		movt	r3, 32768
 181 00b2 0340     		ands	r3, r3, r0
 182 00b4 002B     		cmp	r3, #0
 183 00b6 05DA     		bge	.L12
 184 00b8 03F1FF33 		add	r3, r3, #-1
 185 00bc 63F01F03 		orn	r3, r3, #31
 186 00c0 03F10103 		add	r3, r3, #1
 187              	.L12:
 188 00c4 4FF00100 		mov	r0, #1
 189 00c8 00FA03F3 		lsl	r3, r0, r3
 190 00cc 0B43     		orrs	r3, r3, r1
 191 00ce C2F88031 		str	r3, [r2, #384]
  89:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICISER0 |= 1 << (irq%32);
 192              		.loc 1 89 0
 193 00d2 4FF46142 		mov	r2, #57600
 194 00d6 CEF20002 		movt	r2, 57344
 195 00da 4FF46143 		mov	r3, #57600
 196 00de CEF20003 		movt	r3, 57344
 197 00e2 1968     		ldr	r1, [r3, #0]
 198 00e4 7868     		ldr	r0, [r7, #4]
 199 00e6 4FF01F03 		mov	r3, #31
 200 00ea C8F20003 		movt	r3, 32768
 201 00ee 0340     		ands	r3, r3, r0
 202 00f0 002B     		cmp	r3, #0
 203 00f2 05DA     		bge	.L13
 204 00f4 03F1FF33 		add	r3, r3, #-1
 205 00f8 63F01F03 		orn	r3, r3, #31
 206 00fc 03F10103 		add	r3, r3, #1
 207              	.L13:
 208 0100 4FF00100 		mov	r0, #1
 209 0104 00FA03F3 		lsl	r3, r0, r3
 210 0108 0B43     		orrs	r3, r3, r1
 211 010a 1360     		str	r3, [r2, #0]
  90:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 212              		.loc 1 90 0
 213 010c B6E0     		b	.L4
 214              	.L8:
  91:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x1:
  92:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICICPR1 |= 1 << (irq%32);
 215              		.loc 1 92 0
 216 010e 4FF46142 		mov	r2, #57600
 217 0112 CEF20002 		movt	r2, 57344
 218 0116 4FF46143 		mov	r3, #57600
 219 011a CEF20003 		movt	r3, 57344
 220 011e D3F88411 		ldr	r1, [r3, #388]
 221 0122 7868     		ldr	r0, [r7, #4]
 222 0124 4FF01F03 		mov	r3, #31
 223 0128 C8F20003 		movt	r3, 32768
 224 012c 0340     		ands	r3, r3, r0
 225 012e 002B     		cmp	r3, #0
 226 0130 05DA     		bge	.L14
 227 0132 03F1FF33 		add	r3, r3, #-1
 228 0136 63F01F03 		orn	r3, r3, #31
 229 013a 03F10103 		add	r3, r3, #1
 230              	.L14:
 231 013e 4FF00100 		mov	r0, #1
 232 0142 00FA03F3 		lsl	r3, r0, r3
 233 0146 0B43     		orrs	r3, r3, r1
 234 0148 C2F88431 		str	r3, [r2, #388]
  93:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICISER1 |= 1 << (irq%32);
 235              		.loc 1 93 0
 236 014c 4FF46142 		mov	r2, #57600
 237 0150 CEF20002 		movt	r2, 57344
 238 0154 4FF46143 		mov	r3, #57600
 239 0158 CEF20003 		movt	r3, 57344
 240 015c 5968     		ldr	r1, [r3, #4]
 241 015e 7868     		ldr	r0, [r7, #4]
 242 0160 4FF01F03 		mov	r3, #31
 243 0164 C8F20003 		movt	r3, 32768
 244 0168 0340     		ands	r3, r3, r0
 245 016a 002B     		cmp	r3, #0
 246 016c 05DA     		bge	.L15
 247 016e 03F1FF33 		add	r3, r3, #-1
 248 0172 63F01F03 		orn	r3, r3, #31
 249 0176 03F10103 		add	r3, r3, #1
 250              	.L15:
 251 017a 4FF00100 		mov	r0, #1
 252 017e 00FA03F3 		lsl	r3, r0, r3
 253 0182 0B43     		orrs	r3, r3, r1
 254 0184 5360     		str	r3, [r2, #4]
  94:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 255              		.loc 1 94 0
 256 0186 79E0     		b	.L4
 257              	.L9:
  95:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x2:
  96:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICICPR2 |= 1 << (irq%32);
 258              		.loc 1 96 0
 259 0188 4FF46142 		mov	r2, #57600
 260 018c CEF20002 		movt	r2, 57344
 261 0190 4FF46143 		mov	r3, #57600
 262 0194 CEF20003 		movt	r3, 57344
 263 0198 D3F88811 		ldr	r1, [r3, #392]
 264 019c 7868     		ldr	r0, [r7, #4]
 265 019e 4FF01F03 		mov	r3, #31
 266 01a2 C8F20003 		movt	r3, 32768
 267 01a6 0340     		ands	r3, r3, r0
 268 01a8 002B     		cmp	r3, #0
 269 01aa 05DA     		bge	.L16
 270 01ac 03F1FF33 		add	r3, r3, #-1
 271 01b0 63F01F03 		orn	r3, r3, #31
 272 01b4 03F10103 		add	r3, r3, #1
 273              	.L16:
 274 01b8 4FF00100 		mov	r0, #1
 275 01bc 00FA03F3 		lsl	r3, r0, r3
 276 01c0 0B43     		orrs	r3, r3, r1
 277 01c2 C2F88831 		str	r3, [r2, #392]
  97:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICISER2 |= 1 << (irq%32);
 278              		.loc 1 97 0
 279 01c6 4FF46142 		mov	r2, #57600
 280 01ca CEF20002 		movt	r2, 57344
 281 01ce 4FF46143 		mov	r3, #57600
 282 01d2 CEF20003 		movt	r3, 57344
 283 01d6 9968     		ldr	r1, [r3, #8]
 284 01d8 7868     		ldr	r0, [r7, #4]
 285 01da 4FF01F03 		mov	r3, #31
 286 01de C8F20003 		movt	r3, 32768
 287 01e2 0340     		ands	r3, r3, r0
 288 01e4 002B     		cmp	r3, #0
 289 01e6 05DA     		bge	.L17
 290 01e8 03F1FF33 		add	r3, r3, #-1
 291 01ec 63F01F03 		orn	r3, r3, #31
 292 01f0 03F10103 		add	r3, r3, #1
 293              	.L17:
 294 01f4 4FF00100 		mov	r0, #1
 295 01f8 00FA03F3 		lsl	r3, r0, r3
 296 01fc 0B43     		orrs	r3, r3, r1
 297 01fe 9360     		str	r3, [r2, #8]
  98:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 298              		.loc 1 98 0
 299 0200 3CE0     		b	.L4
 300              	.L10:
  99:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x3:
 100:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****              NVICICPR3 |= 1 << (irq%32);
 301              		.loc 1 100 0
 302 0202 4FF46142 		mov	r2, #57600
 303 0206 CEF20002 		movt	r2, 57344
 304 020a 4FF46143 		mov	r3, #57600
 305 020e CEF20003 		movt	r3, 57344
 306 0212 D3F88C11 		ldr	r1, [r3, #396]
 307 0216 7868     		ldr	r0, [r7, #4]
 308 0218 4FF01F03 		mov	r3, #31
 309 021c C8F20003 		movt	r3, 32768
 310 0220 0340     		ands	r3, r3, r0
 311 0222 002B     		cmp	r3, #0
 312 0224 05DA     		bge	.L18
 313 0226 03F1FF33 		add	r3, r3, #-1
 314 022a 63F01F03 		orn	r3, r3, #31
 315 022e 03F10103 		add	r3, r3, #1
 316              	.L18:
 317 0232 4FF00100 		mov	r0, #1
 318 0236 00FA03F3 		lsl	r3, r0, r3
 319 023a 0B43     		orrs	r3, r3, r1
 320 023c C2F88C31 		str	r3, [r2, #396]
 101:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****              NVICISER3 |= 1 << (irq%32);
 321              		.loc 1 101 0
 322 0240 4FF46142 		mov	r2, #57600
 323 0244 CEF20002 		movt	r2, 57344
 324 0248 4FF46143 		mov	r3, #57600
 325 024c CEF20003 		movt	r3, 57344
 326 0250 D968     		ldr	r1, [r3, #12]
 327 0252 7868     		ldr	r0, [r7, #4]
 328 0254 4FF01F03 		mov	r3, #31
 329 0258 C8F20003 		movt	r3, 32768
 330 025c 0340     		ands	r3, r3, r0
 331 025e 002B     		cmp	r3, #0
 332 0260 05DA     		bge	.L19
 333 0262 03F1FF33 		add	r3, r3, #-1
 334 0266 63F01F03 		orn	r3, r3, #31
 335 026a 03F10103 		add	r3, r3, #1
 336              	.L19:
 337 026e 4FF00100 		mov	r0, #1
 338 0272 00FA03F3 		lsl	r3, r0, r3
 339 0276 0B43     		orrs	r3, r3, r1
 340 0278 D360     		str	r3, [r2, #12]
 102:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****                break;
 341              		.loc 1 102 0
 342 027a 00BF     		nop
 343              	.L4:
 103:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****              
 104:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     }              
 105:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
 344              		.loc 1 105 0
 345 027c 07F11407 		add	r7, r7, #20
 346 0280 BD46     		mov	sp, r7
 347 0282 80BC     		pop	{r7}
 348 0284 7047     		bx	lr
 349              		.cfi_endproc
 350              	.LFE3:
 352 0286 00BF     		.align	2
 353              		.global	disable_irq
 354              		.thumb
 355              		.thumb_func
 357              	disable_irq:
 358              	.LFB4:
 106:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
 107:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
 108:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Initialize the NVIC to disable the specified IRQ.
 109:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * 
 110:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * NOTE: The function only initializes the NVIC to disable a single IRQ. 
 111:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * If you want to disable all interrupts, then use the DisableInterrupts
 112:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * macro instead. 
 113:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
 114:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
 115:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * irq    irq number to be disabled (the irq number NOT the vector number)
 116:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
 117:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
 118:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void disable_irq (int irq)
 119:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
 359              		.loc 1 119 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 16
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364 0288 80B4     		push	{r7}
 365              	.LCFI10:
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 028a 85B0     		sub	sp, sp, #20
 369              	.LCFI11:
 370              		.cfi_def_cfa_offset 24
 371 028c 00AF     		add	r7, sp, #0
 372              	.LCFI12:
 373              		.cfi_def_cfa_register 7
 374 028e 7860     		str	r0, [r7, #4]
 120:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     int div;
 121:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
 122:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****         
 123:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /* Determine which of the NVICICERs corresponds to the irq */
 124:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     div = irq/32;
 375              		.loc 1 124 0
 376 0290 7B68     		ldr	r3, [r7, #4]
 377 0292 002B     		cmp	r3, #0
 378 0294 01DA     		bge	.L21
 379 0296 03F11F03 		add	r3, r3, #31
 380              	.L21:
 381 029a 4FEA6313 		asr	r3, r3, #5
 382 029e FB60     		str	r3, [r7, #12]
 125:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
 126:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     switch (div)
 383              		.loc 1 126 0
 384 02a0 FB68     		ldr	r3, [r7, #12]
 385 02a2 032B     		cmp	r3, #3
 386 02a4 00F28C80 		bhi	.L20
 387 02a8 01A2     		adr	r2, .L27
 388 02aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 389 02ae 00BF     		.align	2
 390              	.L27:
 391 02b0 C1020000 		.word	.L23+1
 392 02b4 01030000 		.word	.L24+1
 393 02b8 41030000 		.word	.L25+1
 394 02bc 81030000 		.word	.L26+1
 395              	.L23:
 127:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     {
 128:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x0:
 129:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****                NVICICER0 |= 1 << (irq%32);
 396              		.loc 1 129 0
 397 02c0 4FF46142 		mov	r2, #57600
 398 02c4 CEF20002 		movt	r2, 57344
 399 02c8 4FF46143 		mov	r3, #57600
 400 02cc CEF20003 		movt	r3, 57344
 401 02d0 D3F88010 		ldr	r1, [r3, #128]
 402 02d4 7868     		ldr	r0, [r7, #4]
 403 02d6 4FF01F03 		mov	r3, #31
 404 02da C8F20003 		movt	r3, 32768
 405 02de 0340     		ands	r3, r3, r0
 406 02e0 002B     		cmp	r3, #0
 407 02e2 05DA     		bge	.L28
 408 02e4 03F1FF33 		add	r3, r3, #-1
 409 02e8 63F01F03 		orn	r3, r3, #31
 410 02ec 03F10103 		add	r3, r3, #1
 411              	.L28:
 412 02f0 4FF00100 		mov	r0, #1
 413 02f4 00FA03F3 		lsl	r3, r0, r3
 414 02f8 0B43     		orrs	r3, r3, r1
 415 02fa C2F88030 		str	r3, [r2, #128]
 130:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 416              		.loc 1 130 0
 417 02fe 5FE0     		b	.L20
 418              	.L24:
 131:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x1:
 132:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICICER1 |= 1 << (irq%32);
 419              		.loc 1 132 0
 420 0300 4FF46142 		mov	r2, #57600
 421 0304 CEF20002 		movt	r2, 57344
 422 0308 4FF46143 		mov	r3, #57600
 423 030c CEF20003 		movt	r3, 57344
 424 0310 D3F88410 		ldr	r1, [r3, #132]
 425 0314 7868     		ldr	r0, [r7, #4]
 426 0316 4FF01F03 		mov	r3, #31
 427 031a C8F20003 		movt	r3, 32768
 428 031e 0340     		ands	r3, r3, r0
 429 0320 002B     		cmp	r3, #0
 430 0322 05DA     		bge	.L29
 431 0324 03F1FF33 		add	r3, r3, #-1
 432 0328 63F01F03 		orn	r3, r3, #31
 433 032c 03F10103 		add	r3, r3, #1
 434              	.L29:
 435 0330 4FF00100 		mov	r0, #1
 436 0334 00FA03F3 		lsl	r3, r0, r3
 437 0338 0B43     		orrs	r3, r3, r1
 438 033a C2F88430 		str	r3, [r2, #132]
 133:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 439              		.loc 1 133 0
 440 033e 3FE0     		b	.L20
 441              	.L25:
 134:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x2:
 135:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               NVICICER2 |= 1 << (irq%32);
 442              		.loc 1 135 0
 443 0340 4FF46142 		mov	r2, #57600
 444 0344 CEF20002 		movt	r2, 57344
 445 0348 4FF46143 		mov	r3, #57600
 446 034c CEF20003 		movt	r3, 57344
 447 0350 D3F88810 		ldr	r1, [r3, #136]
 448 0354 7868     		ldr	r0, [r7, #4]
 449 0356 4FF01F03 		mov	r3, #31
 450 035a C8F20003 		movt	r3, 32768
 451 035e 0340     		ands	r3, r3, r0
 452 0360 002B     		cmp	r3, #0
 453 0362 05DA     		bge	.L30
 454 0364 03F1FF33 		add	r3, r3, #-1
 455 0368 63F01F03 		orn	r3, r3, #31
 456 036c 03F10103 		add	r3, r3, #1
 457              	.L30:
 458 0370 4FF00100 		mov	r0, #1
 459 0374 00FA03F3 		lsl	r3, r0, r3
 460 0378 0B43     		orrs	r3, r3, r1
 461 037a C2F88830 		str	r3, [r2, #136]
 136:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****               break;
 462              		.loc 1 136 0
 463 037e 1FE0     		b	.L20
 464              	.L26:
 137:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	case 0x3:
 138:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	      NVICICER3 |= 1 << (irq%32);
 465              		.loc 1 138 0
 466 0380 4FF46142 		mov	r2, #57600
 467 0384 CEF20002 		movt	r2, 57344
 468 0388 4FF46143 		mov	r3, #57600
 469 038c CEF20003 		movt	r3, 57344
 470 0390 D3F88C10 		ldr	r1, [r3, #140]
 471 0394 7868     		ldr	r0, [r7, #4]
 472 0396 4FF01F03 		mov	r3, #31
 473 039a C8F20003 		movt	r3, 32768
 474 039e 0340     		ands	r3, r3, r0
 475 03a0 002B     		cmp	r3, #0
 476 03a2 05DA     		bge	.L31
 477 03a4 03F1FF33 		add	r3, r3, #-1
 478 03a8 63F01F03 		orn	r3, r3, #31
 479 03ac 03F10103 		add	r3, r3, #1
 480              	.L31:
 481 03b0 4FF00100 		mov	r0, #1
 482 03b4 00FA03F3 		lsl	r3, r0, r3
 483 03b8 0B43     		orrs	r3, r3, r1
 484 03ba C2F88C30 		str	r3, [r2, #140]
 139:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     	              break;
 485              		.loc 1 139 0
 486 03be 00BF     		nop
 487              	.L20:
 140:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     }              
 141:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
 488              		.loc 1 141 0
 489 03c0 07F11407 		add	r7, r7, #20
 490 03c4 BD46     		mov	sp, r7
 491 03c6 80BC     		pop	{r7}
 492 03c8 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE4:
 496 03ca 00BF     		.align	2
 497              		.global	set_irq_priority
 498              		.thumb
 499              		.thumb_func
 501              	set_irq_priority:
 502              	.LFB5:
 142:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /***********************************************************************/
 143:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** /*
 144:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Initialize the NVIC to set specified IRQ priority.
 145:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * 
 146:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * NOTE: The function only initializes the NVIC to set a single IRQ priority. 
 147:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Interrupts will also need to be enabled in the ARM core. This can be 
 148:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * done using the EnableInterrupts macro.
 149:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  *
 150:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * Parameters:
 151:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * irq    irq number to be enabled (the irq number NOT the vector number)
 152:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  * prio   irq priority. 0-15 levels. 0 max priority
 153:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****  */
 154:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
 155:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** void set_irq_priority (int irq, int prio)
 156:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** {
 503              		.loc 1 156 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 16
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 03cc 80B4     		push	{r7}
 509              	.LCFI13:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 03ce 85B0     		sub	sp, sp, #20
 513              	.LCFI14:
 514              		.cfi_def_cfa_offset 24
 515 03d0 00AF     		add	r7, sp, #0
 516              	.LCFI15:
 517              		.cfi_def_cfa_register 7
 518 03d2 7860     		str	r0, [r7, #4]
 519 03d4 3960     		str	r1, [r7, #0]
 157:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /*irq priority pointer*/
 158:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****    unsigned char *prio_reg;
 159:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
 160:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /* Make sure that the IRQ is an allowable number. Right now up to 91 is 
 161:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****      * used.
 162:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****      */
 163:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     if (irq > 91)
 520              		.loc 1 163 0
 521 03d6 7B68     		ldr	r3, [r7, #4]
 522 03d8 5B2B     		cmp	r3, #91
 523 03da 08DD     		ble	.L33
 164:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****         //printf("\nERR! Invalid IRQ value passed to priority irq function!\n");
 165:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
 166:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     if (prio > 15)
 524              		.loc 1 166 0
 525 03dc 3B68     		ldr	r3, [r7, #0]
 526 03de 0F2B     		cmp	r3, #15
 527 03e0 05DD     		ble	.L33
 167:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****         //printf("\nERR! Invalid priority value passed to priority irq function!\n");
 168:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     
 169:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
 170:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** 
 171:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /* Determine which of the NVICIPx corresponds to the irq */
 172:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     prio_reg = (unsigned char *)(((unsigned int)&NVICIP0) + irq);
 528              		.loc 1 172 0
 529 03e2 7B68     		ldr	r3, [r7, #4]
 530 03e4 03F16043 		add	r3, r3, #-536870912
 531 03e8 03F56443 		add	r3, r3, #58368
 532 03ec FB60     		str	r3, [r7, #12]
 533              	.L33:
 173:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     /* Assign priority to IRQ */
 174:../Sources/processor_specific_functions/K40/sys/arm_cm4.c ****     *prio_reg = ( (prio&0xF) << 3 );             
 534              		.loc 1 174 0
 535 03ee 3B68     		ldr	r3, [r7, #0]
 536 03f0 DBB2     		uxtb	r3, r3
 537 03f2 03F00F03 		and	r3, r3, #15
 538 03f6 DBB2     		uxtb	r3, r3
 539 03f8 4FEAC303 		lsl	r3, r3, #3
 540 03fc DAB2     		uxtb	r2, r3
 541 03fe FB68     		ldr	r3, [r7, #12]
 542 0400 1A70     		strb	r2, [r3, #0]
 175:../Sources/processor_specific_functions/K40/sys/arm_cm4.c **** }
 543              		.loc 1 175 0
 544 0402 07F11407 		add	r7, r7, #20
 545 0406 BD46     		mov	sp, r7
 546 0408 80BC     		pop	{r7}
 547 040a 7047     		bx	lr
 548              		.cfi_endproc
 549              	.LFE5:
 551              	.Letext0:
 552              		.file 2 "c:\\freescale\\cw mcu v10.6\\cross_tools\\arm-none-eabi-gcc-4_7_3\\bin\\../lib/gcc/arm-no
 553              		.file 3 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions\\K40\
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cm4.c
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:18     .text:00000000 $t
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:23     .text:00000000 stop
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:61     .text:00000020 wait
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:98     .text:00000040 write_vtor
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:133    .text:0000005c enable_irq
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:167    .text:00000084 $d
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:173    .text:00000094 $t
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:357    .text:00000288 disable_irq
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:391    .text:000002b0 $d
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:397    .text:000002c0 $t
C:\Users\Norbert\AppData\Local\Temp\cc8eor2d.s:501    .text:000003cc set_irq_priority
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.6111752e1bd0a440bd5209819217ec83
                           .group:00000000 wm4.MK40X256VMD100.h.96.c9a414c152ea85b941ecba81ab7c47ac
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.MK40X256VMD100.h.107.eeeaef96f186178f3d1f18db6c56d281

NO UNDEFINED SYMBOLS
