   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"MPU6050.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	I2C_Variable,4,4
  19              		.comm	uart_data,1,1
  20              		.comm	adc_data,60,4
  21              		.comm	Kp,4,4
  22              		.comm	Kd,4,4
  23              		.comm	Ki,4,4
  24              		.comm	zKp,4,4
  25              		.comm	zKd,4,4
  26              		.comm	basepower,4,4
  27              		.comm	setpoint_x,4,4
  28              		.comm	setpoint_y,4,4
  29              		.comm	setpoint_z,4,4
  30              		.comm	setpoint_alt,4,4
  31              		.comm	batt1_vol,4,4
  32              		.comm	batt2_vol,4,4
  33              		.comm	batt3_vol,4,4
  34              		.comm	BATT_VOLT,4,4
  35              		.comm	FatFs,560,4
  36              		.comm	fil,548,4
  37              		.global	GYRO_XOUT_OFFSET
  38              		.bss
  39              		.align	1
  42              	GYRO_XOUT_OFFSET:
  43 0000 0000     		.space	2
  44              		.global	GYRO_YOUT_OFFSET
  45              		.align	1
  48              	GYRO_YOUT_OFFSET:
  49 0002 0000     		.space	2
  50              		.global	GYRO_ZOUT_OFFSET
  51              		.align	1
  54              	GYRO_ZOUT_OFFSET:
  55 0004 0000     		.space	2
  56              		.global	ACCEL_XOUT_OFFSET
  57              		.align	1
  60              	ACCEL_XOUT_OFFSET:
  61 0006 0000     		.space	2
  62              		.global	ACCEL_YOUT_OFFSET
  63              		.align	1
  66              	ACCEL_YOUT_OFFSET:
  67 0008 0000     		.space	2
  68              		.global	ACCEL_ZOUT_OFFSET
  69              		.align	1
  72              	ACCEL_ZOUT_OFFSET:
  73 000a 0000     		.space	2
  74              		.global	GYRO_XANGLE
  75              		.align	2
  78              	GYRO_XANGLE:
  79 000c 00000000 		.space	4
  80              		.global	GYRO_YANGLE
  81              		.align	2
  84              	GYRO_YANGLE:
  85 0010 00000000 		.space	4
  86              		.global	GYRO_ZANGLE
  87              		.align	2
  90              	GYRO_ZANGLE:
  91 0014 00000000 		.space	4
  92              		.global	GYRO_XOUT
  93              		.align	1
  96              	GYRO_XOUT:
  97 0018 0000     		.space	2
  98              		.global	GYRO_YOUT
  99              		.align	1
 102              	GYRO_YOUT:
 103 001a 0000     		.space	2
 104              		.global	GYRO_ZOUT
 105              		.align	1
 108              	GYRO_ZOUT:
 109 001c 0000     		.space	2
 110              		.global	ACCEL_XOUT
 111              		.align	1
 114              	ACCEL_XOUT:
 115 001e 0000     		.space	2
 116              		.global	ACCEL_YOUT
 117              		.align	1
 120              	ACCEL_YOUT:
 121 0020 0000     		.space	2
 122              		.global	ACCEL_ZOUT
 123              		.align	1
 126              	ACCEL_ZOUT:
 127 0022 0000     		.space	2
 128              		.global	ACCEL_Gx
 129              		.align	2
 132              	ACCEL_Gx:
 133 0024 00000000 		.space	4
 134              		.global	ACCEL_Gy
 135              		.align	2
 138              	ACCEL_Gy:
 139 0028 00000000 		.space	4
 140              		.global	ACCEL_Gz
 141              		.align	2
 144              	ACCEL_Gz:
 145 002c 00000000 		.space	4
 146              		.global	ACCEL
 147              		.align	3
 150              	ACCEL:
 151 0030 00000000 		.space	8
 151      00000000 
 152              		.global	GYRO_XRATE
 153              		.align	2
 156              	GYRO_XRATE:
 157 0038 00000000 		.space	4
 158              		.global	GYRO_YRATE
 159              		.align	2
 162              	GYRO_YRATE:
 163 003c 00000000 		.space	4
 164              		.global	GYRO_ZRATE
 165              		.align	2
 168              	GYRO_ZRATE:
 169 0040 00000000 		.space	4
 170              		.comm	ACCEL_XANGLE,4,4
 171              		.comm	ACCEL_YANGLE,4,4
 172              		.global	gyro_xsensitivity
 173              		.data
 174              		.align	2
 177              	gyro_xsensitivity:
 178 0000 00008542 		.word	1116012544
 179              		.global	gyro_ysensitivity
 180              		.align	2
 183              	gyro_ysensitivity:
 184 0004 00008542 		.word	1116012544
 185              		.global	gyro_zsensitivity
 186              		.align	2
 189              	gyro_zsensitivity:
 190 0008 00008542 		.word	1116012544
 191              		.comm	a,4,4
 192              		.global	dt
 193              		.align	2
 196              	dt:
 197 000c 0AD7233B 		.word	992204554
 198              		.global	COMPLEMENTARY_XANGLE
 199              		.bss
 200              		.align	2
 203              	COMPLEMENTARY_XANGLE:
 204 0044 00000000 		.space	4
 205              		.global	COMPLEMENTARY_YANGLE
 206              		.align	2
 209              	COMPLEMENTARY_YANGLE:
 210 0048 00000000 		.space	4
 211              		.global	filter_xterm
 212              		.align	2
 215              	filter_xterm:
 216 004c 00000000 		.space	12
 216      00000000 
 216      00000000 
 217              		.global	filter_yterm
 218              		.align	2
 221              	filter_yterm:
 222 0058 00000000 		.space	12
 222      00000000 
 222      00000000 
 223              		.global	XANGLE_OFFSET
 224              		.align	2
 227              	XANGLE_OFFSET:
 228 0064 00000000 		.space	4
 229              		.global	YANGLE_OFFSET
 230              		.align	2
 233              	YANGLE_OFFSET:
 234 0068 00000000 		.space	4
 235              		.comm	TEMP,4,4
 236              		.global	timeConstant
 237              		.data
 238              		.align	2
 241              	timeConstant:
 242 0010 00007041 		.word	1097859072
 243              		.comm	MPU_6050_buffer,14,4
 244              		.comm	AC1,2,2
 245              		.comm	AC2,2,2
 246              		.comm	AC3,2,2
 247              		.comm	B1,2,2
 248              		.comm	B2,2,2
 249              		.comm	MB,2,2
 250              		.comm	MC,2,2
 251              		.comm	MD,2,2
 252              		.comm	AC4,2,2
 253              		.comm	AC5,2,2
 254              		.comm	AC6,2,2
 255              		.comm	T,4,4
 256              		.comm	absolute_altittude,4,4
 257              		.comm	start_altittude,4,4
 258              		.comm	relative_altittude,4,4
 259              		.comm	P,4,4
 260              		.global	Gx_offset
 261              		.bss
 262              		.align	2
 265              	Gx_offset:
 266 006c 00000000 		.space	4
 267              		.global	Gy_offset
 268              		.align	2
 271              	Gy_offset:
 272 0070 00000000 		.space	4
 273              		.global	Gz_offset
 274              		.align	2
 277              	Gz_offset:
 278 0074 00000000 		.space	4
 279              		.text
 280              		.align	2
 281              		.global	MPU6050_Test_I2C
 282              		.thumb
 283              		.thumb_func
 285              	MPU6050_Test_I2C:
 286              	.LFB0:
 287              		.file 1 "../Sources/MPU6050.c"
   1:../Sources/MPU6050.c **** /*
   2:../Sources/MPU6050.c ****  * MPU6050.c
   3:../Sources/MPU6050.c ****  *
   4:../Sources/MPU6050.c ****  *  Created on: Oct 26, 2014
   5:../Sources/MPU6050.c ****  *      Author: Norbi
   6:../Sources/MPU6050.c ****  */
   7:../Sources/MPU6050.c **** 
   8:../Sources/MPU6050.c **** #include "init.h"
   9:../Sources/MPU6050.c **** #include "math.h"
  10:../Sources/MPU6050.c **** 
  11:../Sources/MPU6050.c **** int16_t GYRO_XOUT_OFFSET = 0;
  12:../Sources/MPU6050.c **** int16_t GYRO_YOUT_OFFSET = 0;
  13:../Sources/MPU6050.c **** int16_t GYRO_ZOUT_OFFSET = 0;
  14:../Sources/MPU6050.c **** 
  15:../Sources/MPU6050.c **** int16_t ACCEL_XOUT_OFFSET = 0;
  16:../Sources/MPU6050.c **** int16_t ACCEL_YOUT_OFFSET = 0;
  17:../Sources/MPU6050.c **** int16_t ACCEL_ZOUT_OFFSET = 0;
  18:../Sources/MPU6050.c **** 
  19:../Sources/MPU6050.c **** float GYRO_XANGLE = 0;
  20:../Sources/MPU6050.c **** float GYRO_YANGLE = 0;
  21:../Sources/MPU6050.c **** float GYRO_ZANGLE = 0;
  22:../Sources/MPU6050.c **** 
  23:../Sources/MPU6050.c **** int16_t GYRO_XOUT = 0;
  24:../Sources/MPU6050.c **** int16_t GYRO_YOUT = 0;
  25:../Sources/MPU6050.c **** int16_t GYRO_ZOUT = 0;
  26:../Sources/MPU6050.c **** 
  27:../Sources/MPU6050.c **** int16_t ACCEL_XOUT = 0;
  28:../Sources/MPU6050.c **** int16_t ACCEL_YOUT = 0;
  29:../Sources/MPU6050.c **** int16_t ACCEL_ZOUT = 0;
  30:../Sources/MPU6050.c **** float ACCEL_Gx = 0;
  31:../Sources/MPU6050.c **** float ACCEL_Gy = 0;
  32:../Sources/MPU6050.c **** float ACCEL_Gz = 0;
  33:../Sources/MPU6050.c **** double ACCEL=0;
  34:../Sources/MPU6050.c **** 
  35:../Sources/MPU6050.c **** float GYRO_XRATE = 0;
  36:../Sources/MPU6050.c **** float GYRO_YRATE = 0;
  37:../Sources/MPU6050.c **** float GYRO_ZRATE = 0;
  38:../Sources/MPU6050.c **** 
  39:../Sources/MPU6050.c **** float ACCEL_XANGLE;
  40:../Sources/MPU6050.c **** float ACCEL_YANGLE;
  41:../Sources/MPU6050.c **** 
  42:../Sources/MPU6050.c **** float gyro_xsensitivity=66.5;
  43:../Sources/MPU6050.c **** float gyro_ysensitivity=66.5;
  44:../Sources/MPU6050.c **** float gyro_zsensitivity=66.5;
  45:../Sources/MPU6050.c **** float a;
  46:../Sources/MPU6050.c **** float dt=0.0025;
  47:../Sources/MPU6050.c **** 
  48:../Sources/MPU6050.c **** float COMPLEMENTARY_XANGLE = 0;
  49:../Sources/MPU6050.c **** float COMPLEMENTARY_YANGLE = 0;
  50:../Sources/MPU6050.c **** 
  51:../Sources/MPU6050.c **** float filter_xterm[3] = {0,0,0};
  52:../Sources/MPU6050.c **** float filter_yterm[3] = {0,0,0};
  53:../Sources/MPU6050.c **** 
  54:../Sources/MPU6050.c **** float TEMP;
  55:../Sources/MPU6050.c **** float timeConstant=15;//0.35;//0.35;
  56:../Sources/MPU6050.c **** 
  57:../Sources/MPU6050.c **** float Gx_offset=0,Gy_offset=0,Gz_offset=0;
  58:../Sources/MPU6050.c **** float XANGLE_OFFSET=0,YANGLE_OFFSET=0;
  59:../Sources/MPU6050.c **** 
  60:../Sources/MPU6050.c **** char MPU6050_Test_I2C()
  61:../Sources/MPU6050.c **** {
 288              		.loc 1 61 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              	.LCFI0:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              	.LCFI1:
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              	.LCFI2:
 302              		.cfi_def_cfa_register 7
  62:../Sources/MPU6050.c ****     char Data = 0x00;
 303              		.loc 1 62 0
 304 0006 4FF00003 		mov	r3, #0
 305 000a FB71     		strb	r3, [r7, #7]
  63:../Sources/MPU6050.c ****     Data=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_WHO_AM_I);
 306              		.loc 1 63 0
 307 000c 4FF06800 		mov	r0, #104
 308 0010 4FF07501 		mov	r1, #117
 309 0014 FFF7FEFF 		bl	I2CReadRegister
 310 0018 0346     		mov	r3, r0
 311 001a FB71     		strb	r3, [r7, #7]
  64:../Sources/MPU6050.c **** 
  65:../Sources/MPU6050.c ****     if(Data == 0x68)
 312              		.loc 1 65 0
 313 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 314 001e 682B     		cmp	r3, #104
 315 0020 02D1     		bne	.L2
  66:../Sources/MPU6050.c ****     {
  67:../Sources/MPU6050.c ****         return 0;
 316              		.loc 1 67 0
 317 0022 4FF00003 		mov	r3, #0
 318 0026 01E0     		b	.L3
 319              	.L2:
  68:../Sources/MPU6050.c ****     }
  69:../Sources/MPU6050.c ****     else
  70:../Sources/MPU6050.c ****     {
  71:../Sources/MPU6050.c ****     	return 19;  
 320              		.loc 1 71 0
 321 0028 4FF01303 		mov	r3, #19
 322              	.L3:
  72:../Sources/MPU6050.c ****     }
  73:../Sources/MPU6050.c **** 
  74:../Sources/MPU6050.c **** }
 323              		.loc 1 74 0
 324 002c 1846     		mov	r0, r3
 325 002e 07F10807 		add	r7, r7, #8
 326 0032 BD46     		mov	sp, r7
 327 0034 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE0:
 331 0036 00BF     		.align	2
 332              		.global	MPU6050_Setup
 333              		.thumb
 334              		.thumb_func
 336              	MPU6050_Setup:
 337              	.LFB1:
  75:../Sources/MPU6050.c **** 
  76:../Sources/MPU6050.c **** void MPU6050_Setup()
  77:../Sources/MPU6050.c **** {
 338              		.loc 1 77 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0038 80B5     		push	{r7, lr}
 343              	.LCFI3:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 003a 00AF     		add	r7, sp, #0
 348              	.LCFI4:
 349              		.cfi_def_cfa_register 7
  78:../Sources/MPU6050.c **** 	//Sets sample rate to 8000/1+7 = 500Hz
  79:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_SMPLRT_DIV, 0x03);
 350              		.loc 1 79 0
 351 003c 4FF06800 		mov	r0, #104
 352 0040 4FF01901 		mov	r1, #25
 353 0044 4FF00302 		mov	r2, #3
 354 0048 FFF7FEFF 		bl	I2CWriteRegister
  80:../Sources/MPU6050.c **** 	//Disable FSync, 256Hz DLPF
  81:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_CONFIG, 0x03);
 355              		.loc 1 81 0
 356 004c 4FF06800 		mov	r0, #104
 357 0050 4FF01A01 		mov	r1, #26
 358 0054 4FF00302 		mov	r2, #3
 359 0058 FFF7FEFF 		bl	I2CWriteRegister
  82:../Sources/MPU6050.c **** 	//Disable gyro self tests, scale of 500 degrees/s
  83:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_CONFIG, 0b00001000);
 360              		.loc 1 83 0
 361 005c 4FF06800 		mov	r0, #104
 362 0060 4FF01B01 		mov	r1, #27
 363 0064 4FF00802 		mov	r2, #8
 364 0068 FFF7FEFF 		bl	I2CWriteRegister
  84:../Sources/MPU6050.c **** 	//Disable accel self tests, scale of +-4g, no DHPF
  85:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_CONFIG, 0b00001000);
 365              		.loc 1 85 0
 366 006c 4FF06800 		mov	r0, #104
 367 0070 4FF01C01 		mov	r1, #28
 368 0074 4FF00802 		mov	r2, #8
 369 0078 FFF7FEFF 		bl	I2CWriteRegister
  86:../Sources/MPU6050.c **** 	//Freefall threshold of <|0mg|
  87:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_FF_THR, 0x00);
 370              		.loc 1 87 0
 371 007c 4FF06800 		mov	r0, #104
 372 0080 4FF01D01 		mov	r1, #29
 373 0084 4FF00002 		mov	r2, #0
 374 0088 FFF7FEFF 		bl	I2CWriteRegister
  88:../Sources/MPU6050.c **** 	//Freefall duration limit of 0
  89:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_FF_DUR, 0x00);
 375              		.loc 1 89 0
 376 008c 4FF06800 		mov	r0, #104
 377 0090 4FF01E01 		mov	r1, #30
 378 0094 4FF00002 		mov	r2, #0
 379 0098 FFF7FEFF 		bl	I2CWriteRegister
  90:../Sources/MPU6050.c **** 	//Motion threshold of >0mg
  91:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_MOT_THR, 0x00);
 380              		.loc 1 91 0
 381 009c 4FF06800 		mov	r0, #104
 382 00a0 4FF01F01 		mov	r1, #31
 383 00a4 4FF00002 		mov	r2, #0
 384 00a8 FFF7FEFF 		bl	I2CWriteRegister
  92:../Sources/MPU6050.c **** 	//Motion duration of >0s
  93:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_MOT_DUR, 0x00);
 385              		.loc 1 93 0
 386 00ac 4FF06800 		mov	r0, #104
 387 00b0 4FF02001 		mov	r1, #32
 388 00b4 4FF00002 		mov	r2, #0
 389 00b8 FFF7FEFF 		bl	I2CWriteRegister
  94:../Sources/MPU6050.c **** 	//Zero motion threshold
  95:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_ZRMOT_THR, 0x00);
 390              		.loc 1 95 0
 391 00bc 4FF06800 		mov	r0, #104
 392 00c0 4FF02101 		mov	r1, #33
 393 00c4 4FF00002 		mov	r2, #0
 394 00c8 FFF7FEFF 		bl	I2CWriteRegister
  96:../Sources/MPU6050.c **** 	//Zero motion duration threshold
  97:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_ZRMOT_DUR, 0x00);
 395              		.loc 1 97 0
 396 00cc 4FF06800 		mov	r0, #104
 397 00d0 4FF02201 		mov	r1, #34
 398 00d4 4FF00002 		mov	r2, #0
 399 00d8 FFF7FEFF 		bl	I2CWriteRegister
  98:../Sources/MPU6050.c **** 	//Disable sensor output to FIFO buffer
  99:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_FIFO_EN, 0x00);
 400              		.loc 1 99 0
 401 00dc 4FF06800 		mov	r0, #104
 402 00e0 4FF02301 		mov	r1, #35
 403 00e4 4FF00002 		mov	r2, #0
 404 00e8 FFF7FEFF 		bl	I2CWriteRegister
 100:../Sources/MPU6050.c **** 	
 101:../Sources/MPU6050.c **** 	//AUX I2C setup
 102:../Sources/MPU6050.c **** 	//Sets AUX I2C to single master control, plus other config
 103:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_MST_CTRL, 0x00);
 405              		.loc 1 103 0
 406 00ec 4FF06800 		mov	r0, #104
 407 00f0 4FF02401 		mov	r1, #36
 408 00f4 4FF00002 		mov	r2, #0
 409 00f8 FFF7FEFF 		bl	I2CWriteRegister
 104:../Sources/MPU6050.c **** 	//Setup AUX I2C slaves	
 105:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV0_ADDR, 0x00);
 410              		.loc 1 105 0
 411 00fc 4FF06800 		mov	r0, #104
 412 0100 4FF02501 		mov	r1, #37
 413 0104 4FF00002 		mov	r2, #0
 414 0108 FFF7FEFF 		bl	I2CWriteRegister
 106:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV0_REG, 0x00);
 415              		.loc 1 106 0
 416 010c 4FF06800 		mov	r0, #104
 417 0110 4FF02601 		mov	r1, #38
 418 0114 4FF00002 		mov	r2, #0
 419 0118 FFF7FEFF 		bl	I2CWriteRegister
 107:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV0_CTRL, 0x00);
 420              		.loc 1 107 0
 421 011c 4FF06800 		mov	r0, #104
 422 0120 4FF02701 		mov	r1, #39
 423 0124 4FF00002 		mov	r2, #0
 424 0128 FFF7FEFF 		bl	I2CWriteRegister
 108:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV1_ADDR, 0x00);
 425              		.loc 1 108 0
 426 012c 4FF06800 		mov	r0, #104
 427 0130 4FF02801 		mov	r1, #40
 428 0134 4FF00002 		mov	r2, #0
 429 0138 FFF7FEFF 		bl	I2CWriteRegister
 109:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV1_REG, 0x00);
 430              		.loc 1 109 0
 431 013c 4FF06800 		mov	r0, #104
 432 0140 4FF02901 		mov	r1, #41
 433 0144 4FF00002 		mov	r2, #0
 434 0148 FFF7FEFF 		bl	I2CWriteRegister
 110:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV1_CTRL, 0x00);
 435              		.loc 1 110 0
 436 014c 4FF06800 		mov	r0, #104
 437 0150 4FF02A01 		mov	r1, #42
 438 0154 4FF00002 		mov	r2, #0
 439 0158 FFF7FEFF 		bl	I2CWriteRegister
 111:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV2_ADDR, 0x00);
 440              		.loc 1 111 0
 441 015c 4FF06800 		mov	r0, #104
 442 0160 4FF02B01 		mov	r1, #43
 443 0164 4FF00002 		mov	r2, #0
 444 0168 FFF7FEFF 		bl	I2CWriteRegister
 112:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV2_REG, 0x00);
 445              		.loc 1 112 0
 446 016c 4FF06800 		mov	r0, #104
 447 0170 4FF02C01 		mov	r1, #44
 448 0174 4FF00002 		mov	r2, #0
 449 0178 FFF7FEFF 		bl	I2CWriteRegister
 113:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV2_CTRL, 0x00);
 450              		.loc 1 113 0
 451 017c 4FF06800 		mov	r0, #104
 452 0180 4FF02D01 		mov	r1, #45
 453 0184 4FF00002 		mov	r2, #0
 454 0188 FFF7FEFF 		bl	I2CWriteRegister
 114:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV3_ADDR, 0x00);
 455              		.loc 1 114 0
 456 018c 4FF06800 		mov	r0, #104
 457 0190 4FF02E01 		mov	r1, #46
 458 0194 4FF00002 		mov	r2, #0
 459 0198 FFF7FEFF 		bl	I2CWriteRegister
 115:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV3_REG, 0x00);
 460              		.loc 1 115 0
 461 019c 4FF06800 		mov	r0, #104
 462 01a0 4FF02F01 		mov	r1, #47
 463 01a4 4FF00002 		mov	r2, #0
 464 01a8 FFF7FEFF 		bl	I2CWriteRegister
 116:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV3_CTRL, 0x00);
 465              		.loc 1 116 0
 466 01ac 4FF06800 		mov	r0, #104
 467 01b0 4FF03001 		mov	r1, #48
 468 01b4 4FF00002 		mov	r2, #0
 469 01b8 FFF7FEFF 		bl	I2CWriteRegister
 117:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV4_ADDR, 0x00);
 470              		.loc 1 117 0
 471 01bc 4FF06800 		mov	r0, #104
 472 01c0 4FF03101 		mov	r1, #49
 473 01c4 4FF00002 		mov	r2, #0
 474 01c8 FFF7FEFF 		bl	I2CWriteRegister
 118:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV4_REG, 0x00);
 475              		.loc 1 118 0
 476 01cc 4FF06800 		mov	r0, #104
 477 01d0 4FF03201 		mov	r1, #50
 478 01d4 4FF00002 		mov	r2, #0
 479 01d8 FFF7FEFF 		bl	I2CWriteRegister
 119:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV4_DO, 0x00);
 480              		.loc 1 119 0
 481 01dc 4FF06800 		mov	r0, #104
 482 01e0 4FF03301 		mov	r1, #51
 483 01e4 4FF00002 		mov	r2, #0
 484 01e8 FFF7FEFF 		bl	I2CWriteRegister
 120:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV4_CTRL, 0x00);
 485              		.loc 1 120 0
 486 01ec 4FF06800 		mov	r0, #104
 487 01f0 4FF03401 		mov	r1, #52
 488 01f4 4FF00002 		mov	r2, #0
 489 01f8 FFF7FEFF 		bl	I2CWriteRegister
 121:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV4_DI, 0x00);
 490              		.loc 1 121 0
 491 01fc 4FF06800 		mov	r0, #104
 492 0200 4FF03501 		mov	r1, #53
 493 0204 4FF00002 		mov	r2, #0
 494 0208 FFF7FEFF 		bl	I2CWriteRegister
 122:../Sources/MPU6050.c **** 		 
 123:../Sources/MPU6050.c **** 	//MPU6050_RA_I2C_MST_STATUS //Read-only
 124:../Sources/MPU6050.c **** 	//Setup INT pin and AUX I2C pass through
 125:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_INT_PIN_CFG, 0x00);
 495              		.loc 1 125 0
 496 020c 4FF06800 		mov	r0, #104
 497 0210 4FF03701 		mov	r1, #55
 498 0214 4FF00002 		mov	r2, #0
 499 0218 FFF7FEFF 		bl	I2CWriteRegister
 126:../Sources/MPU6050.c **** 	//Enable data ready interrupt
 127:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_INT_ENABLE, 0x00);
 500              		.loc 1 127 0
 501 021c 4FF06800 		mov	r0, #104
 502 0220 4FF03801 		mov	r1, #56
 503 0224 4FF00002 		mov	r2, #0
 504 0228 FFF7FEFF 		bl	I2CWriteRegister
 128:../Sources/MPU6050.c **** 	
 129:../Sources/MPU6050.c **** 	//MPU6050_RA_DMP_INT_STATUS		//Read-only
 130:../Sources/MPU6050.c **** 	//MPU6050_RA_INT_STATUS 3A		//Read-only
 131:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_XOUT_H 		//Read-only
 132:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_XOUT_L 		//Read-only
 133:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_YOUT_H 		//Read-only
 134:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_YOUT_L 		//Read-only
 135:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_ZOUT_H 		//Read-only
 136:../Sources/MPU6050.c **** 	//MPU6050_RA_ACCEL_ZOUT_L 		//Read-only
 137:../Sources/MPU6050.c **** 	//MPU6050_RA_TEMP_OUT_H 		//Read-only
 138:../Sources/MPU6050.c **** 	//MPU6050_RA_TEMP_OUT_L 		//Read-only
 139:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_XOUT_H 		//Read-only
 140:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_XOUT_L 		//Read-only
 141:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_YOUT_H 		//Read-only
 142:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_YOUT_L 		//Read-only
 143:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_ZOUT_H 		//Read-only
 144:../Sources/MPU6050.c **** 	//MPU6050_RA_GYRO_ZOUT_L 		//Read-only
 145:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_00 	//Read-only
 146:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_01 	//Read-only
 147:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_02 	//Read-only
 148:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_03 	//Read-only
 149:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_04 	//Read-only
 150:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_05 	//Read-only
 151:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_06 	//Read-only
 152:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_07 	//Read-only
 153:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_08 	//Read-only
 154:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_09 	//Read-only
 155:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_10 	//Read-only
 156:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_11 	//Read-only
 157:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_12 	//Read-only
 158:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_13 	//Read-only
 159:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_14 	//Read-only
 160:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_15 	//Read-only
 161:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_16 	//Read-only
 162:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_17 	//Read-only
 163:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_18 	//Read-only
 164:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_19 	//Read-only
 165:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_20 	//Read-only
 166:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_21 	//Read-only
 167:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_22 	//Read-only
 168:../Sources/MPU6050.c **** 	//MPU6050_RA_EXT_SENS_DATA_23 	//Read-only
 169:../Sources/MPU6050.c **** 	//MPU6050_RA_MOT_DETECT_STATUS 	//Read-only
 170:../Sources/MPU6050.c **** 		
 171:../Sources/MPU6050.c **** 	//Slave out, dont care
 172:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV0_DO, 0x00);
 505              		.loc 1 172 0
 506 022c 4FF06800 		mov	r0, #104
 507 0230 4FF06301 		mov	r1, #99
 508 0234 4FF00002 		mov	r2, #0
 509 0238 FFF7FEFF 		bl	I2CWriteRegister
 173:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV1_DO, 0x00); 	
 510              		.loc 1 173 0
 511 023c 4FF06800 		mov	r0, #104
 512 0240 4FF06401 		mov	r1, #100
 513 0244 4FF00002 		mov	r2, #0
 514 0248 FFF7FEFF 		bl	I2CWriteRegister
 174:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV2_DO, 0x00); 	
 515              		.loc 1 174 0
 516 024c 4FF06800 		mov	r0, #104
 517 0250 4FF06501 		mov	r1, #101
 518 0254 4FF00002 		mov	r2, #0
 519 0258 FFF7FEFF 		bl	I2CWriteRegister
 175:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_SLV3_DO, 0x00); 	
 520              		.loc 1 175 0
 521 025c 4FF06800 		mov	r0, #104
 522 0260 4FF06601 		mov	r1, #102
 523 0264 4FF00002 		mov	r2, #0
 524 0268 FFF7FEFF 		bl	I2CWriteRegister
 176:../Sources/MPU6050.c **** 	//More slave config
 177:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_I2C_MST_DELAY_CTRL, 0x00);
 525              		.loc 1 177 0
 526 026c 4FF06800 		mov	r0, #104
 527 0270 4FF06701 		mov	r1, #103
 528 0274 4FF00002 		mov	r2, #0
 529 0278 FFF7FEFF 		bl	I2CWriteRegister
 178:../Sources/MPU6050.c **** 	//Reset sensor signal paths
 179:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_SIGNAL_PATH_RESET, 0x00); 	
 530              		.loc 1 179 0
 531 027c 4FF06800 		mov	r0, #104
 532 0280 4FF06801 		mov	r1, #104
 533 0284 4FF00002 		mov	r2, #0
 534 0288 FFF7FEFF 		bl	I2CWriteRegister
 180:../Sources/MPU6050.c **** 	//Motion detection control
 181:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_MOT_DETECT_CTRL, 0x00); 		
 535              		.loc 1 181 0
 536 028c 4FF06800 		mov	r0, #104
 537 0290 4FF06901 		mov	r1, #105
 538 0294 4FF00002 		mov	r2, #0
 539 0298 FFF7FEFF 		bl	I2CWriteRegister
 182:../Sources/MPU6050.c **** 	//Disables FIFO, AUX I2C, FIFO and I2C reset bits to 0
 183:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_USER_CTRL, 0x00);
 540              		.loc 1 183 0
 541 029c 4FF06800 		mov	r0, #104
 542 02a0 4FF06A01 		mov	r1, #106
 543 02a4 4FF00002 		mov	r2, #0
 544 02a8 FFF7FEFF 		bl	I2CWriteRegister
 184:../Sources/MPU6050.c **** 	//Sets clock source to gyro reference w/ PLL
 185:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_PWR_MGMT_1, 0b00000010);
 545              		.loc 1 185 0
 546 02ac 4FF06800 		mov	r0, #104
 547 02b0 4FF06B01 		mov	r1, #107
 548 02b4 4FF00202 		mov	r2, #2
 549 02b8 FFF7FEFF 		bl	I2CWriteRegister
 186:../Sources/MPU6050.c **** 	//Controls frequency of wakeups in accel low power mode plus the sensor standby modes
 187:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_PWR_MGMT_2, 0x00);
 550              		.loc 1 187 0
 551 02bc 4FF06800 		mov	r0, #104
 552 02c0 4FF06C01 		mov	r1, #108
 553 02c4 4FF00002 		mov	r2, #0
 554 02c8 FFF7FEFF 		bl	I2CWriteRegister
 188:../Sources/MPU6050.c **** 	//MPU6050_RA_BANK_SEL			//Not in datasheet
 189:../Sources/MPU6050.c **** 	//MPU6050_RA_MEM_START_ADDR		//Not in datasheet
 190:../Sources/MPU6050.c **** 	//MPU6050_RA_MEM_R_W			//Not in datasheet
 191:../Sources/MPU6050.c **** 	//MPU6050_RA_DMP_CFG_1			//Not in datasheet
 192:../Sources/MPU6050.c **** 	//MPU6050_RA_DMP_CFG_2			//Not in datasheet
 193:../Sources/MPU6050.c **** 	//MPU6050_RA_FIFO_COUNTH		//Read-only
 194:../Sources/MPU6050.c **** 	//MPU6050_RA_FIFO_COUNTL		//Read-only
 195:../Sources/MPU6050.c **** 	//Data transfer to and from the FIFO buffer
 196:../Sources/MPU6050.c **** 	I2CWriteRegister(MPU6050_ADDRESS, MPU6050_RA_FIFO_R_W, 0x00);
 555              		.loc 1 196 0
 556 02cc 4FF06800 		mov	r0, #104
 557 02d0 4FF07401 		mov	r1, #116
 558 02d4 4FF00002 		mov	r2, #0
 559 02d8 FFF7FEFF 		bl	I2CWriteRegister
 197:../Sources/MPU6050.c **** 	//MPU6050_RA_WHO_AM_I 			//Read-only, I2C address
 198:../Sources/MPU6050.c **** 	
 199:../Sources/MPU6050.c **** 	//printf("\nMPU6050 Setup Complete");
 200:../Sources/MPU6050.c **** }
 560              		.loc 1 200 0
 561 02dc 80BD     		pop	{r7, pc}
 562              		.cfi_endproc
 563              	.LFE1:
 565              		.global	__aeabi_f2d
 566              		.global	__aeabi_dadd
 567              		.global	__aeabi_ddiv
 568              		.global	__aeabi_d2f
 569 02de 00BF     		.align	2
 570              		.global	Calibrate_Accel
 571              		.thumb
 572              		.thumb_func
 574              	Calibrate_Accel:
 575              	.LFB2:
 201:../Sources/MPU6050.c **** 
 202:../Sources/MPU6050.c **** void Calibrate_Accel()
 203:../Sources/MPU6050.c **** {
 576              		.loc 1 203 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 48
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 02e0 80B5     		push	{r7, lr}
 581              	.LCFI5:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 02e2 8CB0     		sub	sp, sp, #48
 586              	.LCFI6:
 587              		.cfi_def_cfa_offset 56
 588 02e4 00AF     		add	r7, sp, #0
 589              	.LCFI7:
 590              		.cfi_def_cfa_register 7
 204:../Sources/MPU6050.c **** 	double XANGLE_SUM=0,YANGLE_SUM=0,Gx_sum=0,Gy_sum=0,Gz_sum=0;
 591              		.loc 1 204 0
 592 02e6 4FF00002 		mov	r2, #0
 593 02ea 4FF00003 		mov	r3, #0
 594 02ee C7E90A23 		strd	r2, [r7, #40]
 595 02f2 4FF00002 		mov	r2, #0
 596 02f6 4FF00003 		mov	r3, #0
 597 02fa C7E90823 		strd	r2, [r7, #32]
 598 02fe 4FF00002 		mov	r2, #0
 599 0302 4FF00003 		mov	r3, #0
 600 0306 C7E90423 		strd	r2, [r7, #16]
 601 030a 4FF00002 		mov	r2, #0
 602 030e 4FF00003 		mov	r3, #0
 603 0312 C7E90223 		strd	r2, [r7, #8]
 604 0316 4FF00002 		mov	r2, #0
 605 031a 4FF00003 		mov	r3, #0
 606 031e C7E90023 		strd	r2, [r7]
 205:../Sources/MPU6050.c **** 	int x;
 206:../Sources/MPU6050.c **** 	
 207:../Sources/MPU6050.c **** 	for(x=0;x<1000;x++)
 607              		.loc 1 207 0
 608 0322 4FF00003 		mov	r3, #0
 609 0326 FB61     		str	r3, [r7, #28]
 610 0328 2BE0     		b	.L6
 611              	.L7:
 208:../Sources/MPU6050.c **** 	{
 209:../Sources/MPU6050.c **** 		read_MPU6050();
 612              		.loc 1 209 0 discriminator 2
 613 032a FFF7FEFF 		bl	read_MPU6050
 210:../Sources/MPU6050.c **** 		Get_Angles();
 614              		.loc 1 210 0 discriminator 2
 615 032e FFF7FEFF 		bl	Get_Angles
 211:../Sources/MPU6050.c **** 		XANGLE_SUM=XANGLE_SUM+ACCEL_XANGLE;
 616              		.loc 1 211 0 discriminator 2
 617 0332 40F20003 		movw	r3, #:lower16:ACCEL_XANGLE
 618 0336 C0F20003 		movt	r3, #:upper16:ACCEL_XANGLE
 619 033a 1B68     		ldr	r3, [r3, #0]	@ float
 620 033c 1846     		mov	r0, r3
 621 033e FFF7FEFF 		bl	__aeabi_f2d
 622 0342 0246     		mov	r2, r0
 623 0344 0B46     		mov	r3, r1
 624 0346 D7E90A01 		ldrd	r0, [r7, #40]
 625 034a FFF7FEFF 		bl	__aeabi_dadd
 626 034e 0246     		mov	r2, r0
 627 0350 0B46     		mov	r3, r1
 628 0352 C7E90A23 		strd	r2, [r7, #40]
 212:../Sources/MPU6050.c **** 		YANGLE_SUM=YANGLE_SUM+ACCEL_YANGLE;
 629              		.loc 1 212 0 discriminator 2
 630 0356 40F20003 		movw	r3, #:lower16:ACCEL_YANGLE
 631 035a C0F20003 		movt	r3, #:upper16:ACCEL_YANGLE
 632 035e 1B68     		ldr	r3, [r3, #0]	@ float
 633 0360 1846     		mov	r0, r3
 634 0362 FFF7FEFF 		bl	__aeabi_f2d
 635 0366 0246     		mov	r2, r0
 636 0368 0B46     		mov	r3, r1
 637 036a D7E90801 		ldrd	r0, [r7, #32]
 638 036e FFF7FEFF 		bl	__aeabi_dadd
 639 0372 0246     		mov	r2, r0
 640 0374 0B46     		mov	r3, r1
 641 0376 C7E90823 		strd	r2, [r7, #32]
 207:../Sources/MPU6050.c **** 	for(x=0;x<1000;x++)
 642              		.loc 1 207 0 discriminator 2
 643 037a FB69     		ldr	r3, [r7, #28]
 644 037c 03F10103 		add	r3, r3, #1
 645 0380 FB61     		str	r3, [r7, #28]
 646              	.L6:
 207:../Sources/MPU6050.c **** 	for(x=0;x<1000;x++)
 647              		.loc 1 207 0 is_stmt 0 discriminator 1
 648 0382 FA69     		ldr	r2, [r7, #28]
 649 0384 40F2E733 		movw	r3, #999
 650 0388 9A42     		cmp	r2, r3
 651 038a CEDD     		ble	.L7
 213:../Sources/MPU6050.c **** 	}
 214:../Sources/MPU6050.c **** 	XANGLE_OFFSET=XANGLE_SUM/1000;
 652              		.loc 1 214 0 is_stmt 1
 653 038c D7E90A01 		ldrd	r0, [r7, #40]
 654 0390 4FF00002 		mov	r2, #0
 655 0394 4FF48043 		mov	r3, #16384
 656 0398 C4F28F03 		movt	r3, 16527
 657 039c FFF7FEFF 		bl	__aeabi_ddiv
 658 03a0 0246     		mov	r2, r0
 659 03a2 0B46     		mov	r3, r1
 660 03a4 1046     		mov	r0, r2
 661 03a6 1946     		mov	r1, r3
 662 03a8 FFF7FEFF 		bl	__aeabi_d2f
 663 03ac 0246     		mov	r2, r0
 664 03ae 40F20003 		movw	r3, #:lower16:XANGLE_OFFSET
 665 03b2 C0F20003 		movt	r3, #:upper16:XANGLE_OFFSET
 666 03b6 1A60     		str	r2, [r3, #0]	@ float
 215:../Sources/MPU6050.c **** 	YANGLE_OFFSET=YANGLE_SUM/1000;
 667              		.loc 1 215 0
 668 03b8 D7E90801 		ldrd	r0, [r7, #32]
 669 03bc 4FF00002 		mov	r2, #0
 670 03c0 4FF48043 		mov	r3, #16384
 671 03c4 C4F28F03 		movt	r3, 16527
 672 03c8 FFF7FEFF 		bl	__aeabi_ddiv
 673 03cc 0246     		mov	r2, r0
 674 03ce 0B46     		mov	r3, r1
 675 03d0 1046     		mov	r0, r2
 676 03d2 1946     		mov	r1, r3
 677 03d4 FFF7FEFF 		bl	__aeabi_d2f
 678 03d8 0246     		mov	r2, r0
 679 03da 40F20003 		movw	r3, #:lower16:YANGLE_OFFSET
 680 03de C0F20003 		movt	r3, #:upper16:YANGLE_OFFSET
 681 03e2 1A60     		str	r2, [r3, #0]	@ float
 216:../Sources/MPU6050.c **** 
 217:../Sources/MPU6050.c **** }
 682              		.loc 1 217 0
 683 03e4 07F13007 		add	r7, r7, #48
 684 03e8 BD46     		mov	sp, r7
 685 03ea 80BD     		pop	{r7, pc}
 686              		.cfi_endproc
 687              	.LFE2:
 689              		.global	__aeabi_i2f
 690              		.global	__aeabi_fmul
 691              		.global	__aeabi_fsub
 692              		.global	__aeabi_f2iz
 693              		.align	2
 694              		.global	Get_Accel_Values
 695              		.thumb
 696              		.thumb_func
 698              	Get_Accel_Values:
 699              	.LFB3:
 218:../Sources/MPU6050.c **** 
 219:../Sources/MPU6050.c **** //Gets raw accelerometer data, performs no processing
 220:../Sources/MPU6050.c **** void Get_Accel_Values()
 221:../Sources/MPU6050.c **** {
 700              		.loc 1 221 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 8
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 03ec 90B5     		push	{r4, r7, lr}
 705              	.LCFI8:
 706              		.cfi_def_cfa_offset 12
 707              		.cfi_offset 4, -12
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 03ee 83B0     		sub	sp, sp, #12
 711              	.LCFI9:
 712              		.cfi_def_cfa_offset 24
 713 03f0 00AF     		add	r7, sp, #0
 714              	.LCFI10:
 715              		.cfi_def_cfa_register 7
 222:../Sources/MPU6050.c **** 	char temp[2];
 223:../Sources/MPU6050.c **** 	temp[0]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_H);
 716              		.loc 1 223 0
 717 03f2 4FF06800 		mov	r0, #104
 718 03f6 4FF03B01 		mov	r1, #59
 719 03fa FFF7FEFF 		bl	I2CReadRegister
 720 03fe 0346     		mov	r3, r0
 721 0400 3B71     		strb	r3, [r7, #4]
 224:../Sources/MPU6050.c **** 	temp[1]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_L);
 722              		.loc 1 224 0
 723 0402 4FF06800 		mov	r0, #104
 724 0406 4FF03C01 		mov	r1, #60
 725 040a FFF7FEFF 		bl	I2CReadRegister
 726 040e 0346     		mov	r3, r0
 727 0410 7B71     		strb	r3, [r7, #5]
 225:../Sources/MPU6050.c **** 	ACCEL_XOUT = (((temp[0]<<8) & 0xFF00)| (temp[1] & 0x00FF))-(float)Gx_offset*8192;//-ACCEL_XOUT_OFF
 728              		.loc 1 225 0
 729 0412 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 730 0414 4FEA0323 		lsl	r3, r3, #8
 731 0418 4FEA0343 		lsl	r3, r3, #16
 732 041c 4FEA1343 		lsr	r3, r3, #16
 733 0420 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 734 0422 1343     		orrs	r3, r3, r2
 735 0424 1846     		mov	r0, r3
 736 0426 FFF7FEFF 		bl	__aeabi_i2f
 737 042a 0446     		mov	r4, r0
 738 042c 40F20003 		movw	r3, #:lower16:Gx_offset
 739 0430 C0F20003 		movt	r3, #:upper16:Gx_offset
 740 0434 1B68     		ldr	r3, [r3, #0]	@ float
 741 0436 1846     		mov	r0, r3
 742 0438 4FF08C41 		mov	r1, #1174405120
 743 043c FFF7FEFF 		bl	__aeabi_fmul
 744 0440 0346     		mov	r3, r0
 745 0442 2046     		mov	r0, r4
 746 0444 1946     		mov	r1, r3
 747 0446 FFF7FEFF 		bl	__aeabi_fsub
 748 044a 0346     		mov	r3, r0
 749 044c 1846     		mov	r0, r3
 750 044e FFF7FEFF 		bl	__aeabi_f2iz
 751 0452 0346     		mov	r3, r0
 752 0454 9AB2     		uxth	r2, r3
 753 0456 40F20003 		movw	r3, #:lower16:ACCEL_XOUT
 754 045a C0F20003 		movt	r3, #:upper16:ACCEL_XOUT
 755 045e 1A80     		strh	r2, [r3, #0]	@ movhi
 226:../Sources/MPU6050.c **** 
 227:../Sources/MPU6050.c **** 	temp[0]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_H);
 756              		.loc 1 227 0
 757 0460 4FF06800 		mov	r0, #104
 758 0464 4FF03D01 		mov	r1, #61
 759 0468 FFF7FEFF 		bl	I2CReadRegister
 760 046c 0346     		mov	r3, r0
 761 046e 3B71     		strb	r3, [r7, #4]
 228:../Sources/MPU6050.c **** 	temp[1]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_L);
 762              		.loc 1 228 0
 763 0470 4FF06800 		mov	r0, #104
 764 0474 4FF03E01 		mov	r1, #62
 765 0478 FFF7FEFF 		bl	I2CReadRegister
 766 047c 0346     		mov	r3, r0
 767 047e 7B71     		strb	r3, [r7, #5]
 229:../Sources/MPU6050.c **** 	ACCEL_YOUT = (((temp[0]<<8) & 0xFF00)| (temp[1] & 0x00FF))-(float)Gy_offset*8192;//+ACCEL_YOUT_OFF
 768              		.loc 1 229 0
 769 0480 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 770 0482 4FEA0323 		lsl	r3, r3, #8
 771 0486 4FEA0343 		lsl	r3, r3, #16
 772 048a 4FEA1343 		lsr	r3, r3, #16
 773 048e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 774 0490 1343     		orrs	r3, r3, r2
 775 0492 1846     		mov	r0, r3
 776 0494 FFF7FEFF 		bl	__aeabi_i2f
 777 0498 0446     		mov	r4, r0
 778 049a 40F20003 		movw	r3, #:lower16:Gy_offset
 779 049e C0F20003 		movt	r3, #:upper16:Gy_offset
 780 04a2 1B68     		ldr	r3, [r3, #0]	@ float
 781 04a4 1846     		mov	r0, r3
 782 04a6 4FF08C41 		mov	r1, #1174405120
 783 04aa FFF7FEFF 		bl	__aeabi_fmul
 784 04ae 0346     		mov	r3, r0
 785 04b0 2046     		mov	r0, r4
 786 04b2 1946     		mov	r1, r3
 787 04b4 FFF7FEFF 		bl	__aeabi_fsub
 788 04b8 0346     		mov	r3, r0
 789 04ba 1846     		mov	r0, r3
 790 04bc FFF7FEFF 		bl	__aeabi_f2iz
 791 04c0 0346     		mov	r3, r0
 792 04c2 9AB2     		uxth	r2, r3
 793 04c4 40F20003 		movw	r3, #:lower16:ACCEL_YOUT
 794 04c8 C0F20003 		movt	r3, #:upper16:ACCEL_YOUT
 795 04cc 1A80     		strh	r2, [r3, #0]	@ movhi
 230:../Sources/MPU6050.c **** 
 231:../Sources/MPU6050.c **** 	temp[0]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_H);
 796              		.loc 1 231 0
 797 04ce 4FF06800 		mov	r0, #104
 798 04d2 4FF03F01 		mov	r1, #63
 799 04d6 FFF7FEFF 		bl	I2CReadRegister
 800 04da 0346     		mov	r3, r0
 801 04dc 3B71     		strb	r3, [r7, #4]
 232:../Sources/MPU6050.c **** 	temp[1]=I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_L);
 802              		.loc 1 232 0
 803 04de 4FF06800 		mov	r0, #104
 804 04e2 4FF04001 		mov	r1, #64
 805 04e6 FFF7FEFF 		bl	I2CReadRegister
 806 04ea 0346     		mov	r3, r0
 807 04ec 7B71     		strb	r3, [r7, #5]
 233:../Sources/MPU6050.c **** 	ACCEL_ZOUT = (((temp[0]<<8) & 0xFF00)| (temp[1] & 0x00FF))-(float)Gz_offset*8192;//-ACCEL_ZOUT_OFF
 808              		.loc 1 233 0
 809 04ee 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 810 04f0 4FEA0323 		lsl	r3, r3, #8
 811 04f4 4FEA0343 		lsl	r3, r3, #16
 812 04f8 4FEA1343 		lsr	r3, r3, #16
 813 04fc 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 814 04fe 1343     		orrs	r3, r3, r2
 815 0500 1846     		mov	r0, r3
 816 0502 FFF7FEFF 		bl	__aeabi_i2f
 817 0506 0446     		mov	r4, r0
 818 0508 40F20003 		movw	r3, #:lower16:Gz_offset
 819 050c C0F20003 		movt	r3, #:upper16:Gz_offset
 820 0510 1B68     		ldr	r3, [r3, #0]	@ float
 821 0512 1846     		mov	r0, r3
 822 0514 4FF08C41 		mov	r1, #1174405120
 823 0518 FFF7FEFF 		bl	__aeabi_fmul
 824 051c 0346     		mov	r3, r0
 825 051e 2046     		mov	r0, r4
 826 0520 1946     		mov	r1, r3
 827 0522 FFF7FEFF 		bl	__aeabi_fsub
 828 0526 0346     		mov	r3, r0
 829 0528 1846     		mov	r0, r3
 830 052a FFF7FEFF 		bl	__aeabi_f2iz
 831 052e 0346     		mov	r3, r0
 832 0530 9AB2     		uxth	r2, r3
 833 0532 40F20003 		movw	r3, #:lower16:ACCEL_ZOUT
 834 0536 C0F20003 		movt	r3, #:upper16:ACCEL_ZOUT
 835 053a 1A80     		strh	r2, [r3, #0]	@ movhi
 234:../Sources/MPU6050.c **** }
 836              		.loc 1 234 0
 837 053c 07F10C07 		add	r7, r7, #12
 838 0540 BD46     		mov	sp, r7
 839 0542 90BD     		pop	{r4, r7, pc}
 840              		.cfi_endproc
 841              	.LFE3:
 843              		.global	__aeabi_fdiv
 844              		.align	2
 845              		.global	Convert_Accel
 846              		.thumb
 847              		.thumb_func
 849              	Convert_Accel:
 850              	.LFB4:
 235:../Sources/MPU6050.c **** //Convert Acceleration values to G, 1 G = 9.81 m*s^-2
 236:../Sources/MPU6050.c **** void Convert_Accel()
 237:../Sources/MPU6050.c **** {
 851              		.loc 1 237 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0544 B0B5     		push	{r4, r5, r7, lr}
 856              	.LCFI11:
 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 4, -16
 859              		.cfi_offset 5, -12
 860              		.cfi_offset 7, -8
 861              		.cfi_offset 14, -4
 862 0546 00AF     		add	r7, sp, #0
 863              	.LCFI12:
 864              		.cfi_def_cfa_register 7
 238:../Sources/MPU6050.c **** 	ACCEL_Gx = (float)ACCEL_XOUT/8192;
 865              		.loc 1 238 0
 866 0548 40F20003 		movw	r3, #:lower16:ACCEL_XOUT
 867 054c C0F20003 		movt	r3, #:upper16:ACCEL_XOUT
 868 0550 1B88     		ldrh	r3, [r3, #0]
 869 0552 1BB2     		sxth	r3, r3
 870 0554 1846     		mov	r0, r3
 871 0556 FFF7FEFF 		bl	__aeabi_i2f
 872 055a 0346     		mov	r3, r0
 873 055c 1846     		mov	r0, r3
 874 055e 4FF08C41 		mov	r1, #1174405120
 875 0562 FFF7FEFF 		bl	__aeabi_fdiv
 876 0566 0346     		mov	r3, r0
 877 0568 1A46     		mov	r2, r3
 878 056a 40F20003 		movw	r3, #:lower16:ACCEL_Gx
 879 056e C0F20003 		movt	r3, #:upper16:ACCEL_Gx
 880 0572 1A60     		str	r2, [r3, #0]	@ float
 239:../Sources/MPU6050.c **** 	ACCEL_Gy = (float)ACCEL_YOUT/8192;
 881              		.loc 1 239 0
 882 0574 40F20003 		movw	r3, #:lower16:ACCEL_YOUT
 883 0578 C0F20003 		movt	r3, #:upper16:ACCEL_YOUT
 884 057c 1B88     		ldrh	r3, [r3, #0]
 885 057e 1BB2     		sxth	r3, r3
 886 0580 1846     		mov	r0, r3
 887 0582 FFF7FEFF 		bl	__aeabi_i2f
 888 0586 0346     		mov	r3, r0
 889 0588 1846     		mov	r0, r3
 890 058a 4FF08C41 		mov	r1, #1174405120
 891 058e FFF7FEFF 		bl	__aeabi_fdiv
 892 0592 0346     		mov	r3, r0
 893 0594 1A46     		mov	r2, r3
 894 0596 40F20003 		movw	r3, #:lower16:ACCEL_Gy
 895 059a C0F20003 		movt	r3, #:upper16:ACCEL_Gy
 896 059e 1A60     		str	r2, [r3, #0]	@ float
 240:../Sources/MPU6050.c **** 	ACCEL_Gz = (float)ACCEL_ZOUT/8192;
 897              		.loc 1 240 0
 898 05a0 40F20003 		movw	r3, #:lower16:ACCEL_ZOUT
 899 05a4 C0F20003 		movt	r3, #:upper16:ACCEL_ZOUT
 900 05a8 1B88     		ldrh	r3, [r3, #0]
 901 05aa 1BB2     		sxth	r3, r3
 902 05ac 1846     		mov	r0, r3
 903 05ae FFF7FEFF 		bl	__aeabi_i2f
 904 05b2 0346     		mov	r3, r0
 905 05b4 1846     		mov	r0, r3
 906 05b6 4FF08C41 		mov	r1, #1174405120
 907 05ba FFF7FEFF 		bl	__aeabi_fdiv
 908 05be 0346     		mov	r3, r0
 909 05c0 1A46     		mov	r2, r3
 910 05c2 40F20003 		movw	r3, #:lower16:ACCEL_Gz
 911 05c6 C0F20003 		movt	r3, #:upper16:ACCEL_Gz
 912 05ca 1A60     		str	r2, [r3, #0]	@ float
 241:../Sources/MPU6050.c **** 	ACCEL = pow(pow(ACCEL_Gx,2)+pow(ACCEL_Gy,2)+pow(ACCEL_Gz,2),0.5);
 913              		.loc 1 241 0
 914 05cc 40F20003 		movw	r3, #:lower16:ACCEL_Gx
 915 05d0 C0F20003 		movt	r3, #:upper16:ACCEL_Gx
 916 05d4 1B68     		ldr	r3, [r3, #0]	@ float
 917 05d6 1846     		mov	r0, r3
 918 05d8 FFF7FEFF 		bl	__aeabi_f2d
 919 05dc 0246     		mov	r2, r0
 920 05de 0B46     		mov	r3, r1
 921 05e0 1046     		mov	r0, r2
 922 05e2 1946     		mov	r1, r3
 923 05e4 4FF00002 		mov	r2, #0
 924 05e8 4FF08043 		mov	r3, #1073741824
 925 05ec FFF7FEFF 		bl	pow
 926 05f0 0446     		mov	r4, r0
 927 05f2 0D46     		mov	r5, r1
 928 05f4 40F20003 		movw	r3, #:lower16:ACCEL_Gy
 929 05f8 C0F20003 		movt	r3, #:upper16:ACCEL_Gy
 930 05fc 1B68     		ldr	r3, [r3, #0]	@ float
 931 05fe 1846     		mov	r0, r3
 932 0600 FFF7FEFF 		bl	__aeabi_f2d
 933 0604 0246     		mov	r2, r0
 934 0606 0B46     		mov	r3, r1
 935 0608 1046     		mov	r0, r2
 936 060a 1946     		mov	r1, r3
 937 060c 4FF00002 		mov	r2, #0
 938 0610 4FF08043 		mov	r3, #1073741824
 939 0614 FFF7FEFF 		bl	pow
 940 0618 0246     		mov	r2, r0
 941 061a 0B46     		mov	r3, r1
 942 061c 2046     		mov	r0, r4
 943 061e 2946     		mov	r1, r5
 944 0620 FFF7FEFF 		bl	__aeabi_dadd
 945 0624 0246     		mov	r2, r0
 946 0626 0B46     		mov	r3, r1
 947 0628 1446     		mov	r4, r2
 948 062a 1D46     		mov	r5, r3
 949 062c 40F20003 		movw	r3, #:lower16:ACCEL_Gz
 950 0630 C0F20003 		movt	r3, #:upper16:ACCEL_Gz
 951 0634 1B68     		ldr	r3, [r3, #0]	@ float
 952 0636 1846     		mov	r0, r3
 953 0638 FFF7FEFF 		bl	__aeabi_f2d
 954 063c 0246     		mov	r2, r0
 955 063e 0B46     		mov	r3, r1
 956 0640 1046     		mov	r0, r2
 957 0642 1946     		mov	r1, r3
 958 0644 4FF00002 		mov	r2, #0
 959 0648 4FF08043 		mov	r3, #1073741824
 960 064c FFF7FEFF 		bl	pow
 961 0650 0246     		mov	r2, r0
 962 0652 0B46     		mov	r3, r1
 963 0654 2046     		mov	r0, r4
 964 0656 2946     		mov	r1, r5
 965 0658 FFF7FEFF 		bl	__aeabi_dadd
 966 065c 0246     		mov	r2, r0
 967 065e 0B46     		mov	r3, r1
 968 0660 1046     		mov	r0, r2
 969 0662 1946     		mov	r1, r3
 970 0664 4FF00002 		mov	r2, #0
 971 0668 4FF00003 		mov	r3, #0
 972 066c C3F6E073 		movt	r3, 16352
 973 0670 FFF7FEFF 		bl	pow
 974 0674 40F20003 		movw	r3, #:lower16:ACCEL
 975 0678 C0F20003 		movt	r3, #:upper16:ACCEL
 976 067c C3E90001 		strd	r0, [r3]
 242:../Sources/MPU6050.c **** }
 977              		.loc 1 242 0
 978 0680 B0BD     		pop	{r4, r5, r7, pc}
 979              		.cfi_endproc
 980              	.LFE4:
 982 0682 00BF     		.align	2
 983              		.global	Calibrate_Gyros
 984              		.thumb
 985              		.thumb_func
 987              	Calibrate_Gyros:
 988              	.LFB5:
 243:../Sources/MPU6050.c **** 
 244:../Sources/MPU6050.c **** void Calibrate_Gyros()
 245:../Sources/MPU6050.c **** {
 989              		.loc 1 245 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 24
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0684 80B5     		push	{r7, lr}
 994              	.LCFI13:
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0686 86B0     		sub	sp, sp, #24
 999              	.LCFI14:
 1000              		.cfi_def_cfa_offset 32
 1001 0688 00AF     		add	r7, sp, #0
 1002              	.LCFI15:
 1003              		.cfi_def_cfa_register 7
 246:../Sources/MPU6050.c **** 	int32_t GYRO_XOUT_OFFSET_SUM = 0;
 1004              		.loc 1 246 0
 1005 068a 4FF00003 		mov	r3, #0
 1006 068e 7B61     		str	r3, [r7, #20]
 247:../Sources/MPU6050.c **** 	int32_t GYRO_YOUT_OFFSET_SUM = 0;
 1007              		.loc 1 247 0
 1008 0690 4FF00003 		mov	r3, #0
 1009 0694 3B61     		str	r3, [r7, #16]
 248:../Sources/MPU6050.c **** 	int32_t GYRO_ZOUT_OFFSET_SUM = 0;
 1010              		.loc 1 248 0
 1011 0696 4FF00003 		mov	r3, #0
 1012 069a FB60     		str	r3, [r7, #12]
 249:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H);
 1013              		.loc 1 249 0
 1014 069c 4FF06800 		mov	r0, #104
 1015 06a0 4FF04301 		mov	r1, #67
 1016 06a4 FFF7FEFF 		bl	I2CReadRegister
 250:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_L);
 1017              		.loc 1 250 0
 1018 06a8 4FF06800 		mov	r0, #104
 1019 06ac 4FF04401 		mov	r1, #68
 1020 06b0 FFF7FEFF 		bl	I2CReadRegister
 251:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_H);
 1021              		.loc 1 251 0
 1022 06b4 4FF06800 		mov	r0, #104
 1023 06b8 4FF04501 		mov	r1, #69
 1024 06bc FFF7FEFF 		bl	I2CReadRegister
 252:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_L);
 1025              		.loc 1 252 0
 1026 06c0 4FF06800 		mov	r0, #104
 1027 06c4 4FF04601 		mov	r1, #70
 1028 06c8 FFF7FEFF 		bl	I2CReadRegister
 253:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_H);
 1029              		.loc 1 253 0
 1030 06cc 4FF06800 		mov	r0, #104
 1031 06d0 4FF04701 		mov	r1, #71
 1032 06d4 FFF7FEFF 		bl	I2CReadRegister
 254:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_L);
 1033              		.loc 1 254 0
 1034 06d8 4FF06800 		mov	r0, #104
 1035 06dc 4FF04801 		mov	r1, #72
 1036 06e0 FFF7FEFF 		bl	I2CReadRegister
 255:../Sources/MPU6050.c **** 	I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H);
 1037              		.loc 1 255 0
 1038 06e4 4FF06800 		mov	r0, #104
 1039 06e8 4FF04301 		mov	r1, #67
 1040 06ec FFF7FEFF 		bl	I2CReadRegister
 256:../Sources/MPU6050.c **** 	Delay_mS(1);
 1041              		.loc 1 256 0
 1042 06f0 4FF00100 		mov	r0, #1
 1043 06f4 FFF7FEFF 		bl	Delay_mS
 257:../Sources/MPU6050.c **** 	char temp[6];
 258:../Sources/MPU6050.c **** 	int x = 0;
 1044              		.loc 1 258 0
 1045 06f8 4FF00003 		mov	r3, #0
 1046 06fc BB60     		str	r3, [r7, #8]
 259:../Sources/MPU6050.c **** 	for(x = 0; x<1000; x++)
 1047              		.loc 1 259 0
 1048 06fe 4FF00003 		mov	r3, #0
 1049 0702 BB60     		str	r3, [r7, #8]
 1050 0704 6FE0     		b	.L11
 1051              	.L12:
 260:../Sources/MPU6050.c **** 	{
 261:../Sources/MPU6050.c **** 		temp[0]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H);
 1052              		.loc 1 261 0 discriminator 2
 1053 0706 4FF06800 		mov	r0, #104
 1054 070a 4FF04301 		mov	r1, #67
 1055 070e FFF7FEFF 		bl	I2CReadRegister
 1056 0712 0346     		mov	r3, r0
 1057 0714 6FEA0303 		mvn	r3, r3
 1058 0718 DBB2     		uxtb	r3, r3
 1059 071a 3B70     		strb	r3, [r7, #0]
 262:../Sources/MPU6050.c **** 		temp[1]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_L);
 1060              		.loc 1 262 0 discriminator 2
 1061 071c 4FF06800 		mov	r0, #104
 1062 0720 4FF04401 		mov	r1, #68
 1063 0724 FFF7FEFF 		bl	I2CReadRegister
 1064 0728 0346     		mov	r3, r0
 1065 072a 6FEA0303 		mvn	r3, r3
 1066 072e DBB2     		uxtb	r3, r3
 1067 0730 7B70     		strb	r3, [r7, #1]
 263:../Sources/MPU6050.c **** 		temp[2]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_H);
 1068              		.loc 1 263 0 discriminator 2
 1069 0732 4FF06800 		mov	r0, #104
 1070 0736 4FF04501 		mov	r1, #69
 1071 073a FFF7FEFF 		bl	I2CReadRegister
 1072 073e 0346     		mov	r3, r0
 1073 0740 6FEA0303 		mvn	r3, r3
 1074 0744 DBB2     		uxtb	r3, r3
 1075 0746 BB70     		strb	r3, [r7, #2]
 264:../Sources/MPU6050.c **** 		temp[3]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_L);
 1076              		.loc 1 264 0 discriminator 2
 1077 0748 4FF06800 		mov	r0, #104
 1078 074c 4FF04601 		mov	r1, #70
 1079 0750 FFF7FEFF 		bl	I2CReadRegister
 1080 0754 0346     		mov	r3, r0
 1081 0756 6FEA0303 		mvn	r3, r3
 1082 075a DBB2     		uxtb	r3, r3
 1083 075c FB70     		strb	r3, [r7, #3]
 265:../Sources/MPU6050.c **** 		temp[4]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_H);
 1084              		.loc 1 265 0 discriminator 2
 1085 075e 4FF06800 		mov	r0, #104
 1086 0762 4FF04701 		mov	r1, #71
 1087 0766 FFF7FEFF 		bl	I2CReadRegister
 1088 076a 0346     		mov	r3, r0
 1089 076c 6FEA0303 		mvn	r3, r3
 1090 0770 DBB2     		uxtb	r3, r3
 1091 0772 3B71     		strb	r3, [r7, #4]
 266:../Sources/MPU6050.c **** 		temp[5]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_L);
 1092              		.loc 1 266 0 discriminator 2
 1093 0774 4FF06800 		mov	r0, #104
 1094 0778 4FF04801 		mov	r1, #72
 1095 077c FFF7FEFF 		bl	I2CReadRegister
 1096 0780 0346     		mov	r3, r0
 1097 0782 6FEA0303 		mvn	r3, r3
 1098 0786 DBB2     		uxtb	r3, r3
 1099 0788 7B71     		strb	r3, [r7, #5]
 267:../Sources/MPU6050.c **** 		temp[6]=~I2CReadRegister(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H);
 1100              		.loc 1 267 0 discriminator 2
 1101 078a 4FF06800 		mov	r0, #104
 1102 078e 4FF04301 		mov	r1, #67
 1103 0792 FFF7FEFF 		bl	I2CReadRegister
 1104 0796 0346     		mov	r3, r0
 1105 0798 6FEA0303 		mvn	r3, r3
 1106 079c DBB2     		uxtb	r3, r3
 1107 079e BB71     		strb	r3, [r7, #6]
 268:../Sources/MPU6050.c **** 		
 269:../Sources/MPU6050.c **** 	/*	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_L, &temp[1], 1);
 270:../Sources/MPU6050.c **** 		I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_H, &temp[2], 1);
 271:../Sources/MPU6050.c **** 		I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_L, &temp[3], 1);
 272:../Sources/MPU6050.c **** 		I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_H, &temp[4], 1);
 273:../Sources/MPU6050.c **** 		I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_L, &temp[5], 1);
 274:../Sources/MPU6050.c **** 	*/	
 275:../Sources/MPU6050.c **** 		GYRO_XOUT_OFFSET_SUM += (int16_t)((temp[0]<<8)|temp[1]);
 1108              		.loc 1 275 0 discriminator 2
 1109 07a0 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 1110 07a2 4FEA0323 		lsl	r3, r3, #8
 1111 07a6 9AB2     		uxth	r2, r3
 1112 07a8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1113 07aa 1343     		orrs	r3, r3, r2
 1114 07ac 9BB2     		uxth	r3, r3
 1115 07ae 1BB2     		sxth	r3, r3
 1116 07b0 7A69     		ldr	r2, [r7, #20]
 1117 07b2 D318     		adds	r3, r2, r3
 1118 07b4 7B61     		str	r3, [r7, #20]
 276:../Sources/MPU6050.c **** 		GYRO_YOUT_OFFSET_SUM += ((temp[2]<<8)|temp[3]);
 1119              		.loc 1 276 0 discriminator 2
 1120 07b6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1121 07b8 4FEA0322 		lsl	r2, r3, #8
 1122 07bc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1123 07be 1343     		orrs	r3, r3, r2
 1124 07c0 3A69     		ldr	r2, [r7, #16]
 1125 07c2 D318     		adds	r3, r2, r3
 1126 07c4 3B61     		str	r3, [r7, #16]
 277:../Sources/MPU6050.c **** 		GYRO_ZOUT_OFFSET_SUM += ((temp[4]<<8)|temp[5]);
 1127              		.loc 1 277 0 discriminator 2
 1128 07c6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1129 07c8 4FEA0322 		lsl	r2, r3, #8
 1130 07cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1131 07ce 1343     		orrs	r3, r3, r2
 1132 07d0 FA68     		ldr	r2, [r7, #12]
 1133 07d2 D318     		adds	r3, r2, r3
 1134 07d4 FB60     		str	r3, [r7, #12]
 278:../Sources/MPU6050.c ****  
 279:../Sources/MPU6050.c **** 		Delay_mS(1);
 1135              		.loc 1 279 0 discriminator 2
 1136 07d6 4FF00100 		mov	r0, #1
 1137 07da FFF7FEFF 		bl	Delay_mS
 259:../Sources/MPU6050.c **** 	for(x = 0; x<1000; x++)
 1138              		.loc 1 259 0 discriminator 2
 1139 07de BB68     		ldr	r3, [r7, #8]
 1140 07e0 03F10103 		add	r3, r3, #1
 1141 07e4 BB60     		str	r3, [r7, #8]
 1142              	.L11:
 259:../Sources/MPU6050.c **** 	for(x = 0; x<1000; x++)
 1143              		.loc 1 259 0 is_stmt 0 discriminator 1
 1144 07e6 BA68     		ldr	r2, [r7, #8]
 1145 07e8 40F2E733 		movw	r3, #999
 1146 07ec 9A42     		cmp	r2, r3
 1147 07ee 8ADD     		ble	.L12
 280:../Sources/MPU6050.c **** 	}	
 281:../Sources/MPU6050.c **** 	GYRO_XOUT_OFFSET = GYRO_XOUT_OFFSET_SUM/1000;
 1148              		.loc 1 281 0 is_stmt 1
 1149 07f0 7A69     		ldr	r2, [r7, #20]
 1150 07f2 44F6D353 		movw	r3, #19923
 1151 07f6 C1F26203 		movt	r3, 4194
 1152 07fa 83FB0213 		smull	r1, r3, r3, r2
 1153 07fe 4FEAA311 		asr	r1, r3, #6
 1154 0802 4FEAE273 		asr	r3, r2, #31
 1155 0806 CB1A     		subs	r3, r1, r3
 1156 0808 9AB2     		uxth	r2, r3
 1157 080a 40F20003 		movw	r3, #:lower16:GYRO_XOUT_OFFSET
 1158 080e C0F20003 		movt	r3, #:upper16:GYRO_XOUT_OFFSET
 1159 0812 1A80     		strh	r2, [r3, #0]	@ movhi
 282:../Sources/MPU6050.c **** 	GYRO_YOUT_OFFSET = GYRO_YOUT_OFFSET_SUM/1000;
 1160              		.loc 1 282 0
 1161 0814 3A69     		ldr	r2, [r7, #16]
 1162 0816 44F6D353 		movw	r3, #19923
 1163 081a C1F26203 		movt	r3, 4194
 1164 081e 83FB0213 		smull	r1, r3, r3, r2
 1165 0822 4FEAA311 		asr	r1, r3, #6
 1166 0826 4FEAE273 		asr	r3, r2, #31
 1167 082a CB1A     		subs	r3, r1, r3
 1168 082c 9AB2     		uxth	r2, r3
 1169 082e 40F20003 		movw	r3, #:lower16:GYRO_YOUT_OFFSET
 1170 0832 C0F20003 		movt	r3, #:upper16:GYRO_YOUT_OFFSET
 1171 0836 1A80     		strh	r2, [r3, #0]	@ movhi
 283:../Sources/MPU6050.c **** 	GYRO_ZOUT_OFFSET = GYRO_ZOUT_OFFSET_SUM/1000;
 1172              		.loc 1 283 0
 1173 0838 FA68     		ldr	r2, [r7, #12]
 1174 083a 44F6D353 		movw	r3, #19923
 1175 083e C1F26203 		movt	r3, 4194
 1176 0842 83FB0213 		smull	r1, r3, r3, r2
 1177 0846 4FEAA311 		asr	r1, r3, #6
 1178 084a 4FEAE273 		asr	r3, r2, #31
 1179 084e CB1A     		subs	r3, r1, r3
 1180 0850 9AB2     		uxth	r2, r3
 1181 0852 40F20003 		movw	r3, #:lower16:GYRO_ZOUT_OFFSET
 1182 0856 C0F20003 		movt	r3, #:upper16:GYRO_ZOUT_OFFSET
 1183 085a 1A80     		strh	r2, [r3, #0]	@ movhi
 284:../Sources/MPU6050.c ****  
 285:../Sources/MPU6050.c **** //	printf("\nGyro X offset sum: %ld Gyro X offset: %d", GYRO_XOUT_OFFSET_1000SUM, GYRO_XOUT_OFFSET)
 286:../Sources/MPU6050.c **** //	printf("\nGyro Y offset sum: %ld Gyro Y offset: %d", GYRO_YOUT_OFFSET_1000SUM, GYRO_YOUT_OFFSET)
 287:../Sources/MPU6050.c **** //	printf("\nGyro Z offset sum: %ld Gyro Z offset: %d", GYRO_ZOUT_OFFSET_1000SUM, GYRO_ZOUT_OFFSET)
 288:../Sources/MPU6050.c **** }
 1184              		.loc 1 288 0
 1185 085c 07F11807 		add	r7, r7, #24
 1186 0860 BD46     		mov	sp, r7
 1187 0862 80BD     		pop	{r7, pc}
 1188              		.cfi_endproc
 1189              	.LFE5:
 1191              		.global	__aeabi_fadd
 1192              		.align	2
 1193              		.global	Get_Gyro_Rates
 1194              		.thumb
 1195              		.thumb_func
 1197              	Get_Gyro_Rates:
 1198              	.LFB6:
 289:../Sources/MPU6050.c **** //Function to read the gyroscope rate data and convert it into degrees/s
 290:../Sources/MPU6050.c **** void Get_Gyro_Rates()
 291:../Sources/MPU6050.c **** {
 1199              		.loc 1 291 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 8
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0864 80B5     		push	{r7, lr}
 1204              	.LCFI16:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0866 82B0     		sub	sp, sp, #8
 1209              	.LCFI17:
 1210              		.cfi_def_cfa_offset 16
 1211 0868 00AF     		add	r7, sp, #0
 1212              	.LCFI18:
 1213              		.cfi_def_cfa_register 7
 292:../Sources/MPU6050.c **** 	char temp[6];
 293:../Sources/MPU6050.c **** 	
 294:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H, &temp[0], 1);
 1214              		.loc 1 294 0
 1215 086a 3B46     		mov	r3, r7
 1216 086c 4FF06800 		mov	r0, #104
 1217 0870 4FF04301 		mov	r1, #67
 1218 0874 1A46     		mov	r2, r3
 1219 0876 4FF00103 		mov	r3, #1
 1220 087a FFF7FEFF 		bl	I2CReadMultiRegisters
 295:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_L, &temp[1], 1);
 1221              		.loc 1 295 0
 1222 087e 3B46     		mov	r3, r7
 1223 0880 03F10103 		add	r3, r3, #1
 1224 0884 4FF06800 		mov	r0, #104
 1225 0888 4FF04401 		mov	r1, #68
 1226 088c 1A46     		mov	r2, r3
 1227 088e 4FF00103 		mov	r3, #1
 1228 0892 FFF7FEFF 		bl	I2CReadMultiRegisters
 296:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_H, &temp[2], 1);
 1229              		.loc 1 296 0
 1230 0896 3B46     		mov	r3, r7
 1231 0898 03F10203 		add	r3, r3, #2
 1232 089c 4FF06800 		mov	r0, #104
 1233 08a0 4FF04501 		mov	r1, #69
 1234 08a4 1A46     		mov	r2, r3
 1235 08a6 4FF00103 		mov	r3, #1
 1236 08aa FFF7FEFF 		bl	I2CReadMultiRegisters
 297:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_L, &temp[3], 1);
 1237              		.loc 1 297 0
 1238 08ae 3B46     		mov	r3, r7
 1239 08b0 03F10303 		add	r3, r3, #3
 1240 08b4 4FF06800 		mov	r0, #104
 1241 08b8 4FF04601 		mov	r1, #70
 1242 08bc 1A46     		mov	r2, r3
 1243 08be 4FF00103 		mov	r3, #1
 1244 08c2 FFF7FEFF 		bl	I2CReadMultiRegisters
 298:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_H, &temp[4], 1);
 1245              		.loc 1 298 0
 1246 08c6 3B46     		mov	r3, r7
 1247 08c8 03F10403 		add	r3, r3, #4
 1248 08cc 4FF06800 		mov	r0, #104
 1249 08d0 4FF04701 		mov	r1, #71
 1250 08d4 1A46     		mov	r2, r3
 1251 08d6 4FF00103 		mov	r3, #1
 1252 08da FFF7FEFF 		bl	I2CReadMultiRegisters
 299:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_L, &temp[5], 1);
 1253              		.loc 1 299 0
 1254 08de 3B46     		mov	r3, r7
 1255 08e0 03F10503 		add	r3, r3, #5
 1256 08e4 4FF06800 		mov	r0, #104
 1257 08e8 4FF04801 		mov	r1, #72
 1258 08ec 1A46     		mov	r2, r3
 1259 08ee 4FF00103 		mov	r3, #1
 1260 08f2 FFF7FEFF 		bl	I2CReadMultiRegisters
 300:../Sources/MPU6050.c **** 	
 301:../Sources/MPU6050.c **** 	GYRO_XOUT = ((temp[0]<<8)|temp[1]) + GYRO_XOUT_OFFSET;
 1261              		.loc 1 301 0
 1262 08f6 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 1263 08f8 4FEA0323 		lsl	r3, r3, #8
 1264 08fc 9AB2     		uxth	r2, r3
 1265 08fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1266 0900 1343     		orrs	r3, r3, r2
 1267 0902 9BB2     		uxth	r3, r3
 1268 0904 9AB2     		uxth	r2, r3
 1269 0906 40F20003 		movw	r3, #:lower16:GYRO_XOUT_OFFSET
 1270 090a C0F20003 		movt	r3, #:upper16:GYRO_XOUT_OFFSET
 1271 090e 1B88     		ldrh	r3, [r3, #0]
 1272 0910 9BB2     		uxth	r3, r3
 1273 0912 D318     		adds	r3, r2, r3
 1274 0914 9BB2     		uxth	r3, r3
 1275 0916 9AB2     		uxth	r2, r3
 1276 0918 40F20003 		movw	r3, #:lower16:GYRO_XOUT
 1277 091c C0F20003 		movt	r3, #:upper16:GYRO_XOUT
 1278 0920 1A80     		strh	r2, [r3, #0]	@ movhi
 302:../Sources/MPU6050.c **** 	GYRO_YOUT = ((temp[2]<<8)|temp[3]) + GYRO_YOUT_OFFSET;
 1279              		.loc 1 302 0
 1280 0922 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1281 0924 4FEA0323 		lsl	r3, r3, #8
 1282 0928 9AB2     		uxth	r2, r3
 1283 092a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1284 092c 1343     		orrs	r3, r3, r2
 1285 092e 9BB2     		uxth	r3, r3
 1286 0930 9AB2     		uxth	r2, r3
 1287 0932 40F20003 		movw	r3, #:lower16:GYRO_YOUT_OFFSET
 1288 0936 C0F20003 		movt	r3, #:upper16:GYRO_YOUT_OFFSET
 1289 093a 1B88     		ldrh	r3, [r3, #0]
 1290 093c 9BB2     		uxth	r3, r3
 1291 093e D318     		adds	r3, r2, r3
 1292 0940 9BB2     		uxth	r3, r3
 1293 0942 9AB2     		uxth	r2, r3
 1294 0944 40F20003 		movw	r3, #:lower16:GYRO_YOUT
 1295 0948 C0F20003 		movt	r3, #:upper16:GYRO_YOUT
 1296 094c 1A80     		strh	r2, [r3, #0]	@ movhi
 303:../Sources/MPU6050.c **** 	GYRO_ZOUT = ((temp[4]<<8)|temp[5]) + GYRO_ZOUT_OFFSET;
 1297              		.loc 1 303 0
 1298 094e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1299 0950 4FEA0323 		lsl	r3, r3, #8
 1300 0954 9AB2     		uxth	r2, r3
 1301 0956 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1302 0958 1343     		orrs	r3, r3, r2
 1303 095a 9BB2     		uxth	r3, r3
 1304 095c 9AB2     		uxth	r2, r3
 1305 095e 40F20003 		movw	r3, #:lower16:GYRO_ZOUT_OFFSET
 1306 0962 C0F20003 		movt	r3, #:upper16:GYRO_ZOUT_OFFSET
 1307 0966 1B88     		ldrh	r3, [r3, #0]
 1308 0968 9BB2     		uxth	r3, r3
 1309 096a D318     		adds	r3, r2, r3
 1310 096c 9BB2     		uxth	r3, r3
 1311 096e 9AB2     		uxth	r2, r3
 1312 0970 40F20003 		movw	r3, #:lower16:GYRO_ZOUT
 1313 0974 C0F20003 		movt	r3, #:upper16:GYRO_ZOUT
 1314 0978 1A80     		strh	r2, [r3, #0]	@ movhi
 304:../Sources/MPU6050.c ****  
 305:../Sources/MPU6050.c ****  
 306:../Sources/MPU6050.c **** 	GYRO_XRATE = (float)GYRO_XOUT/gyro_xsensitivity;
 1315              		.loc 1 306 0
 1316 097a 40F20003 		movw	r3, #:lower16:GYRO_XOUT
 1317 097e C0F20003 		movt	r3, #:upper16:GYRO_XOUT
 1318 0982 1B88     		ldrh	r3, [r3, #0]
 1319 0984 1BB2     		sxth	r3, r3
 1320 0986 1846     		mov	r0, r3
 1321 0988 FFF7FEFF 		bl	__aeabi_i2f
 1322 098c 0246     		mov	r2, r0
 1323 098e 40F20003 		movw	r3, #:lower16:gyro_xsensitivity
 1324 0992 C0F20003 		movt	r3, #:upper16:gyro_xsensitivity
 1325 0996 1B68     		ldr	r3, [r3, #0]	@ float
 1326 0998 1046     		mov	r0, r2
 1327 099a 1946     		mov	r1, r3
 1328 099c FFF7FEFF 		bl	__aeabi_fdiv
 1329 09a0 0346     		mov	r3, r0
 1330 09a2 1A46     		mov	r2, r3
 1331 09a4 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 1332 09a8 C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 1333 09ac 1A60     		str	r2, [r3, #0]	@ float
 307:../Sources/MPU6050.c **** 	GYRO_YRATE = (float)GYRO_YOUT/gyro_ysensitivity;
 1334              		.loc 1 307 0
 1335 09ae 40F20003 		movw	r3, #:lower16:GYRO_YOUT
 1336 09b2 C0F20003 		movt	r3, #:upper16:GYRO_YOUT
 1337 09b6 1B88     		ldrh	r3, [r3, #0]
 1338 09b8 1BB2     		sxth	r3, r3
 1339 09ba 1846     		mov	r0, r3
 1340 09bc FFF7FEFF 		bl	__aeabi_i2f
 1341 09c0 0246     		mov	r2, r0
 1342 09c2 40F20003 		movw	r3, #:lower16:gyro_ysensitivity
 1343 09c6 C0F20003 		movt	r3, #:upper16:gyro_ysensitivity
 1344 09ca 1B68     		ldr	r3, [r3, #0]	@ float
 1345 09cc 1046     		mov	r0, r2
 1346 09ce 1946     		mov	r1, r3
 1347 09d0 FFF7FEFF 		bl	__aeabi_fdiv
 1348 09d4 0346     		mov	r3, r0
 1349 09d6 1A46     		mov	r2, r3
 1350 09d8 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 1351 09dc C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 1352 09e0 1A60     		str	r2, [r3, #0]	@ float
 308:../Sources/MPU6050.c **** 	GYRO_ZRATE = (float)GYRO_ZOUT/gyro_zsensitivity;
 1353              		.loc 1 308 0
 1354 09e2 40F20003 		movw	r3, #:lower16:GYRO_ZOUT
 1355 09e6 C0F20003 		movt	r3, #:upper16:GYRO_ZOUT
 1356 09ea 1B88     		ldrh	r3, [r3, #0]
 1357 09ec 1BB2     		sxth	r3, r3
 1358 09ee 1846     		mov	r0, r3
 1359 09f0 FFF7FEFF 		bl	__aeabi_i2f
 1360 09f4 0246     		mov	r2, r0
 1361 09f6 40F20003 		movw	r3, #:lower16:gyro_zsensitivity
 1362 09fa C0F20003 		movt	r3, #:upper16:gyro_zsensitivity
 1363 09fe 1B68     		ldr	r3, [r3, #0]	@ float
 1364 0a00 1046     		mov	r0, r2
 1365 0a02 1946     		mov	r1, r3
 1366 0a04 FFF7FEFF 		bl	__aeabi_fdiv
 1367 0a08 0346     		mov	r3, r0
 1368 0a0a 1A46     		mov	r2, r3
 1369 0a0c 40F20003 		movw	r3, #:lower16:GYRO_ZRATE
 1370 0a10 C0F20003 		movt	r3, #:upper16:GYRO_ZRATE
 1371 0a14 1A60     		str	r2, [r3, #0]	@ float
 309:../Sources/MPU6050.c **** 	
 310:../Sources/MPU6050.c **** 	GYRO_XANGLE += (float)GYRO_XRATE*dt;
 1372              		.loc 1 310 0
 1373 0a16 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 1374 0a1a C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 1375 0a1e 1A68     		ldr	r2, [r3, #0]	@ float
 1376 0a20 40F20003 		movw	r3, #:lower16:dt
 1377 0a24 C0F20003 		movt	r3, #:upper16:dt
 1378 0a28 1B68     		ldr	r3, [r3, #0]	@ float
 1379 0a2a 1046     		mov	r0, r2
 1380 0a2c 1946     		mov	r1, r3
 1381 0a2e FFF7FEFF 		bl	__aeabi_fmul
 1382 0a32 0346     		mov	r3, r0
 1383 0a34 1A46     		mov	r2, r3
 1384 0a36 40F20003 		movw	r3, #:lower16:GYRO_XANGLE
 1385 0a3a C0F20003 		movt	r3, #:upper16:GYRO_XANGLE
 1386 0a3e 1B68     		ldr	r3, [r3, #0]	@ float
 1387 0a40 1046     		mov	r0, r2
 1388 0a42 1946     		mov	r1, r3
 1389 0a44 FFF7FEFF 		bl	__aeabi_fadd
 1390 0a48 0346     		mov	r3, r0
 1391 0a4a 1A46     		mov	r2, r3
 1392 0a4c 40F20003 		movw	r3, #:lower16:GYRO_XANGLE
 1393 0a50 C0F20003 		movt	r3, #:upper16:GYRO_XANGLE
 1394 0a54 1A60     		str	r2, [r3, #0]	@ float
 311:../Sources/MPU6050.c **** 	GYRO_YANGLE += (float)GYRO_YRATE*dt;
 1395              		.loc 1 311 0
 1396 0a56 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 1397 0a5a C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 1398 0a5e 1A68     		ldr	r2, [r3, #0]	@ float
 1399 0a60 40F20003 		movw	r3, #:lower16:dt
 1400 0a64 C0F20003 		movt	r3, #:upper16:dt
 1401 0a68 1B68     		ldr	r3, [r3, #0]	@ float
 1402 0a6a 1046     		mov	r0, r2
 1403 0a6c 1946     		mov	r1, r3
 1404 0a6e FFF7FEFF 		bl	__aeabi_fmul
 1405 0a72 0346     		mov	r3, r0
 1406 0a74 1A46     		mov	r2, r3
 1407 0a76 40F20003 		movw	r3, #:lower16:GYRO_YANGLE
 1408 0a7a C0F20003 		movt	r3, #:upper16:GYRO_YANGLE
 1409 0a7e 1B68     		ldr	r3, [r3, #0]	@ float
 1410 0a80 1046     		mov	r0, r2
 1411 0a82 1946     		mov	r1, r3
 1412 0a84 FFF7FEFF 		bl	__aeabi_fadd
 1413 0a88 0346     		mov	r3, r0
 1414 0a8a 1A46     		mov	r2, r3
 1415 0a8c 40F20003 		movw	r3, #:lower16:GYRO_YANGLE
 1416 0a90 C0F20003 		movt	r3, #:upper16:GYRO_YANGLE
 1417 0a94 1A60     		str	r2, [r3, #0]	@ float
 312:../Sources/MPU6050.c **** 	GYRO_ZANGLE += (float)GYRO_ZRATE*dt;
 1418              		.loc 1 312 0
 1419 0a96 40F20003 		movw	r3, #:lower16:GYRO_ZRATE
 1420 0a9a C0F20003 		movt	r3, #:upper16:GYRO_ZRATE
 1421 0a9e 1A68     		ldr	r2, [r3, #0]	@ float
 1422 0aa0 40F20003 		movw	r3, #:lower16:dt
 1423 0aa4 C0F20003 		movt	r3, #:upper16:dt
 1424 0aa8 1B68     		ldr	r3, [r3, #0]	@ float
 1425 0aaa 1046     		mov	r0, r2
 1426 0aac 1946     		mov	r1, r3
 1427 0aae FFF7FEFF 		bl	__aeabi_fmul
 1428 0ab2 0346     		mov	r3, r0
 1429 0ab4 1A46     		mov	r2, r3
 1430 0ab6 40F20003 		movw	r3, #:lower16:GYRO_ZANGLE
 1431 0aba C0F20003 		movt	r3, #:upper16:GYRO_ZANGLE
 1432 0abe 1B68     		ldr	r3, [r3, #0]	@ float
 1433 0ac0 1046     		mov	r0, r2
 1434 0ac2 1946     		mov	r1, r3
 1435 0ac4 FFF7FEFF 		bl	__aeabi_fadd
 1436 0ac8 0346     		mov	r3, r0
 1437 0aca 1A46     		mov	r2, r3
 1438 0acc 40F20003 		movw	r3, #:lower16:GYRO_ZANGLE
 1439 0ad0 C0F20003 		movt	r3, #:upper16:GYRO_ZANGLE
 1440 0ad4 1A60     		str	r2, [r3, #0]	@ float
 313:../Sources/MPU6050.c **** }
 1441              		.loc 1 313 0
 1442 0ad6 07F10807 		add	r7, r7, #8
 1443 0ada BD46     		mov	sp, r7
 1444 0adc 80BD     		pop	{r7, pc}
 1445              		.cfi_endproc
 1446              	.LFE6:
 1448 0ade 00BF     		.align	2
 1449              		.global	RAW_convert
 1450              		.thumb
 1451              		.thumb_func
 1453              	RAW_convert:
 1454              	.LFB7:
 314:../Sources/MPU6050.c **** 
 315:../Sources/MPU6050.c **** void RAW_convert(char *MPU_6050_buffer){
 1455              		.loc 1 315 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 8
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0ae0 90B5     		push	{r4, r7, lr}
 1460              	.LCFI19:
 1461              		.cfi_def_cfa_offset 12
 1462              		.cfi_offset 4, -12
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0ae2 83B0     		sub	sp, sp, #12
 1466              	.LCFI20:
 1467              		.cfi_def_cfa_offset 24
 1468 0ae4 00AF     		add	r7, sp, #0
 1469              	.LCFI21:
 1470              		.cfi_def_cfa_register 7
 1471 0ae6 7860     		str	r0, [r7, #4]
 316:../Sources/MPU6050.c **** 	ACCEL_XOUT = (((MPU_6050_buffer[0]<<8) & 0xFF00)| (MPU_6050_buffer[1] & 0x00FF))-(float)Gx_offset*
 1472              		.loc 1 316 0
 1473 0ae8 7B68     		ldr	r3, [r7, #4]
 1474 0aea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1475 0aec 4FEA0323 		lsl	r3, r3, #8
 1476 0af0 4FEA0343 		lsl	r3, r3, #16
 1477 0af4 4FEA1343 		lsr	r3, r3, #16
 1478 0af8 7A68     		ldr	r2, [r7, #4]
 1479 0afa 02F10102 		add	r2, r2, #1
 1480 0afe 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1481 0b00 1343     		orrs	r3, r3, r2
 1482 0b02 1846     		mov	r0, r3
 1483 0b04 FFF7FEFF 		bl	__aeabi_i2f
 1484 0b08 0446     		mov	r4, r0
 1485 0b0a 40F20003 		movw	r3, #:lower16:Gx_offset
 1486 0b0e C0F20003 		movt	r3, #:upper16:Gx_offset
 1487 0b12 1B68     		ldr	r3, [r3, #0]	@ float
 1488 0b14 1846     		mov	r0, r3
 1489 0b16 4FF08C41 		mov	r1, #1174405120
 1490 0b1a FFF7FEFF 		bl	__aeabi_fmul
 1491 0b1e 0346     		mov	r3, r0
 1492 0b20 2046     		mov	r0, r4
 1493 0b22 1946     		mov	r1, r3
 1494 0b24 FFF7FEFF 		bl	__aeabi_fsub
 1495 0b28 0346     		mov	r3, r0
 1496 0b2a 1846     		mov	r0, r3
 1497 0b2c FFF7FEFF 		bl	__aeabi_f2iz
 1498 0b30 0346     		mov	r3, r0
 1499 0b32 9AB2     		uxth	r2, r3
 1500 0b34 40F20003 		movw	r3, #:lower16:ACCEL_XOUT
 1501 0b38 C0F20003 		movt	r3, #:upper16:ACCEL_XOUT
 1502 0b3c 1A80     		strh	r2, [r3, #0]	@ movhi
 317:../Sources/MPU6050.c **** 	ACCEL_YOUT = (((MPU_6050_buffer[2]<<8) & 0xFF00)| (MPU_6050_buffer[3] & 0x00FF))-(float)Gy_offset*
 1503              		.loc 1 317 0
 1504 0b3e 7B68     		ldr	r3, [r7, #4]
 1505 0b40 03F10203 		add	r3, r3, #2
 1506 0b44 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1507 0b46 4FEA0323 		lsl	r3, r3, #8
 1508 0b4a 4FEA0343 		lsl	r3, r3, #16
 1509 0b4e 4FEA1343 		lsr	r3, r3, #16
 1510 0b52 7A68     		ldr	r2, [r7, #4]
 1511 0b54 02F10302 		add	r2, r2, #3
 1512 0b58 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1513 0b5a 1343     		orrs	r3, r3, r2
 1514 0b5c 1846     		mov	r0, r3
 1515 0b5e FFF7FEFF 		bl	__aeabi_i2f
 1516 0b62 0446     		mov	r4, r0
 1517 0b64 40F20003 		movw	r3, #:lower16:Gy_offset
 1518 0b68 C0F20003 		movt	r3, #:upper16:Gy_offset
 1519 0b6c 1B68     		ldr	r3, [r3, #0]	@ float
 1520 0b6e 1846     		mov	r0, r3
 1521 0b70 4FF08C41 		mov	r1, #1174405120
 1522 0b74 FFF7FEFF 		bl	__aeabi_fmul
 1523 0b78 0346     		mov	r3, r0
 1524 0b7a 2046     		mov	r0, r4
 1525 0b7c 1946     		mov	r1, r3
 1526 0b7e FFF7FEFF 		bl	__aeabi_fsub
 1527 0b82 0346     		mov	r3, r0
 1528 0b84 1846     		mov	r0, r3
 1529 0b86 FFF7FEFF 		bl	__aeabi_f2iz
 1530 0b8a 0346     		mov	r3, r0
 1531 0b8c 9AB2     		uxth	r2, r3
 1532 0b8e 40F20003 		movw	r3, #:lower16:ACCEL_YOUT
 1533 0b92 C0F20003 		movt	r3, #:upper16:ACCEL_YOUT
 1534 0b96 1A80     		strh	r2, [r3, #0]	@ movhi
 318:../Sources/MPU6050.c **** 	ACCEL_ZOUT = (((MPU_6050_buffer[4]<<8) & 0xFF00)| (MPU_6050_buffer[5] & 0x00FF))-(float)Gz_offset*
 1535              		.loc 1 318 0
 1536 0b98 7B68     		ldr	r3, [r7, #4]
 1537 0b9a 03F10403 		add	r3, r3, #4
 1538 0b9e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1539 0ba0 4FEA0323 		lsl	r3, r3, #8
 1540 0ba4 4FEA0343 		lsl	r3, r3, #16
 1541 0ba8 4FEA1343 		lsr	r3, r3, #16
 1542 0bac 7A68     		ldr	r2, [r7, #4]
 1543 0bae 02F10502 		add	r2, r2, #5
 1544 0bb2 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1545 0bb4 1343     		orrs	r3, r3, r2
 1546 0bb6 1846     		mov	r0, r3
 1547 0bb8 FFF7FEFF 		bl	__aeabi_i2f
 1548 0bbc 0446     		mov	r4, r0
 1549 0bbe 40F20003 		movw	r3, #:lower16:Gz_offset
 1550 0bc2 C0F20003 		movt	r3, #:upper16:Gz_offset
 1551 0bc6 1B68     		ldr	r3, [r3, #0]	@ float
 1552 0bc8 1846     		mov	r0, r3
 1553 0bca 4FF08C41 		mov	r1, #1174405120
 1554 0bce FFF7FEFF 		bl	__aeabi_fmul
 1555 0bd2 0346     		mov	r3, r0
 1556 0bd4 2046     		mov	r0, r4
 1557 0bd6 1946     		mov	r1, r3
 1558 0bd8 FFF7FEFF 		bl	__aeabi_fsub
 1559 0bdc 0346     		mov	r3, r0
 1560 0bde 1846     		mov	r0, r3
 1561 0be0 FFF7FEFF 		bl	__aeabi_f2iz
 1562 0be4 0346     		mov	r3, r0
 1563 0be6 9AB2     		uxth	r2, r3
 1564 0be8 40F20003 		movw	r3, #:lower16:ACCEL_ZOUT
 1565 0bec C0F20003 		movt	r3, #:upper16:ACCEL_ZOUT
 1566 0bf0 1A80     		strh	r2, [r3, #0]	@ movhi
 319:../Sources/MPU6050.c **** 	
 320:../Sources/MPU6050.c **** 	TEMP = (((((signed short)MPU_6050_buffer[6]<<8) & 0xFF00) | ((signed short)MPU_6050_buffer[7] & 0x
 1567              		.loc 1 320 0
 1568 0bf2 7B68     		ldr	r3, [r7, #4]
 1569 0bf4 03F10603 		add	r3, r3, #6
 1570 0bf8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1571 0bfa 4FEA0323 		lsl	r3, r3, #8
 1572 0bfe 4FEA0343 		lsl	r3, r3, #16
 1573 0c02 4FEA1343 		lsr	r3, r3, #16
 1574 0c06 7A68     		ldr	r2, [r7, #4]
 1575 0c08 02F10702 		add	r2, r2, #7
 1576 0c0c 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1577 0c0e 1343     		orrs	r3, r3, r2
 1578 0c10 1846     		mov	r0, r3
 1579 0c12 FFF7FEFF 		bl	__aeabi_i2f
 1580 0c16 0246     		mov	r2, r0
 1581 0c18 40F20003 		movw	r3, #:lower16:TEMP
 1582 0c1c C0F20003 		movt	r3, #:upper16:TEMP
 1583 0c20 1A60     		str	r2, [r3, #0]	@ float
 321:../Sources/MPU6050.c **** 	TEMP = (TEMP/340)+36.53;	//see datasheet
 1584              		.loc 1 321 0
 1585 0c22 40F20003 		movw	r3, #:lower16:TEMP
 1586 0c26 C0F20003 		movt	r3, #:upper16:TEMP
 1587 0c2a 1B68     		ldr	r3, [r3, #0]	@ float
 1588 0c2c 1846     		mov	r0, r3
 1589 0c2e 4FF00001 		mov	r1, #0
 1590 0c32 C4F2AA31 		movt	r1, 17322
 1591 0c36 FFF7FEFF 		bl	__aeabi_fdiv
 1592 0c3a 0346     		mov	r3, r0
 1593 0c3c 1846     		mov	r0, r3
 1594 0c3e FFF7FEFF 		bl	__aeabi_f2d
 1595 0c42 0246     		mov	r2, r0
 1596 0c44 0B46     		mov	r3, r1
 1597 0c46 1046     		mov	r0, r2
 1598 0c48 1946     		mov	r1, r3
 1599 0c4a 5BA3     		adr	r3, .L15
 1600 0c4c D3E90023 		ldrd	r2, [r3]
 1601 0c50 FFF7FEFF 		bl	__aeabi_dadd
 1602 0c54 0246     		mov	r2, r0
 1603 0c56 0B46     		mov	r3, r1
 1604 0c58 1046     		mov	r0, r2
 1605 0c5a 1946     		mov	r1, r3
 1606 0c5c FFF7FEFF 		bl	__aeabi_d2f
 1607 0c60 0246     		mov	r2, r0
 1608 0c62 40F20003 		movw	r3, #:lower16:TEMP
 1609 0c66 C0F20003 		movt	r3, #:upper16:TEMP
 1610 0c6a 1A60     		str	r2, [r3, #0]	@ float
 322:../Sources/MPU6050.c **** 	
 323:../Sources/MPU6050.c **** 	GYRO_XOUT = ((MPU_6050_buffer[8]<<8)|MPU_6050_buffer[9]) + GYRO_XOUT_OFFSET;
 1611              		.loc 1 323 0
 1612 0c6c 7B68     		ldr	r3, [r7, #4]
 1613 0c6e 03F10803 		add	r3, r3, #8
 1614 0c72 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1615 0c74 4FEA0323 		lsl	r3, r3, #8
 1616 0c78 9AB2     		uxth	r2, r3
 1617 0c7a 7B68     		ldr	r3, [r7, #4]
 1618 0c7c 03F10903 		add	r3, r3, #9
 1619 0c80 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1620 0c82 1343     		orrs	r3, r3, r2
 1621 0c84 9BB2     		uxth	r3, r3
 1622 0c86 9AB2     		uxth	r2, r3
 1623 0c88 40F20003 		movw	r3, #:lower16:GYRO_XOUT_OFFSET
 1624 0c8c C0F20003 		movt	r3, #:upper16:GYRO_XOUT_OFFSET
 1625 0c90 1B88     		ldrh	r3, [r3, #0]
 1626 0c92 9BB2     		uxth	r3, r3
 1627 0c94 D318     		adds	r3, r2, r3
 1628 0c96 9BB2     		uxth	r3, r3
 1629 0c98 9AB2     		uxth	r2, r3
 1630 0c9a 40F20003 		movw	r3, #:lower16:GYRO_XOUT
 1631 0c9e C0F20003 		movt	r3, #:upper16:GYRO_XOUT
 1632 0ca2 1A80     		strh	r2, [r3, #0]	@ movhi
 324:../Sources/MPU6050.c **** 	GYRO_YOUT = ((MPU_6050_buffer[10]<<8)|MPU_6050_buffer[11]) + GYRO_YOUT_OFFSET;
 1633              		.loc 1 324 0
 1634 0ca4 7B68     		ldr	r3, [r7, #4]
 1635 0ca6 03F10A03 		add	r3, r3, #10
 1636 0caa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1637 0cac 4FEA0323 		lsl	r3, r3, #8
 1638 0cb0 9AB2     		uxth	r2, r3
 1639 0cb2 7B68     		ldr	r3, [r7, #4]
 1640 0cb4 03F10B03 		add	r3, r3, #11
 1641 0cb8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1642 0cba 1343     		orrs	r3, r3, r2
 1643 0cbc 9BB2     		uxth	r3, r3
 1644 0cbe 9AB2     		uxth	r2, r3
 1645 0cc0 40F20003 		movw	r3, #:lower16:GYRO_YOUT_OFFSET
 1646 0cc4 C0F20003 		movt	r3, #:upper16:GYRO_YOUT_OFFSET
 1647 0cc8 1B88     		ldrh	r3, [r3, #0]
 1648 0cca 9BB2     		uxth	r3, r3
 1649 0ccc D318     		adds	r3, r2, r3
 1650 0cce 9BB2     		uxth	r3, r3
 1651 0cd0 9AB2     		uxth	r2, r3
 1652 0cd2 40F20003 		movw	r3, #:lower16:GYRO_YOUT
 1653 0cd6 C0F20003 		movt	r3, #:upper16:GYRO_YOUT
 1654 0cda 1A80     		strh	r2, [r3, #0]	@ movhi
 325:../Sources/MPU6050.c **** 	GYRO_ZOUT = ((MPU_6050_buffer[12]<<8)|MPU_6050_buffer[13]) + GYRO_ZOUT_OFFSET;
 1655              		.loc 1 325 0
 1656 0cdc 7B68     		ldr	r3, [r7, #4]
 1657 0cde 03F10C03 		add	r3, r3, #12
 1658 0ce2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1659 0ce4 4FEA0323 		lsl	r3, r3, #8
 1660 0ce8 9AB2     		uxth	r2, r3
 1661 0cea 7B68     		ldr	r3, [r7, #4]
 1662 0cec 03F10D03 		add	r3, r3, #13
 1663 0cf0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1664 0cf2 1343     		orrs	r3, r3, r2
 1665 0cf4 9BB2     		uxth	r3, r3
 1666 0cf6 9AB2     		uxth	r2, r3
 1667 0cf8 40F20003 		movw	r3, #:lower16:GYRO_ZOUT_OFFSET
 1668 0cfc C0F20003 		movt	r3, #:upper16:GYRO_ZOUT_OFFSET
 1669 0d00 1B88     		ldrh	r3, [r3, #0]
 1670 0d02 9BB2     		uxth	r3, r3
 1671 0d04 D318     		adds	r3, r2, r3
 1672 0d06 9BB2     		uxth	r3, r3
 1673 0d08 9AB2     		uxth	r2, r3
 1674 0d0a 40F20003 		movw	r3, #:lower16:GYRO_ZOUT
 1675 0d0e C0F20003 		movt	r3, #:upper16:GYRO_ZOUT
 1676 0d12 1A80     		strh	r2, [r3, #0]	@ movhi
 326:../Sources/MPU6050.c **** 	
 327:../Sources/MPU6050.c **** 	GYRO_XRATE = (float)GYRO_XOUT/gyro_xsensitivity;
 1677              		.loc 1 327 0
 1678 0d14 40F20003 		movw	r3, #:lower16:GYRO_XOUT
 1679 0d18 C0F20003 		movt	r3, #:upper16:GYRO_XOUT
 1680 0d1c 1B88     		ldrh	r3, [r3, #0]
 1681 0d1e 1BB2     		sxth	r3, r3
 1682 0d20 1846     		mov	r0, r3
 1683 0d22 FFF7FEFF 		bl	__aeabi_i2f
 1684 0d26 0246     		mov	r2, r0
 1685 0d28 40F20003 		movw	r3, #:lower16:gyro_xsensitivity
 1686 0d2c C0F20003 		movt	r3, #:upper16:gyro_xsensitivity
 1687 0d30 1B68     		ldr	r3, [r3, #0]	@ float
 1688 0d32 1046     		mov	r0, r2
 1689 0d34 1946     		mov	r1, r3
 1690 0d36 FFF7FEFF 		bl	__aeabi_fdiv
 1691 0d3a 0346     		mov	r3, r0
 1692 0d3c 1A46     		mov	r2, r3
 1693 0d3e 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 1694 0d42 C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 1695 0d46 1A60     		str	r2, [r3, #0]	@ float
 328:../Sources/MPU6050.c **** 	GYRO_YRATE = (float)GYRO_YOUT/gyro_ysensitivity;
 1696              		.loc 1 328 0
 1697 0d48 40F20003 		movw	r3, #:lower16:GYRO_YOUT
 1698 0d4c C0F20003 		movt	r3, #:upper16:GYRO_YOUT
 1699 0d50 1B88     		ldrh	r3, [r3, #0]
 1700 0d52 1BB2     		sxth	r3, r3
 1701 0d54 1846     		mov	r0, r3
 1702 0d56 FFF7FEFF 		bl	__aeabi_i2f
 1703 0d5a 0246     		mov	r2, r0
 1704 0d5c 40F20003 		movw	r3, #:lower16:gyro_ysensitivity
 1705 0d60 C0F20003 		movt	r3, #:upper16:gyro_ysensitivity
 1706 0d64 1B68     		ldr	r3, [r3, #0]	@ float
 1707 0d66 1046     		mov	r0, r2
 1708 0d68 1946     		mov	r1, r3
 1709 0d6a FFF7FEFF 		bl	__aeabi_fdiv
 1710 0d6e 0346     		mov	r3, r0
 1711 0d70 1A46     		mov	r2, r3
 1712 0d72 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 1713 0d76 C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 1714 0d7a 1A60     		str	r2, [r3, #0]	@ float
 329:../Sources/MPU6050.c **** 	GYRO_ZRATE = (float)GYRO_ZOUT/gyro_zsensitivity;
 1715              		.loc 1 329 0
 1716 0d7c 40F20003 		movw	r3, #:lower16:GYRO_ZOUT
 1717 0d80 C0F20003 		movt	r3, #:upper16:GYRO_ZOUT
 1718 0d84 1B88     		ldrh	r3, [r3, #0]
 1719 0d86 1BB2     		sxth	r3, r3
 1720 0d88 1846     		mov	r0, r3
 1721 0d8a FFF7FEFF 		bl	__aeabi_i2f
 1722 0d8e 0246     		mov	r2, r0
 1723 0d90 40F20003 		movw	r3, #:lower16:gyro_zsensitivity
 1724 0d94 C0F20003 		movt	r3, #:upper16:gyro_zsensitivity
 1725 0d98 1B68     		ldr	r3, [r3, #0]	@ float
 1726 0d9a 1046     		mov	r0, r2
 1727 0d9c 1946     		mov	r1, r3
 1728 0d9e FFF7FEFF 		bl	__aeabi_fdiv
 1729 0da2 0346     		mov	r3, r0
 1730 0da4 1A46     		mov	r2, r3
 1731 0da6 40F20003 		movw	r3, #:lower16:GYRO_ZRATE
 1732 0daa C0F20003 		movt	r3, #:upper16:GYRO_ZRATE
 1733 0dae 1A60     		str	r2, [r3, #0]	@ float
 330:../Sources/MPU6050.c **** }
 1734              		.loc 1 330 0
 1735 0db0 07F10C07 		add	r7, r7, #12
 1736 0db4 BD46     		mov	sp, r7
 1737 0db6 90BD     		pop	{r4, r7, pc}
 1738              	.L16:
 1739              		.align	3
 1740              	.L15:
 1741 0db8 A4703D0A 		.word	171798692
 1742 0dbc D7434240 		.word	1078084567
 1743              		.cfi_endproc
 1744              	.LFE7:
 1746              		.align	2
 1747              		.global	DMAread_MPU6050
 1748              		.thumb
 1749              		.thumb_func
 1751              	DMAread_MPU6050:
 1752              	.LFB8:
 331:../Sources/MPU6050.c **** 
 332:../Sources/MPU6050.c **** void DMAread_MPU6050(){
 1753              		.loc 1 332 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 16
 1756              		@ frame_needed = 1, uses_anonymous_args = 0
 1757 0dc0 80B5     		push	{r7, lr}
 1758              	.LCFI22:
 1759              		.cfi_def_cfa_offset 8
 1760              		.cfi_offset 7, -8
 1761              		.cfi_offset 14, -4
 1762 0dc2 84B0     		sub	sp, sp, #16
 1763              	.LCFI23:
 1764              		.cfi_def_cfa_offset 24
 1765 0dc4 00AF     		add	r7, sp, #0
 1766              	.LCFI24:
 1767              		.cfi_def_cfa_register 7
 333:../Sources/MPU6050.c **** 	char MPU_6050_buffer[14];
 334:../Sources/MPU6050.c **** 	
 335:../Sources/MPU6050.c **** 	DMA_I2CReadMultiRegisters(MPU6050_ADDRESS,MPU6050_RA_ACCEL_XOUT_H,&MPU_6050_buffer[0],14);
 1768              		.loc 1 335 0
 1769 0dc6 3B46     		mov	r3, r7
 1770 0dc8 4FF06800 		mov	r0, #104
 1771 0dcc 4FF03B01 		mov	r1, #59
 1772 0dd0 1A46     		mov	r2, r3
 1773 0dd2 4FF00E03 		mov	r3, #14
 1774 0dd6 FFF7FEFF 		bl	DMA_I2CReadMultiRegisters
 336:../Sources/MPU6050.c **** 	RAW_convert(&MPU_6050_buffer[0]);	
 1775              		.loc 1 336 0
 1776 0dda 3B46     		mov	r3, r7
 1777 0ddc 1846     		mov	r0, r3
 1778 0dde FFF7FEFF 		bl	RAW_convert
 337:../Sources/MPU6050.c **** }
 1779              		.loc 1 337 0
 1780 0de2 07F11007 		add	r7, r7, #16
 1781 0de6 BD46     		mov	sp, r7
 1782 0de8 80BD     		pop	{r7, pc}
 1783              		.cfi_endproc
 1784              	.LFE8:
 1786 0dea 00BF     		.align	2
 1787              		.global	read_MPU6050
 1788              		.thumb
 1789              		.thumb_func
 1791              	read_MPU6050:
 1792              	.LFB9:
 338:../Sources/MPU6050.c **** void read_MPU6050(){
 1793              		.loc 1 338 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 16
 1796              		@ frame_needed = 1, uses_anonymous_args = 0
 1797 0dec 80B5     		push	{r7, lr}
 1798              	.LCFI25:
 1799              		.cfi_def_cfa_offset 8
 1800              		.cfi_offset 7, -8
 1801              		.cfi_offset 14, -4
 1802 0dee 84B0     		sub	sp, sp, #16
 1803              	.LCFI26:
 1804              		.cfi_def_cfa_offset 24
 1805 0df0 00AF     		add	r7, sp, #0
 1806              	.LCFI27:
 1807              		.cfi_def_cfa_register 7
 339:../Sources/MPU6050.c **** 	char MPU_6050_buffer[14];
 340:../Sources/MPU6050.c **** 	
 341:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS,MPU6050_RA_ACCEL_XOUT_H,&MPU_6050_buffer[0],14);
 1808              		.loc 1 341 0
 1809 0df2 3B46     		mov	r3, r7
 1810 0df4 4FF06800 		mov	r0, #104
 1811 0df8 4FF03B01 		mov	r1, #59
 1812 0dfc 1A46     		mov	r2, r3
 1813 0dfe 4FF00E03 		mov	r3, #14
 1814 0e02 FFF7FEFF 		bl	I2CReadMultiRegisters
 342:../Sources/MPU6050.c **** 	RAW_convert(&MPU_6050_buffer[0]);	
 1815              		.loc 1 342 0
 1816 0e06 3B46     		mov	r3, r7
 1817 0e08 1846     		mov	r0, r3
 1818 0e0a FFF7FEFF 		bl	RAW_convert
 343:../Sources/MPU6050.c **** }
 1819              		.loc 1 343 0
 1820 0e0e 07F11007 		add	r7, r7, #16
 1821 0e12 BD46     		mov	sp, r7
 1822 0e14 80BD     		pop	{r7, pc}
 1823              		.cfi_endproc
 1824              	.LFE9:
 1826              		.global	__aeabi_dmul
 1827              		.global	__aeabi_dsub
 1828 0e16 00BF     		.align	2
 1829              		.global	Get_Angles
 1830              		.thumb
 1831              		.thumb_func
 1833              	Get_Angles:
 1834              	.LFB10:
 344:../Sources/MPU6050.c **** //Converts the already acquired accelerometer data into 3D euler angles
 345:../Sources/MPU6050.c **** void Get_Angles()
 346:../Sources/MPU6050.c **** {
 1835              		.loc 1 346 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839 0e18 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 1840              	.LCFI28:
 1841              		.cfi_def_cfa_offset 24
 1842              		.cfi_offset 4, -24
 1843              		.cfi_offset 5, -20
 1844              		.cfi_offset 7, -16
 1845              		.cfi_offset 8, -12
 1846              		.cfi_offset 9, -8
 1847              		.cfi_offset 14, -4
 1848 0e1c 00AF     		add	r7, sp, #0
 1849              	.LCFI29:
 1850              		.cfi_def_cfa_register 7
 347:../Sources/MPU6050.c **** 	ACCEL_XANGLE = (57.295*atan((float)-ACCEL_YOUT/ sqrt(pow((float)ACCEL_ZOUT,2)+pow((float)ACCEL_XOU
 1851              		.loc 1 347 0
 1852 0e1e 40F20003 		movw	r3, #:lower16:ACCEL_YOUT
 1853 0e22 C0F20003 		movt	r3, #:upper16:ACCEL_YOUT
 1854 0e26 1B88     		ldrh	r3, [r3, #0]
 1855 0e28 1BB2     		sxth	r3, r3
 1856 0e2a C3F10003 		rsb	r3, r3, #0
 1857 0e2e 1846     		mov	r0, r3
 1858 0e30 FFF7FEFF 		bl	__aeabi_i2f
 1859 0e34 0346     		mov	r3, r0
 1860 0e36 1846     		mov	r0, r3
 1861 0e38 FFF7FEFF 		bl	__aeabi_f2d
 1862 0e3c 0446     		mov	r4, r0
 1863 0e3e 0D46     		mov	r5, r1
 1864 0e40 40F20003 		movw	r3, #:lower16:ACCEL_ZOUT
 1865 0e44 C0F20003 		movt	r3, #:upper16:ACCEL_ZOUT
 1866 0e48 1B88     		ldrh	r3, [r3, #0]
 1867 0e4a 1BB2     		sxth	r3, r3
 1868 0e4c 1846     		mov	r0, r3
 1869 0e4e FFF7FEFF 		bl	__aeabi_i2f
 1870 0e52 0346     		mov	r3, r0
 1871 0e54 1846     		mov	r0, r3
 1872 0e56 FFF7FEFF 		bl	__aeabi_f2d
 1873 0e5a 0246     		mov	r2, r0
 1874 0e5c 0B46     		mov	r3, r1
 1875 0e5e 1046     		mov	r0, r2
 1876 0e60 1946     		mov	r1, r3
 1877 0e62 4FF00002 		mov	r2, #0
 1878 0e66 4FF08043 		mov	r3, #1073741824
 1879 0e6a FFF7FEFF 		bl	pow
 1880 0e6e 8046     		mov	r8, r0
 1881 0e70 8946     		mov	r9, r1
 1882 0e72 40F20003 		movw	r3, #:lower16:ACCEL_XOUT
 1883 0e76 C0F20003 		movt	r3, #:upper16:ACCEL_XOUT
 1884 0e7a 1B88     		ldrh	r3, [r3, #0]
 1885 0e7c 1BB2     		sxth	r3, r3
 1886 0e7e 1846     		mov	r0, r3
 1887 0e80 FFF7FEFF 		bl	__aeabi_i2f
 1888 0e84 0346     		mov	r3, r0
 1889 0e86 1846     		mov	r0, r3
 1890 0e88 FFF7FEFF 		bl	__aeabi_f2d
 1891 0e8c 0246     		mov	r2, r0
 1892 0e8e 0B46     		mov	r3, r1
 1893 0e90 1046     		mov	r0, r2
 1894 0e92 1946     		mov	r1, r3
 1895 0e94 4FF00002 		mov	r2, #0
 1896 0e98 4FF08043 		mov	r3, #1073741824
 1897 0e9c FFF7FEFF 		bl	pow
 1898 0ea0 0246     		mov	r2, r0
 1899 0ea2 0B46     		mov	r3, r1
 1900 0ea4 4046     		mov	r0, r8
 1901 0ea6 4946     		mov	r1, r9
 1902 0ea8 FFF7FEFF 		bl	__aeabi_dadd
 1903 0eac 0246     		mov	r2, r0
 1904 0eae 0B46     		mov	r3, r1
 1905 0eb0 1046     		mov	r0, r2
 1906 0eb2 1946     		mov	r1, r3
 1907 0eb4 FFF7FEFF 		bl	sqrt
 1908 0eb8 0246     		mov	r2, r0
 1909 0eba 0B46     		mov	r3, r1
 1910 0ebc 2046     		mov	r0, r4
 1911 0ebe 2946     		mov	r1, r5
 1912 0ec0 FFF7FEFF 		bl	__aeabi_ddiv
 1913 0ec4 0246     		mov	r2, r0
 1914 0ec6 0B46     		mov	r3, r1
 1915 0ec8 1046     		mov	r0, r2
 1916 0eca 1946     		mov	r1, r3
 1917 0ecc FFF7FEFF 		bl	atan
 1918 0ed0 0246     		mov	r2, r0
 1919 0ed2 0B46     		mov	r3, r1
 1920 0ed4 1046     		mov	r0, r2
 1921 0ed6 1946     		mov	r1, r3
 1922 0ed8 81A3     		adr	r3, .L20
 1923 0eda D3E90023 		ldrd	r2, [r3]
 1924 0ede FFF7FEFF 		bl	__aeabi_dmul
 1925 0ee2 0246     		mov	r2, r0
 1926 0ee4 0B46     		mov	r3, r1
 1927 0ee6 1446     		mov	r4, r2
 1928 0ee8 1D46     		mov	r5, r3
 1929 0eea 40F20003 		movw	r3, #:lower16:XANGLE_OFFSET
 1930 0eee C0F20003 		movt	r3, #:upper16:XANGLE_OFFSET
 1931 0ef2 1B68     		ldr	r3, [r3, #0]	@ float
 1932 0ef4 1846     		mov	r0, r3
 1933 0ef6 FFF7FEFF 		bl	__aeabi_f2d
 1934 0efa 0246     		mov	r2, r0
 1935 0efc 0B46     		mov	r3, r1
 1936 0efe 2046     		mov	r0, r4
 1937 0f00 2946     		mov	r1, r5
 1938 0f02 FFF7FEFF 		bl	__aeabi_dsub
 1939 0f06 0246     		mov	r2, r0
 1940 0f08 0B46     		mov	r3, r1
 1941 0f0a 1046     		mov	r0, r2
 1942 0f0c 1946     		mov	r1, r3
 1943 0f0e FFF7FEFF 		bl	__aeabi_d2f
 1944 0f12 0246     		mov	r2, r0
 1945 0f14 40F20003 		movw	r3, #:lower16:ACCEL_XANGLE
 1946 0f18 C0F20003 		movt	r3, #:upper16:ACCEL_XANGLE
 1947 0f1c 1A60     		str	r2, [r3, #0]	@ float
 348:../Sources/MPU6050.c **** 	ACCEL_YANGLE = (57.295*atan((float)ACCEL_XOUT/ sqrt(pow((float)ACCEL_ZOUT,2)+pow((float)ACCEL_YOUT
 1948              		.loc 1 348 0
 1949 0f1e 40F20003 		movw	r3, #:lower16:ACCEL_XOUT
 1950 0f22 C0F20003 		movt	r3, #:upper16:ACCEL_XOUT
 1951 0f26 1B88     		ldrh	r3, [r3, #0]
 1952 0f28 1BB2     		sxth	r3, r3
 1953 0f2a 1846     		mov	r0, r3
 1954 0f2c FFF7FEFF 		bl	__aeabi_i2f
 1955 0f30 0346     		mov	r3, r0
 1956 0f32 1846     		mov	r0, r3
 1957 0f34 FFF7FEFF 		bl	__aeabi_f2d
 1958 0f38 0446     		mov	r4, r0
 1959 0f3a 0D46     		mov	r5, r1
 1960 0f3c 40F20003 		movw	r3, #:lower16:ACCEL_ZOUT
 1961 0f40 C0F20003 		movt	r3, #:upper16:ACCEL_ZOUT
 1962 0f44 1B88     		ldrh	r3, [r3, #0]
 1963 0f46 1BB2     		sxth	r3, r3
 1964 0f48 1846     		mov	r0, r3
 1965 0f4a FFF7FEFF 		bl	__aeabi_i2f
 1966 0f4e 0346     		mov	r3, r0
 1967 0f50 1846     		mov	r0, r3
 1968 0f52 FFF7FEFF 		bl	__aeabi_f2d
 1969 0f56 0246     		mov	r2, r0
 1970 0f58 0B46     		mov	r3, r1
 1971 0f5a 1046     		mov	r0, r2
 1972 0f5c 1946     		mov	r1, r3
 1973 0f5e 4FF00002 		mov	r2, #0
 1974 0f62 4FF08043 		mov	r3, #1073741824
 1975 0f66 FFF7FEFF 		bl	pow
 1976 0f6a 8046     		mov	r8, r0
 1977 0f6c 8946     		mov	r9, r1
 1978 0f6e 40F20003 		movw	r3, #:lower16:ACCEL_YOUT
 1979 0f72 C0F20003 		movt	r3, #:upper16:ACCEL_YOUT
 1980 0f76 1B88     		ldrh	r3, [r3, #0]
 1981 0f78 1BB2     		sxth	r3, r3
 1982 0f7a 1846     		mov	r0, r3
 1983 0f7c FFF7FEFF 		bl	__aeabi_i2f
 1984 0f80 0346     		mov	r3, r0
 1985 0f82 1846     		mov	r0, r3
 1986 0f84 FFF7FEFF 		bl	__aeabi_f2d
 1987 0f88 0246     		mov	r2, r0
 1988 0f8a 0B46     		mov	r3, r1
 1989 0f8c 1046     		mov	r0, r2
 1990 0f8e 1946     		mov	r1, r3
 1991 0f90 4FF00002 		mov	r2, #0
 1992 0f94 4FF08043 		mov	r3, #1073741824
 1993 0f98 FFF7FEFF 		bl	pow
 1994 0f9c 0246     		mov	r2, r0
 1995 0f9e 0B46     		mov	r3, r1
 1996 0fa0 4046     		mov	r0, r8
 1997 0fa2 4946     		mov	r1, r9
 1998 0fa4 FFF7FEFF 		bl	__aeabi_dadd
 1999 0fa8 0246     		mov	r2, r0
 2000 0faa 0B46     		mov	r3, r1
 2001 0fac 1046     		mov	r0, r2
 2002 0fae 1946     		mov	r1, r3
 2003 0fb0 FFF7FEFF 		bl	sqrt
 2004 0fb4 0246     		mov	r2, r0
 2005 0fb6 0B46     		mov	r3, r1
 2006 0fb8 2046     		mov	r0, r4
 2007 0fba 2946     		mov	r1, r5
 2008 0fbc FFF7FEFF 		bl	__aeabi_ddiv
 2009 0fc0 0246     		mov	r2, r0
 2010 0fc2 0B46     		mov	r3, r1
 2011 0fc4 1046     		mov	r0, r2
 2012 0fc6 1946     		mov	r1, r3
 2013 0fc8 FFF7FEFF 		bl	atan
 2014 0fcc 0246     		mov	r2, r0
 2015 0fce 0B46     		mov	r3, r1
 2016 0fd0 1046     		mov	r0, r2
 2017 0fd2 1946     		mov	r1, r3
 2018 0fd4 42A3     		adr	r3, .L20
 2019 0fd6 D3E90023 		ldrd	r2, [r3]
 2020 0fda FFF7FEFF 		bl	__aeabi_dmul
 2021 0fde 0246     		mov	r2, r0
 2022 0fe0 0B46     		mov	r3, r1
 2023 0fe2 1446     		mov	r4, r2
 2024 0fe4 1D46     		mov	r5, r3
 2025 0fe6 40F20003 		movw	r3, #:lower16:YANGLE_OFFSET
 2026 0fea C0F20003 		movt	r3, #:upper16:YANGLE_OFFSET
 2027 0fee 1B68     		ldr	r3, [r3, #0]	@ float
 2028 0ff0 1846     		mov	r0, r3
 2029 0ff2 FFF7FEFF 		bl	__aeabi_f2d
 2030 0ff6 0246     		mov	r2, r0
 2031 0ff8 0B46     		mov	r3, r1
 2032 0ffa 2046     		mov	r0, r4
 2033 0ffc 2946     		mov	r1, r5
 2034 0ffe FFF7FEFF 		bl	__aeabi_dsub
 2035 1002 0246     		mov	r2, r0
 2036 1004 0B46     		mov	r3, r1
 2037 1006 1046     		mov	r0, r2
 2038 1008 1946     		mov	r1, r3
 2039 100a FFF7FEFF 		bl	__aeabi_d2f
 2040 100e 0246     		mov	r2, r0
 2041 1010 40F20003 		movw	r3, #:lower16:ACCEL_YANGLE
 2042 1014 C0F20003 		movt	r3, #:upper16:ACCEL_YANGLE
 2043 1018 1A60     		str	r2, [r3, #0]	@ float
 349:../Sources/MPU6050.c **** 	
 350:../Sources/MPU6050.c **** 	GYRO_XANGLE += (float)GYRO_XRATE*dt;
 2044              		.loc 1 350 0
 2045 101a 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 2046 101e C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 2047 1022 1A68     		ldr	r2, [r3, #0]	@ float
 2048 1024 40F20003 		movw	r3, #:lower16:dt
 2049 1028 C0F20003 		movt	r3, #:upper16:dt
 2050 102c 1B68     		ldr	r3, [r3, #0]	@ float
 2051 102e 1046     		mov	r0, r2
 2052 1030 1946     		mov	r1, r3
 2053 1032 FFF7FEFF 		bl	__aeabi_fmul
 2054 1036 0346     		mov	r3, r0
 2055 1038 1A46     		mov	r2, r3
 2056 103a 40F20003 		movw	r3, #:lower16:GYRO_XANGLE
 2057 103e C0F20003 		movt	r3, #:upper16:GYRO_XANGLE
 2058 1042 1B68     		ldr	r3, [r3, #0]	@ float
 2059 1044 1046     		mov	r0, r2
 2060 1046 1946     		mov	r1, r3
 2061 1048 FFF7FEFF 		bl	__aeabi_fadd
 2062 104c 0346     		mov	r3, r0
 2063 104e 1A46     		mov	r2, r3
 2064 1050 40F20003 		movw	r3, #:lower16:GYRO_XANGLE
 2065 1054 C0F20003 		movt	r3, #:upper16:GYRO_XANGLE
 2066 1058 1A60     		str	r2, [r3, #0]	@ float
 351:../Sources/MPU6050.c **** 	GYRO_YANGLE += (float)GYRO_YRATE*dt;
 2067              		.loc 1 351 0
 2068 105a 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 2069 105e C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 2070 1062 1A68     		ldr	r2, [r3, #0]	@ float
 2071 1064 40F20003 		movw	r3, #:lower16:dt
 2072 1068 C0F20003 		movt	r3, #:upper16:dt
 2073 106c 1B68     		ldr	r3, [r3, #0]	@ float
 2074 106e 1046     		mov	r0, r2
 2075 1070 1946     		mov	r1, r3
 2076 1072 FFF7FEFF 		bl	__aeabi_fmul
 2077 1076 0346     		mov	r3, r0
 2078 1078 1A46     		mov	r2, r3
 2079 107a 40F20003 		movw	r3, #:lower16:GYRO_YANGLE
 2080 107e C0F20003 		movt	r3, #:upper16:GYRO_YANGLE
 2081 1082 1B68     		ldr	r3, [r3, #0]	@ float
 2082 1084 1046     		mov	r0, r2
 2083 1086 1946     		mov	r1, r3
 2084 1088 FFF7FEFF 		bl	__aeabi_fadd
 2085 108c 0346     		mov	r3, r0
 2086 108e 1A46     		mov	r2, r3
 2087 1090 40F20003 		movw	r3, #:lower16:GYRO_YANGLE
 2088 1094 C0F20003 		movt	r3, #:upper16:GYRO_YANGLE
 2089 1098 1A60     		str	r2, [r3, #0]	@ float
 352:../Sources/MPU6050.c **** 	GYRO_ZANGLE += (float)GYRO_ZRATE*dt;
 2090              		.loc 1 352 0
 2091 109a 40F20003 		movw	r3, #:lower16:GYRO_ZRATE
 2092 109e C0F20003 		movt	r3, #:upper16:GYRO_ZRATE
 2093 10a2 1A68     		ldr	r2, [r3, #0]	@ float
 2094 10a4 40F20003 		movw	r3, #:lower16:dt
 2095 10a8 C0F20003 		movt	r3, #:upper16:dt
 2096 10ac 1B68     		ldr	r3, [r3, #0]	@ float
 2097 10ae 1046     		mov	r0, r2
 2098 10b0 1946     		mov	r1, r3
 2099 10b2 FFF7FEFF 		bl	__aeabi_fmul
 2100 10b6 0346     		mov	r3, r0
 2101 10b8 1A46     		mov	r2, r3
 2102 10ba 40F20003 		movw	r3, #:lower16:GYRO_ZANGLE
 2103 10be C0F20003 		movt	r3, #:upper16:GYRO_ZANGLE
 2104 10c2 1B68     		ldr	r3, [r3, #0]	@ float
 2105 10c4 1046     		mov	r0, r2
 2106 10c6 1946     		mov	r1, r3
 2107 10c8 FFF7FEFF 		bl	__aeabi_fadd
 2108 10cc 0346     		mov	r3, r0
 2109 10ce 1A46     		mov	r2, r3
 2110 10d0 40F20003 		movw	r3, #:lower16:GYRO_ZANGLE
 2111 10d4 C0F20003 		movt	r3, #:upper16:GYRO_ZANGLE
 2112 10d8 1A60     		str	r2, [r3, #0]	@ float
 353:../Sources/MPU6050.c **** }
 2113              		.loc 1 353 0
 2114 10da BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2115              	.L21:
 2116 10de 00BF     		.align	3
 2117              	.L20:
 2118 10e0 F6285C8F 		.word	-1889785610
 2119 10e4 C2A54C40 		.word	1078764994
 2120              		.cfi_endproc
 2121              	.LFE10:
 2123              		.align	2
 2124              		.global	complementary_filter
 2125              		.thumb
 2126              		.thumb_func
 2128              	complementary_filter:
 2129              	.LFB11:
 354:../Sources/MPU6050.c **** 
 355:../Sources/MPU6050.c **** //Runs a complementary filter configured via float a
 356:../Sources/MPU6050.c **** void complementary_filter()
 357:../Sources/MPU6050.c **** {
 2130              		.loc 1 357 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 1, uses_anonymous_args = 0
 2134 10e8 98B5     		push	{r3, r4, r7, lr}
 2135              	.LCFI30:
 2136              		.cfi_def_cfa_offset 16
 2137              		.cfi_offset 3, -16
 2138              		.cfi_offset 4, -12
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141 10ea 00AF     		add	r7, sp, #0
 2142              	.LCFI31:
 2143              		.cfi_def_cfa_register 7
 358:../Sources/MPU6050.c **** 	COMPLEMENTARY_XANGLE = (COMPLEMENTARY_XANGLE + GYRO_XRATE*dt)*a + ACCEL_XANGLE*(1-a);
 2144              		.loc 1 358 0
 2145 10ec 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 2146 10f0 C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 2147 10f4 1A68     		ldr	r2, [r3, #0]	@ float
 2148 10f6 40F20003 		movw	r3, #:lower16:dt
 2149 10fa C0F20003 		movt	r3, #:upper16:dt
 2150 10fe 1B68     		ldr	r3, [r3, #0]	@ float
 2151 1100 1046     		mov	r0, r2
 2152 1102 1946     		mov	r1, r3
 2153 1104 FFF7FEFF 		bl	__aeabi_fmul
 2154 1108 0346     		mov	r3, r0
 2155 110a 1A46     		mov	r2, r3
 2156 110c 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2157 1110 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2158 1114 1B68     		ldr	r3, [r3, #0]	@ float
 2159 1116 1046     		mov	r0, r2
 2160 1118 1946     		mov	r1, r3
 2161 111a FFF7FEFF 		bl	__aeabi_fadd
 2162 111e 0346     		mov	r3, r0
 2163 1120 1A46     		mov	r2, r3
 2164 1122 40F20003 		movw	r3, #:lower16:a
 2165 1126 C0F20003 		movt	r3, #:upper16:a
 2166 112a 1B68     		ldr	r3, [r3, #0]	@ float
 2167 112c 1046     		mov	r0, r2
 2168 112e 1946     		mov	r1, r3
 2169 1130 FFF7FEFF 		bl	__aeabi_fmul
 2170 1134 0346     		mov	r3, r0
 2171 1136 1C46     		mov	r4, r3
 2172 1138 40F20003 		movw	r3, #:lower16:a
 2173 113c C0F20003 		movt	r3, #:upper16:a
 2174 1140 1B68     		ldr	r3, [r3, #0]	@ float
 2175 1142 4FF07E50 		mov	r0, #1065353216
 2176 1146 1946     		mov	r1, r3
 2177 1148 FFF7FEFF 		bl	__aeabi_fsub
 2178 114c 0346     		mov	r3, r0
 2179 114e 1A46     		mov	r2, r3
 2180 1150 40F20003 		movw	r3, #:lower16:ACCEL_XANGLE
 2181 1154 C0F20003 		movt	r3, #:upper16:ACCEL_XANGLE
 2182 1158 1B68     		ldr	r3, [r3, #0]	@ float
 2183 115a 1046     		mov	r0, r2
 2184 115c 1946     		mov	r1, r3
 2185 115e FFF7FEFF 		bl	__aeabi_fmul
 2186 1162 0346     		mov	r3, r0
 2187 1164 2046     		mov	r0, r4
 2188 1166 1946     		mov	r1, r3
 2189 1168 FFF7FEFF 		bl	__aeabi_fadd
 2190 116c 0346     		mov	r3, r0
 2191 116e 1A46     		mov	r2, r3
 2192 1170 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2193 1174 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2194 1178 1A60     		str	r2, [r3, #0]	@ float
 359:../Sources/MPU6050.c **** 	COMPLEMENTARY_YANGLE = (COMPLEMENTARY_YANGLE + GYRO_YRATE*dt)*a + ACCEL_YANGLE*(1-a);		
 2195              		.loc 1 359 0
 2196 117a 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 2197 117e C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 2198 1182 1A68     		ldr	r2, [r3, #0]	@ float
 2199 1184 40F20003 		movw	r3, #:lower16:dt
 2200 1188 C0F20003 		movt	r3, #:upper16:dt
 2201 118c 1B68     		ldr	r3, [r3, #0]	@ float
 2202 118e 1046     		mov	r0, r2
 2203 1190 1946     		mov	r1, r3
 2204 1192 FFF7FEFF 		bl	__aeabi_fmul
 2205 1196 0346     		mov	r3, r0
 2206 1198 1A46     		mov	r2, r3
 2207 119a 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2208 119e C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2209 11a2 1B68     		ldr	r3, [r3, #0]	@ float
 2210 11a4 1046     		mov	r0, r2
 2211 11a6 1946     		mov	r1, r3
 2212 11a8 FFF7FEFF 		bl	__aeabi_fadd
 2213 11ac 0346     		mov	r3, r0
 2214 11ae 1A46     		mov	r2, r3
 2215 11b0 40F20003 		movw	r3, #:lower16:a
 2216 11b4 C0F20003 		movt	r3, #:upper16:a
 2217 11b8 1B68     		ldr	r3, [r3, #0]	@ float
 2218 11ba 1046     		mov	r0, r2
 2219 11bc 1946     		mov	r1, r3
 2220 11be FFF7FEFF 		bl	__aeabi_fmul
 2221 11c2 0346     		mov	r3, r0
 2222 11c4 1C46     		mov	r4, r3
 2223 11c6 40F20003 		movw	r3, #:lower16:a
 2224 11ca C0F20003 		movt	r3, #:upper16:a
 2225 11ce 1B68     		ldr	r3, [r3, #0]	@ float
 2226 11d0 4FF07E50 		mov	r0, #1065353216
 2227 11d4 1946     		mov	r1, r3
 2228 11d6 FFF7FEFF 		bl	__aeabi_fsub
 2229 11da 0346     		mov	r3, r0
 2230 11dc 1A46     		mov	r2, r3
 2231 11de 40F20003 		movw	r3, #:lower16:ACCEL_YANGLE
 2232 11e2 C0F20003 		movt	r3, #:upper16:ACCEL_YANGLE
 2233 11e6 1B68     		ldr	r3, [r3, #0]	@ float
 2234 11e8 1046     		mov	r0, r2
 2235 11ea 1946     		mov	r1, r3
 2236 11ec FFF7FEFF 		bl	__aeabi_fmul
 2237 11f0 0346     		mov	r3, r0
 2238 11f2 2046     		mov	r0, r4
 2239 11f4 1946     		mov	r1, r3
 2240 11f6 FFF7FEFF 		bl	__aeabi_fadd
 2241 11fa 0346     		mov	r3, r0
 2242 11fc 1A46     		mov	r2, r3
 2243 11fe 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2244 1202 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2245 1206 1A60     		str	r2, [r3, #0]	@ float
 360:../Sources/MPU6050.c **** }	
 2246              		.loc 1 360 0
 2247 1208 98BD     		pop	{r3, r4, r7, pc}
 2248              		.cfi_endproc
 2249              	.LFE11:
 2251 120a 00BF     		.align	2
 2252              		.global	second_order_complementary_filter
 2253              		.thumb
 2254              		.thumb_func
 2256              	second_order_complementary_filter:
 2257              	.LFB12:
 361:../Sources/MPU6050.c **** 
 362:../Sources/MPU6050.c **** //Runs 2nd order complementary filter
 363:../Sources/MPU6050.c **** 
 364:../Sources/MPU6050.c **** void second_order_complementary_filter() //http://code.google.com/p/aeroquad/source/browse/trunk/Ae
 365:../Sources/MPU6050.c **** {
 2258              		.loc 1 365 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262 120c 98B5     		push	{r3, r4, r7, lr}
 2263              	.LCFI32:
 2264              		.cfi_def_cfa_offset 16
 2265              		.cfi_offset 3, -16
 2266              		.cfi_offset 4, -12
 2267              		.cfi_offset 7, -8
 2268              		.cfi_offset 14, -4
 2269 120e 00AF     		add	r7, sp, #0
 2270              	.LCFI33:
 2271              		.cfi_def_cfa_register 7
 366:../Sources/MPU6050.c **** 	filter_xterm[0] = (ACCEL_XANGLE - COMPLEMENTARY_XANGLE) * timeConstant * timeConstant;
 2272              		.loc 1 366 0
 2273 1210 40F20003 		movw	r3, #:lower16:ACCEL_XANGLE
 2274 1214 C0F20003 		movt	r3, #:upper16:ACCEL_XANGLE
 2275 1218 1A68     		ldr	r2, [r3, #0]	@ float
 2276 121a 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2277 121e C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2278 1222 1B68     		ldr	r3, [r3, #0]	@ float
 2279 1224 1046     		mov	r0, r2
 2280 1226 1946     		mov	r1, r3
 2281 1228 FFF7FEFF 		bl	__aeabi_fsub
 2282 122c 0346     		mov	r3, r0
 2283 122e 1A46     		mov	r2, r3
 2284 1230 40F20003 		movw	r3, #:lower16:timeConstant
 2285 1234 C0F20003 		movt	r3, #:upper16:timeConstant
 2286 1238 1B68     		ldr	r3, [r3, #0]	@ float
 2287 123a 1046     		mov	r0, r2
 2288 123c 1946     		mov	r1, r3
 2289 123e FFF7FEFF 		bl	__aeabi_fmul
 2290 1242 0346     		mov	r3, r0
 2291 1244 1A46     		mov	r2, r3
 2292 1246 40F20003 		movw	r3, #:lower16:timeConstant
 2293 124a C0F20003 		movt	r3, #:upper16:timeConstant
 2294 124e 1B68     		ldr	r3, [r3, #0]	@ float
 2295 1250 1046     		mov	r0, r2
 2296 1252 1946     		mov	r1, r3
 2297 1254 FFF7FEFF 		bl	__aeabi_fmul
 2298 1258 0346     		mov	r3, r0
 2299 125a 1A46     		mov	r2, r3
 2300 125c 40F20003 		movw	r3, #:lower16:filter_xterm
 2301 1260 C0F20003 		movt	r3, #:upper16:filter_xterm
 2302 1264 1A60     		str	r2, [r3, #0]	@ float
 367:../Sources/MPU6050.c **** 	filter_yterm[0] = (ACCEL_YANGLE - COMPLEMENTARY_YANGLE) * timeConstant * timeConstant;
 2303              		.loc 1 367 0
 2304 1266 40F20003 		movw	r3, #:lower16:ACCEL_YANGLE
 2305 126a C0F20003 		movt	r3, #:upper16:ACCEL_YANGLE
 2306 126e 1A68     		ldr	r2, [r3, #0]	@ float
 2307 1270 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2308 1274 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2309 1278 1B68     		ldr	r3, [r3, #0]	@ float
 2310 127a 1046     		mov	r0, r2
 2311 127c 1946     		mov	r1, r3
 2312 127e FFF7FEFF 		bl	__aeabi_fsub
 2313 1282 0346     		mov	r3, r0
 2314 1284 1A46     		mov	r2, r3
 2315 1286 40F20003 		movw	r3, #:lower16:timeConstant
 2316 128a C0F20003 		movt	r3, #:upper16:timeConstant
 2317 128e 1B68     		ldr	r3, [r3, #0]	@ float
 2318 1290 1046     		mov	r0, r2
 2319 1292 1946     		mov	r1, r3
 2320 1294 FFF7FEFF 		bl	__aeabi_fmul
 2321 1298 0346     		mov	r3, r0
 2322 129a 1A46     		mov	r2, r3
 2323 129c 40F20003 		movw	r3, #:lower16:timeConstant
 2324 12a0 C0F20003 		movt	r3, #:upper16:timeConstant
 2325 12a4 1B68     		ldr	r3, [r3, #0]	@ float
 2326 12a6 1046     		mov	r0, r2
 2327 12a8 1946     		mov	r1, r3
 2328 12aa FFF7FEFF 		bl	__aeabi_fmul
 2329 12ae 0346     		mov	r3, r0
 2330 12b0 1A46     		mov	r2, r3
 2331 12b2 40F20003 		movw	r3, #:lower16:filter_yterm
 2332 12b6 C0F20003 		movt	r3, #:upper16:filter_yterm
 2333 12ba 1A60     		str	r2, [r3, #0]	@ float
 368:../Sources/MPU6050.c ****   	filter_xterm[2] = (dt * filter_xterm[0]) + filter_xterm[2];
 2334              		.loc 1 368 0
 2335 12bc 40F20003 		movw	r3, #:lower16:filter_xterm
 2336 12c0 C0F20003 		movt	r3, #:upper16:filter_xterm
 2337 12c4 1A68     		ldr	r2, [r3, #0]	@ float
 2338 12c6 40F20003 		movw	r3, #:lower16:dt
 2339 12ca C0F20003 		movt	r3, #:upper16:dt
 2340 12ce 1B68     		ldr	r3, [r3, #0]	@ float
 2341 12d0 1046     		mov	r0, r2
 2342 12d2 1946     		mov	r1, r3
 2343 12d4 FFF7FEFF 		bl	__aeabi_fmul
 2344 12d8 0346     		mov	r3, r0
 2345 12da 1A46     		mov	r2, r3
 2346 12dc 40F20003 		movw	r3, #:lower16:filter_xterm
 2347 12e0 C0F20003 		movt	r3, #:upper16:filter_xterm
 2348 12e4 9B68     		ldr	r3, [r3, #8]	@ float
 2349 12e6 1046     		mov	r0, r2
 2350 12e8 1946     		mov	r1, r3
 2351 12ea FFF7FEFF 		bl	__aeabi_fadd
 2352 12ee 0346     		mov	r3, r0
 2353 12f0 1A46     		mov	r2, r3
 2354 12f2 40F20003 		movw	r3, #:lower16:filter_xterm
 2355 12f6 C0F20003 		movt	r3, #:upper16:filter_xterm
 2356 12fa 9A60     		str	r2, [r3, #8]	@ float
 369:../Sources/MPU6050.c ****   	filter_yterm[2] = (dt * filter_yterm[0]) + filter_yterm[2];
 2357              		.loc 1 369 0
 2358 12fc 40F20003 		movw	r3, #:lower16:filter_yterm
 2359 1300 C0F20003 		movt	r3, #:upper16:filter_yterm
 2360 1304 1A68     		ldr	r2, [r3, #0]	@ float
 2361 1306 40F20003 		movw	r3, #:lower16:dt
 2362 130a C0F20003 		movt	r3, #:upper16:dt
 2363 130e 1B68     		ldr	r3, [r3, #0]	@ float
 2364 1310 1046     		mov	r0, r2
 2365 1312 1946     		mov	r1, r3
 2366 1314 FFF7FEFF 		bl	__aeabi_fmul
 2367 1318 0346     		mov	r3, r0
 2368 131a 1A46     		mov	r2, r3
 2369 131c 40F20003 		movw	r3, #:lower16:filter_yterm
 2370 1320 C0F20003 		movt	r3, #:upper16:filter_yterm
 2371 1324 9B68     		ldr	r3, [r3, #8]	@ float
 2372 1326 1046     		mov	r0, r2
 2373 1328 1946     		mov	r1, r3
 2374 132a FFF7FEFF 		bl	__aeabi_fadd
 2375 132e 0346     		mov	r3, r0
 2376 1330 1A46     		mov	r2, r3
 2377 1332 40F20003 		movw	r3, #:lower16:filter_yterm
 2378 1336 C0F20003 		movt	r3, #:upper16:filter_yterm
 2379 133a 9A60     		str	r2, [r3, #8]	@ float
 370:../Sources/MPU6050.c ****   	filter_xterm[1] = filter_xterm[2] + (ACCEL_XANGLE - COMPLEMENTARY_XANGLE) * 2 * timeConstant + G
 2380              		.loc 1 370 0
 2381 133c 40F20003 		movw	r3, #:lower16:filter_xterm
 2382 1340 C0F20003 		movt	r3, #:upper16:filter_xterm
 2383 1344 9C68     		ldr	r4, [r3, #8]	@ float
 2384 1346 40F20003 		movw	r3, #:lower16:ACCEL_XANGLE
 2385 134a C0F20003 		movt	r3, #:upper16:ACCEL_XANGLE
 2386 134e 1A68     		ldr	r2, [r3, #0]	@ float
 2387 1350 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2388 1354 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2389 1358 1B68     		ldr	r3, [r3, #0]	@ float
 2390 135a 1046     		mov	r0, r2
 2391 135c 1946     		mov	r1, r3
 2392 135e FFF7FEFF 		bl	__aeabi_fsub
 2393 1362 0346     		mov	r3, r0
 2394 1364 1846     		mov	r0, r3
 2395 1366 1946     		mov	r1, r3
 2396 1368 FFF7FEFF 		bl	__aeabi_fadd
 2397 136c 0346     		mov	r3, r0
 2398 136e 1A46     		mov	r2, r3
 2399 1370 40F20003 		movw	r3, #:lower16:timeConstant
 2400 1374 C0F20003 		movt	r3, #:upper16:timeConstant
 2401 1378 1B68     		ldr	r3, [r3, #0]	@ float
 2402 137a 1046     		mov	r0, r2
 2403 137c 1946     		mov	r1, r3
 2404 137e FFF7FEFF 		bl	__aeabi_fmul
 2405 1382 0346     		mov	r3, r0
 2406 1384 2046     		mov	r0, r4
 2407 1386 1946     		mov	r1, r3
 2408 1388 FFF7FEFF 		bl	__aeabi_fadd
 2409 138c 0346     		mov	r3, r0
 2410 138e 1A46     		mov	r2, r3
 2411 1390 40F20003 		movw	r3, #:lower16:GYRO_XRATE
 2412 1394 C0F20003 		movt	r3, #:upper16:GYRO_XRATE
 2413 1398 1B68     		ldr	r3, [r3, #0]	@ float
 2414 139a 1046     		mov	r0, r2
 2415 139c 1946     		mov	r1, r3
 2416 139e FFF7FEFF 		bl	__aeabi_fadd
 2417 13a2 0346     		mov	r3, r0
 2418 13a4 1A46     		mov	r2, r3
 2419 13a6 40F20003 		movw	r3, #:lower16:filter_xterm
 2420 13aa C0F20003 		movt	r3, #:upper16:filter_xterm
 2421 13ae 5A60     		str	r2, [r3, #4]	@ float
 371:../Sources/MPU6050.c ****   	filter_yterm[1] = filter_yterm[2] + (ACCEL_YANGLE - COMPLEMENTARY_YANGLE) * 2 * timeConstant + G
 2422              		.loc 1 371 0
 2423 13b0 40F20003 		movw	r3, #:lower16:filter_yterm
 2424 13b4 C0F20003 		movt	r3, #:upper16:filter_yterm
 2425 13b8 9C68     		ldr	r4, [r3, #8]	@ float
 2426 13ba 40F20003 		movw	r3, #:lower16:ACCEL_YANGLE
 2427 13be C0F20003 		movt	r3, #:upper16:ACCEL_YANGLE
 2428 13c2 1A68     		ldr	r2, [r3, #0]	@ float
 2429 13c4 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2430 13c8 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2431 13cc 1B68     		ldr	r3, [r3, #0]	@ float
 2432 13ce 1046     		mov	r0, r2
 2433 13d0 1946     		mov	r1, r3
 2434 13d2 FFF7FEFF 		bl	__aeabi_fsub
 2435 13d6 0346     		mov	r3, r0
 2436 13d8 1846     		mov	r0, r3
 2437 13da 1946     		mov	r1, r3
 2438 13dc FFF7FEFF 		bl	__aeabi_fadd
 2439 13e0 0346     		mov	r3, r0
 2440 13e2 1A46     		mov	r2, r3
 2441 13e4 40F20003 		movw	r3, #:lower16:timeConstant
 2442 13e8 C0F20003 		movt	r3, #:upper16:timeConstant
 2443 13ec 1B68     		ldr	r3, [r3, #0]	@ float
 2444 13ee 1046     		mov	r0, r2
 2445 13f0 1946     		mov	r1, r3
 2446 13f2 FFF7FEFF 		bl	__aeabi_fmul
 2447 13f6 0346     		mov	r3, r0
 2448 13f8 2046     		mov	r0, r4
 2449 13fa 1946     		mov	r1, r3
 2450 13fc FFF7FEFF 		bl	__aeabi_fadd
 2451 1400 0346     		mov	r3, r0
 2452 1402 1A46     		mov	r2, r3
 2453 1404 40F20003 		movw	r3, #:lower16:GYRO_YRATE
 2454 1408 C0F20003 		movt	r3, #:upper16:GYRO_YRATE
 2455 140c 1B68     		ldr	r3, [r3, #0]	@ float
 2456 140e 1046     		mov	r0, r2
 2457 1410 1946     		mov	r1, r3
 2458 1412 FFF7FEFF 		bl	__aeabi_fadd
 2459 1416 0346     		mov	r3, r0
 2460 1418 1A46     		mov	r2, r3
 2461 141a 40F20003 		movw	r3, #:lower16:filter_yterm
 2462 141e C0F20003 		movt	r3, #:upper16:filter_yterm
 2463 1422 5A60     		str	r2, [r3, #4]	@ float
 372:../Sources/MPU6050.c ****   	COMPLEMENTARY_XANGLE = (dt * filter_xterm[1]) + COMPLEMENTARY_XANGLE;
 2464              		.loc 1 372 0
 2465 1424 40F20003 		movw	r3, #:lower16:filter_xterm
 2466 1428 C0F20003 		movt	r3, #:upper16:filter_xterm
 2467 142c 5A68     		ldr	r2, [r3, #4]	@ float
 2468 142e 40F20003 		movw	r3, #:lower16:dt
 2469 1432 C0F20003 		movt	r3, #:upper16:dt
 2470 1436 1B68     		ldr	r3, [r3, #0]	@ float
 2471 1438 1046     		mov	r0, r2
 2472 143a 1946     		mov	r1, r3
 2473 143c FFF7FEFF 		bl	__aeabi_fmul
 2474 1440 0346     		mov	r3, r0
 2475 1442 1A46     		mov	r2, r3
 2476 1444 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2477 1448 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2478 144c 1B68     		ldr	r3, [r3, #0]	@ float
 2479 144e 1046     		mov	r0, r2
 2480 1450 1946     		mov	r1, r3
 2481 1452 FFF7FEFF 		bl	__aeabi_fadd
 2482 1456 0346     		mov	r3, r0
 2483 1458 1A46     		mov	r2, r3
 2484 145a 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_XANGLE
 2485 145e C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_XANGLE
 2486 1462 1A60     		str	r2, [r3, #0]	@ float
 373:../Sources/MPU6050.c ****   	COMPLEMENTARY_YANGLE = (dt * filter_yterm[1]) + COMPLEMENTARY_YANGLE;
 2487              		.loc 1 373 0
 2488 1464 40F20003 		movw	r3, #:lower16:filter_yterm
 2489 1468 C0F20003 		movt	r3, #:upper16:filter_yterm
 2490 146c 5A68     		ldr	r2, [r3, #4]	@ float
 2491 146e 40F20003 		movw	r3, #:lower16:dt
 2492 1472 C0F20003 		movt	r3, #:upper16:dt
 2493 1476 1B68     		ldr	r3, [r3, #0]	@ float
 2494 1478 1046     		mov	r0, r2
 2495 147a 1946     		mov	r1, r3
 2496 147c FFF7FEFF 		bl	__aeabi_fmul
 2497 1480 0346     		mov	r3, r0
 2498 1482 1A46     		mov	r2, r3
 2499 1484 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2500 1488 C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2501 148c 1B68     		ldr	r3, [r3, #0]	@ float
 2502 148e 1046     		mov	r0, r2
 2503 1490 1946     		mov	r1, r3
 2504 1492 FFF7FEFF 		bl	__aeabi_fadd
 2505 1496 0346     		mov	r3, r0
 2506 1498 1A46     		mov	r2, r3
 2507 149a 40F20003 		movw	r3, #:lower16:COMPLEMENTARY_YANGLE
 2508 149e C0F20003 		movt	r3, #:upper16:COMPLEMENTARY_YANGLE
 2509 14a2 1A60     		str	r2, [r3, #0]	@ float
 374:../Sources/MPU6050.c **** }
 2510              		.loc 1 374 0
 2511 14a4 98BD     		pop	{r3, r4, r7, pc}
 2512              		.cfi_endproc
 2513              	.LFE12:
 2515 14a6 00BF     		.align	2
 2516              		.global	Get_Temp
 2517              		.thumb
 2518              		.thumb_func
 2520              	Get_Temp:
 2521              	.LFB13:
 375:../Sources/MPU6050.c **** void Get_Temp()
 376:../Sources/MPU6050.c **** {
 2522              		.loc 1 376 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 8
 2525              		@ frame_needed = 1, uses_anonymous_args = 0
 2526 14a8 80B5     		push	{r7, lr}
 2527              	.LCFI34:
 2528              		.cfi_def_cfa_offset 8
 2529              		.cfi_offset 7, -8
 2530              		.cfi_offset 14, -4
 2531 14aa 82B0     		sub	sp, sp, #8
 2532              	.LCFI35:
 2533              		.cfi_def_cfa_offset 16
 2534 14ac 00AF     		add	r7, sp, #0
 2535              	.LCFI36:
 2536              		.cfi_def_cfa_register 7
 377:../Sources/MPU6050.c **** 	char temp[2];
 378:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_TEMP_OUT_H, &temp[0], 1);
 2537              		.loc 1 378 0
 2538 14ae 07F10403 		add	r3, r7, #4
 2539 14b2 4FF06800 		mov	r0, #104
 2540 14b6 4FF04101 		mov	r1, #65
 2541 14ba 1A46     		mov	r2, r3
 2542 14bc 4FF00103 		mov	r3, #1
 2543 14c0 FFF7FEFF 		bl	I2CReadMultiRegisters
 379:../Sources/MPU6050.c **** 	I2CReadMultiRegisters(MPU6050_ADDRESS, MPU6050_RA_TEMP_OUT_L, &temp[1], 1);
 2544              		.loc 1 379 0
 2545 14c4 07F10403 		add	r3, r7, #4
 2546 14c8 03F10103 		add	r3, r3, #1
 2547 14cc 4FF06800 		mov	r0, #104
 2548 14d0 4FF04201 		mov	r1, #66
 2549 14d4 1A46     		mov	r2, r3
 2550 14d6 4FF00103 		mov	r3, #1
 2551 14da FFF7FEFF 		bl	I2CReadMultiRegisters
 380:../Sources/MPU6050.c **** 	
 381:../Sources/MPU6050.c **** 	TEMP = (((((signed short)temp[0]<<8) & 0xFF00) | ((signed short)temp[1] & 0x00FF)));
 2552              		.loc 1 381 0
 2553 14de 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2554 14e0 4FEA0323 		lsl	r3, r3, #8
 2555 14e4 4FEA0343 		lsl	r3, r3, #16
 2556 14e8 4FEA1343 		lsr	r3, r3, #16
 2557 14ec 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 2558 14ee 1343     		orrs	r3, r3, r2
 2559 14f0 1846     		mov	r0, r3
 2560 14f2 FFF7FEFF 		bl	__aeabi_i2f
 2561 14f6 0246     		mov	r2, r0
 2562 14f8 40F20003 		movw	r3, #:lower16:TEMP
 2563 14fc C0F20003 		movt	r3, #:upper16:TEMP
 2564 1500 1A60     		str	r2, [r3, #0]	@ float
 382:../Sources/MPU6050.c **** 	TEMP = (TEMP/340)+36.53;	//see datasheet
 2565              		.loc 1 382 0
 2566 1502 40F20003 		movw	r3, #:lower16:TEMP
 2567 1506 C0F20003 		movt	r3, #:upper16:TEMP
 2568 150a 1B68     		ldr	r3, [r3, #0]	@ float
 2569 150c 1846     		mov	r0, r3
 2570 150e 4FF00001 		mov	r1, #0
 2571 1512 C4F2AA31 		movt	r1, 17322
 2572 1516 FFF7FEFF 		bl	__aeabi_fdiv
 2573 151a 0346     		mov	r3, r0
 2574 151c 1846     		mov	r0, r3
 2575 151e FFF7FEFF 		bl	__aeabi_f2d
 2576 1522 0246     		mov	r2, r0
 2577 1524 0B46     		mov	r3, r1
 2578 1526 1046     		mov	r0, r2
 2579 1528 1946     		mov	r1, r3
 2580 152a 0BA3     		adr	r3, .L25
 2581 152c D3E90023 		ldrd	r2, [r3]
 2582 1530 FFF7FEFF 		bl	__aeabi_dadd
 2583 1534 0246     		mov	r2, r0
 2584 1536 0B46     		mov	r3, r1
 2585 1538 1046     		mov	r0, r2
 2586 153a 1946     		mov	r1, r3
 2587 153c FFF7FEFF 		bl	__aeabi_d2f
 2588 1540 0246     		mov	r2, r0
 2589 1542 40F20003 		movw	r3, #:lower16:TEMP
 2590 1546 C0F20003 		movt	r3, #:upper16:TEMP
 2591 154a 1A60     		str	r2, [r3, #0]	@ float
 383:../Sources/MPU6050.c **** }
 2592              		.loc 1 383 0
 2593 154c 07F10807 		add	r7, r7, #8
 2594 1550 BD46     		mov	sp, r7
 2595 1552 80BD     		pop	{r7, pc}
 2596              	.L26:
 2597 1554 AFF30080 		.align	3
 2598              	.L25:
 2599 1558 A4703D0A 		.word	171798692
 2600 155c D7434240 		.word	1078084567
 2601              		.cfi_endproc
 2602              	.LFE13:
 2604              		.align	2
 2605              		.global	init_MPU6050
 2606              		.thumb
 2607              		.thumb_func
 2609              	init_MPU6050:
 2610              	.LFB14:
 384:../Sources/MPU6050.c **** void init_MPU6050()
 385:../Sources/MPU6050.c **** {
 2611              		.loc 1 385 0
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 1, uses_anonymous_args = 0
 2615 1560 80B5     		push	{r7, lr}
 2616              	.LCFI37:
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 1562 00AF     		add	r7, sp, #0
 2621              	.LCFI38:
 2622              		.cfi_def_cfa_register 7
 386:../Sources/MPU6050.c **** 	MPU6050_Test_I2C();
 2623              		.loc 1 386 0
 2624 1564 FFF7FEFF 		bl	MPU6050_Test_I2C
 387:../Sources/MPU6050.c **** 	MPU6050_Setup();
 2625              		.loc 1 387 0
 2626 1568 FFF7FEFF 		bl	MPU6050_Setup
 388:../Sources/MPU6050.c **** 	Delay_mS(1000);
 2627              		.loc 1 388 0
 2628 156c 4FF47A70 		mov	r0, #1000
 2629 1570 FFF7FEFF 		bl	Delay_mS
 389:../Sources/MPU6050.c **** 	Calibrate_Gyros();
 2630              		.loc 1 389 0
 2631 1574 FFF7FEFF 		bl	Calibrate_Gyros
 390:../Sources/MPU6050.c **** 	Calibrate_Accel();
 2632              		.loc 1 390 0
 2633 1578 FFF7FEFF 		bl	Calibrate_Accel
 391:../Sources/MPU6050.c **** }
 2634              		.loc 1 391 0
 2635 157c 80BD     		pop	{r7, pc}
 2636              		.cfi_endproc
 2637              	.LFE14:
 2639              	.Letext0:
 2640              		.file 2 "c:\\freescale\\cw mcu v10.6\\cross_tools\\arm-none-eabi-gcc-4_7_3\\bin\\../lib/gcc/arm-no
 2641              		.file 3 "E:/saj\341t/quadcopter/quadcopter v2.0/Sources/ff10b/src/integer.h"
 2642              		.file 4 "E:/saj\341t/quadcopter/quadcopter v2.0/Sources/ff10b/src/ff.h"
 2643              		.file 5 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions/K40/i
 2644              		.file 6 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/processor_specific_functions/K40/d
 2645              		.file 7 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/interrupts.h"
 2646              		.file 8 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/SDcard.h"
 2647              		.file 9 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/MPU6050.h"
 2648              		.file 10 "E:/saj\341t/quadcopter/quadcopter v2.0/Project_Headers/BMP180.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MPU6050.c
                            *COM*:00000004 I2C_Variable
                            *COM*:00000001 uart_data
                            *COM*:0000003c adc_data
                            *COM*:00000004 Kp
                            *COM*:00000004 Kd
                            *COM*:00000004 Ki
                            *COM*:00000004 zKp
                            *COM*:00000004 zKd
                            *COM*:00000004 basepower
                            *COM*:00000004 setpoint_x
                            *COM*:00000004 setpoint_y
                            *COM*:00000004 setpoint_z
                            *COM*:00000004 setpoint_alt
                            *COM*:00000004 batt1_vol
                            *COM*:00000004 batt2_vol
                            *COM*:00000004 batt3_vol
                            *COM*:00000004 BATT_VOLT
                            *COM*:00000230 FatFs
                            *COM*:00000224 fil
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:42     .bss:00000000 GYRO_XOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:39     .bss:00000000 $d
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:48     .bss:00000002 GYRO_YOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:54     .bss:00000004 GYRO_ZOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:60     .bss:00000006 ACCEL_XOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:66     .bss:00000008 ACCEL_YOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:72     .bss:0000000a ACCEL_ZOUT_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:78     .bss:0000000c GYRO_XANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:84     .bss:00000010 GYRO_YANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:90     .bss:00000014 GYRO_ZANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:96     .bss:00000018 GYRO_XOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:102    .bss:0000001a GYRO_YOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:108    .bss:0000001c GYRO_ZOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:114    .bss:0000001e ACCEL_XOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:120    .bss:00000020 ACCEL_YOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:126    .bss:00000022 ACCEL_ZOUT
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:132    .bss:00000024 ACCEL_Gx
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:138    .bss:00000028 ACCEL_Gy
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:144    .bss:0000002c ACCEL_Gz
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:150    .bss:00000030 ACCEL
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:156    .bss:00000038 GYRO_XRATE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:162    .bss:0000003c GYRO_YRATE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:168    .bss:00000040 GYRO_ZRATE
                            *COM*:00000004 ACCEL_XANGLE
                            *COM*:00000004 ACCEL_YANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:177    .data:00000000 gyro_xsensitivity
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:174    .data:00000000 $d
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:183    .data:00000004 gyro_ysensitivity
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:189    .data:00000008 gyro_zsensitivity
                            *COM*:00000004 a
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:196    .data:0000000c dt
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:203    .bss:00000044 COMPLEMENTARY_XANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:209    .bss:00000048 COMPLEMENTARY_YANGLE
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:215    .bss:0000004c filter_xterm
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:221    .bss:00000058 filter_yterm
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:227    .bss:00000064 XANGLE_OFFSET
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:233    .bss:00000068 YANGLE_OFFSET
                            *COM*:00000004 TEMP
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:241    .data:00000010 timeConstant
                            *COM*:0000000e MPU_6050_buffer
                            *COM*:00000002 AC1
                            *COM*:00000002 AC2
                            *COM*:00000002 AC3
                            *COM*:00000002 B1
                            *COM*:00000002 B2
                            *COM*:00000002 MB
                            *COM*:00000002 MC
                            *COM*:00000002 MD
                            *COM*:00000002 AC4
                            *COM*:00000002 AC5
                            *COM*:00000002 AC6
                            *COM*:00000004 T
                            *COM*:00000004 absolute_altittude
                            *COM*:00000004 start_altittude
                            *COM*:00000004 relative_altittude
                            *COM*:00000004 P
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:265    .bss:0000006c Gx_offset
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:271    .bss:00000070 Gy_offset
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:277    .bss:00000074 Gz_offset
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:280    .text:00000000 $t
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:285    .text:00000000 MPU6050_Test_I2C
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:336    .text:00000038 MPU6050_Setup
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:574    .text:000002e0 Calibrate_Accel
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1791   .text:00000dec read_MPU6050
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1833   .text:00000e18 Get_Angles
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:698    .text:000003ec Get_Accel_Values
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:849    .text:00000544 Convert_Accel
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:987    .text:00000684 Calibrate_Gyros
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1197   .text:00000864 Get_Gyro_Rates
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1453   .text:00000ae0 RAW_convert
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1741   .text:00000db8 $d
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1746   .text:00000dc0 $t
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:1751   .text:00000dc0 DMAread_MPU6050
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2118   .text:000010e0 $d
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2123   .text:000010e8 $t
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2128   .text:000010e8 complementary_filter
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2256   .text:0000120c second_order_complementary_filter
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2520   .text:000014a8 Get_Temp
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2599   .text:00001558 $d
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2604   .text:00001560 $t
C:\Users\Norbert\AppData\Local\Temp\cc9oljxN.s:2609   .text:00001560 init_MPU6050
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.6111752e1bd0a440bd5209819217ec83
                           .group:00000000 wm4.init.h.9.6215b16d96e0eb787ba872245cf7290f
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.95dee4059009fe3ab635a191bb73dc66
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.cf962ebbec441b3ac67502735f0765db
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.math.h.35.07c7797db9e98c6f49a07908290b45ed
                           .group:00000000 wm4.arm_cm4.h.9.78faaf62d86eb97a647af1ebafb07a11
                           .group:00000000 wm4.SysTick.h.3.6f4da7f8fb96288ed4bbb4cee119df1f
                           .group:00000000 wm4.Clock.h.3.a53d5ed3b11823f56a6aca141130352b
                           .group:00000000 wm4.MK40X256VMD100.h.96.72dc045102cc699ba440f8fa0b280550
                           .group:00000000 wm4.i2c.h.1.3f1b2e4dcc6bdba977be59d8a51e893b
                           .group:00000000 wm4.misc.h.9.baaf43d8702a540222c668d182f75475
                           .group:00000000 wm4.PWM.h.9.e42d58c40ee648255e53f4e4738007a9
                           .group:00000000 wm4.SPI.h.9.60f1cb4029034538da62861db028322d
                           .group:00000000 wm4.ADC.h.9.e7a31df2daef26f2c286655e5d3c10dd
                           .group:00000000 wm4.dma.h.9.96660ff1bef0aa806d84c8ba8408982d
                           .group:00000000 wm4.main.h.9.81396d5b502c9a6873858dab1b488864
                           .group:00000000 wm4.ffconf.h.6.276819a3a49a7ae37f54890eecb94e63
                           .group:00000000 wm4.ff.h.45.a981520ef44c98f5ccd354741039de67
                           .group:00000000 wm4.SDcard.h.13.e5067f919396cc348c323ee4b231e5ee
                           .group:00000000 wm4.diskio.h.6.da50361b93ad53e5f0de9110dc9ad28d
                           .group:00000000 wm4.MPU6050.h.9.b96a5ef9f24cf228b62beca78b916cfc
                           .group:00000000 wm4.BMP180.h.9.1e786092deac7b246665fc1406fb0f7b

UNDEFINED SYMBOLS
I2CReadRegister
I2CWriteRegister
__aeabi_f2d
__aeabi_dadd
__aeabi_ddiv
__aeabi_d2f
__aeabi_i2f
__aeabi_fmul
__aeabi_fsub
__aeabi_f2iz
__aeabi_fdiv
pow
Delay_mS
__aeabi_fadd
I2CReadMultiRegisters
DMA_I2CReadMultiRegisters
__aeabi_dmul
__aeabi_dsub
sqrt
atan
